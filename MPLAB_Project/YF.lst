

HI-TECH Software PIC18 PRO Macro Assembler V9.80 build 11162 
                                                                                               Sat Aug 02 11:41:54 2014

HI-TECH Software Omniscient Code Generator (PRO mode) build 11162
     1                           	processor	18F45K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53                           	psect	pa_nodes,global,class=CODE,delta=1
    54  0000                     tblptrh	equ	0xFF7
    55                           tblptrl	equ	0xFF6
    56                           tablat	equ	0xFF5
    57                           prodh	equ	0xFF4
    58                           prodl	equ	0xFF3
    59                           intcon	equ	0xFF2
    60                           wreg	equ	0xFE8
    61                           indf1	equ	0xFE7
    62                           fsr1h	equ	0xFE2
    63                           fsr1l	equ	0xFE1
    64                           indf2	equ	0xFDF
    65                           postinc2	equ	0xFDE
    66                           postdec2	equ	0xFDD
    67                           fsr2h	equ	0xFDA
    68                           fsr2l	equ	0xFD9
    69                           status	equ	0xFD8
    70                           
    71                           	psect	idataCOMRAM
    72  001ED8                     __pidataCOMRAM:
    73                           	opt stack 0
    74                           
    75                           ;initializer for _CANSdlc
    76  001ED8  08                 	db	8
    77                           
    78                           ;initializer for _turnoff
    79  001ED9  01                 	db	1
    80                           
    81                           ;initializer for _CANRdlc
    82  001EDA  08                 	db	8
    83                           
    84                           ;initializer for _eeprom_num
    85  001EDB  04                 	db	4
    86                           tblptrh	equ	0xFF7
    87                           tblptrl	equ	0xFF6
    88                           tablat	equ	0xFF5
    89                           prodh	equ	0xFF4
    90                           prodl	equ	0xFF3
    91                           intcon	equ	0xFF2
    92                           wreg	equ	0xFE8
    93                           indf1	equ	0xFE7
    94                           fsr1h	equ	0xFE2
    95                           fsr1l	equ	0xFE1
    96                           indf2	equ	0xFDF
    97                           postinc2	equ	0xFDE
    98                           postdec2	equ	0xFDD
    99                           fsr2h	equ	0xFDA
   100                           fsr2l	equ	0xFD9
   101                           status	equ	0xFD8
   102                           
   103                           	psect	idataBANK0
   104  0018AA                     __pidataBANK0:
   105                           	opt stack 0
   106                           
   107                           ;initializer for _cycledutyoff
   108  0018AA  00                 	db	0
   109  0018AB  80                 	db	128
   110  0018AC  3F                 	db	63
   111  0018AD  00                 	db	0
   112  0018AE  70                 	db	112
   113  0018AF  3F                 	db	63
   114  0018B0  00                 	db	0
   115  0018B1  60                 	db	96
   116  0018B2  3F                 	db	63
   117  0018B3  00                 	db	0
   118  0018B4  50                 	db	80
   119  0018B5  3F                 	db	63
   120  0018B6  00                 	db	0
   121  0018B7  40                 	db	64
   122  0018B8  3F                 	db	63
   123  0018B9  00                 	db	0
   124  0018BA  30                 	db	48
   125  0018BB  3F                 	db	63
   126  0018BC  00                 	db	0
   127  0018BD  20                 	db	32
   128  0018BE  3F                 	db	63
   129  0018BF  00                 	db	0
   130  0018C0  10                 	db	16
   131  0018C1  3F                 	db	63
   132  0018C2  00                 	db	0
   133  0018C3  00                 	db	0
   134  0018C4  3F                 	db	63
   135  0018C5  00                 	db	0
   136  0018C6  E0                 	db	224
   137  0018C7  3E                 	db	62
   138  0018C8  00                 	db	0
   139  0018C9  C0                 	db	192
   140  0018CA  3E                 	db	62
   141  0018CB  00                 	db	0
   142  0018CC  A0                 	db	160
   143  0018CD  3E                 	db	62
   144  0018CE  00                 	db	0
   145  0018CF  80                 	db	128
   146  0018D0  3E                 	db	62
   147  0018D1  00                 	db	0
   148  0018D2  40                 	db	64
   149  0018D3  3E                 	db	62
   150  0018D4  00                 	db	0
   151  0018D5  00                 	db	0
   152  0018D6  3E                 	db	62
   153  0018D7  00                 	db	0
   154  0018D8  00                 	db	0
   155  0018D9  00                 	db	0
   156                           
   157                           ;initializer for _cycledutyon
   158  0018DA  00                 	db	0
   159  0018DB  00                 	db	0
   160  0018DC  00                 	db	0
   161  0018DD  00                 	db	0
   162  0018DE  80                 	db	128
   163  0018DF  3D                 	db	61
   164  0018E0  00                 	db	0
   165  0018E1  00                 	db	0
   166  0018E2  3E                 	db	62
   167  0018E3  00                 	db	0
   168  0018E4  40                 	db	64
   169  0018E5  3E                 	db	62
   170  0018E6  00                 	db	0
   171  0018E7  80                 	db	128
   172  0018E8  3E                 	db	62
   173  0018E9  00                 	db	0
   174  0018EA  A0                 	db	160
   175  0018EB  3E                 	db	62
   176  0018EC  00                 	db	0
   177  0018ED  C0                 	db	192
   178  0018EE  3E                 	db	62
   179  0018EF  00                 	db	0
   180  0018F0  E0                 	db	224
   181  0018F1  3E                 	db	62
   182  0018F2  00                 	db	0
   183  0018F3  00                 	db	0
   184  0018F4  3F                 	db	63
   185  0018F5  00                 	db	0
   186  0018F6  10                 	db	16
   187  0018F7  3F                 	db	63
   188  0018F8  00                 	db	0
   189  0018F9  20                 	db	32
   190  0018FA  3F                 	db	63
   191  0018FB  00                 	db	0
   192  0018FC  30                 	db	48
   193  0018FD  3F                 	db	63
   194  0018FE  00                 	db	0
   195  0018FF  40                 	db	64
   196  001900  3F                 	db	63
   197  001901  00                 	db	0
   198  001902  50                 	db	80
   199  001903  3F                 	db	63
   200  001904  00                 	db	0
   201  001905  60                 	db	96
   202  001906  3F                 	db	63
   203  001907  00                 	db	0
   204  001908  80                 	db	128
   205  001909  3F                 	db	63
   206                           
   207                           ;initializer for _period
   208  00190A  40                 	db	64
   209  00190B  9C                 	db	156
   210  00190C  45                 	db	69
   211  00190D  50                 	db	80
   212  00190E  50                 	db	80
   213  00190F  45                 	db	69
   214  001910  40                 	db	64
   215  001911  1C                 	db	28
   216  001912  45                 	db	69
   217  001913  00                 	db	0
   218  001914  FA                 	db	250
   219  001915  44                 	db	68
   220  001916  00                 	db	0
   221  001917  7A                 	db	122
   222  001918  44                 	db	68
   223  001919  AD                 	db	173
   224  00191A  26                 	db	38
   225  00191B  44                 	db	68
   226  00191C  00                 	db	0
   227  00191D  FA                 	db	250
   228  00191E  43                 	db	67
   229  00191F  00                 	db	0
   230  001920  C8                 	db	200
   231  001921  43                 	db	67
   232  001922  A6                 	db	166
   233  001923  A6                 	db	166
   234  001924  43                 	db	67
   235  001925  00                 	db	0
   236  001926  48                 	db	72
   237  001927  43                 	db	67
   238                           tblptrh	equ	0xFF7
   239                           tblptrl	equ	0xFF6
   240                           tablat	equ	0xFF5
   241                           prodh	equ	0xFF4
   242                           prodl	equ	0xFF3
   243                           intcon	equ	0xFF2
   244                           wreg	equ	0xFE8
   245                           indf1	equ	0xFE7
   246                           fsr1h	equ	0xFE2
   247                           fsr1l	equ	0xFE1
   248                           indf2	equ	0xFDF
   249                           postinc2	equ	0xFDE
   250                           postdec2	equ	0xFDD
   251                           fsr2h	equ	0xFDA
   252                           fsr2l	equ	0xFD9
   253                           status	equ	0xFD8
   254                           
   255                           	psect	smallconst
   256  000F00                     __psmallconst:
   257                           	opt stack 0
   258  000F00                     _board_version:
   259                           	opt stack 0
   260  000F00  06                 	db	6
   261  000F01  0E                 	db	14
   262  000F02  08                 	db	8
   263  000F03  02                 	db	2
   264  000F04  00                 	db	0
   265  0000                     _ADRESH	set	4036
   266  0000                     _ADRESL	set	4035
   267  0000                     _ANCON1	set	3932
   268  0000                     _BRGCON1	set	3651
   269  0000                     _BRGCON2	set	3652
   270  0000                     _BRGCON3	set	3653
   271  0000                     _CANCON	set	3951
   272  0000                     _CANSTAT	set	3950
   273  0000                     _CIOCON	set	3952
   274  0000                     _ECANCON	set	3954
   275  0000                     _EEADR	set	3956
   276  0000                     _EEADRH	set	3957
   277  0000                     _EECON1	set	3967
   278  0000                     _EECON2	set	3966
   279  0000                     _EEDATA	set	3955
   280  0000                     _INTCON	set	4082
   281  0000                     _PORTB	set	3969
   282  0000                     _RXB0CON	set	3936
   283  0000                     _RXB0D0	set	3942
   284  0000                     _RXB0D1	set	3943
   285  0000                     _RXB0D2	set	3944
   286  0000                     _RXB0D3	set	3945
   287  0000                     _RXB0D4	set	3946
   288  0000                     _RXB0D5	set	3947
   289  0000                     _RXB0D6	set	3948
   290  0000                     _RXB0D7	set	3949
   291  0000                     _RXB0DLC	set	3941
   292  0000                     _RXB0EIDH	set	3939
   293  0000                     _RXB0EIDL	set	3940
   294  0000                     _RXB0SIDH	set	3937
   295  0000                     _RXB0SIDL	set	3938
   296  0000                     _RXB1CON	set	3888
   297  0000                     _RXB1D0	set	3894
   298  0000                     _RXB1D1	set	3895
   299  0000                     _RXB1D2	set	3896
   300  0000                     _RXB1D3	set	3897
   301  0000                     _RXB1D4	set	3898
   302  0000                     _RXB1D5	set	3899
   303  0000                     _RXB1D6	set	3900
   304  0000                     _RXB1D7	set	3901
   305  0000                     _RXB1DLC	set	3893
   306  0000                     _RXB1EIDH	set	3891
   307  0000                     _RXB1EIDL	set	3892
   308  0000                     _RXB1SIDH	set	3889
   309  0000                     _RXB1SIDL	set	3890
   310  0000                     _RXF0EIDH	set	3810
   311  0000                     _RXF0EIDL	set	3811
   312  0000                     _RXF0SIDH	set	3808
   313  0000                     _RXF0SIDL	set	3809
   314  0000                     _RXF1EIDH	set	3814
   315  0000                     _RXF1EIDL	set	3815
   316  0000                     _RXF1SIDH	set	3812
   317  0000                     _RXF1SIDL	set	3813
   318  0000                     _RXF2EIDH	set	3818
   319  0000                     _RXF2EIDL	set	3819
   320  0000                     _RXF2SIDH	set	3816
   321  0000                     _RXF2SIDL	set	3817
   322  0000                     _RXF3EIDH	set	3822
   323  0000                     _RXF3EIDL	set	3823
   324  0000                     _RXF3SIDH	set	3820
   325  0000                     _RXF3SIDL	set	3821
   326  0000                     _RXF4EIDH	set	3826
   327  0000                     _RXF4EIDL	set	3827
   328  0000                     _RXF4SIDH	set	3824
   329  0000                     _RXF4SIDL	set	3825
   330  0000                     _RXF5EIDH	set	3830
   331  0000                     _RXF5EIDL	set	3831
   332  0000                     _RXF5SIDH	set	3828
   333  0000                     _RXF5SIDL	set	3829
   334  0000                     _RXM0EIDH	set	3834
   335  0000                     _RXM0EIDL	set	3835
   336  0000                     _RXM0SIDH	set	3832
   337  0000                     _RXM0SIDL	set	3833
   338  0000                     _RXM1EIDH	set	3838
   339  0000                     _RXM1EIDL	set	3839
   340  0000                     _RXM1SIDH	set	3836
   341  0000                     _RXM1SIDL	set	3837
   342  0000                     _T1CON	set	4045
   343  0000                     _TMR0H	set	4055
   344  0000                     _TMR0L	set	4054
   345  0000                     _TMR1H	set	4047
   346  0000                     _TMR1L	set	4046
   347  0000                     _TRISB	set	3987
   348  0000                     _TRISC	set	3988
   349  0000                     _TRISD	set	3989
   350  0000                     _TXB0CON	set	3872
   351  0000                     _TXB0D0	set	3878
   352  0000                     _TXB0D1	set	3879
   353  0000                     _TXB0D2	set	3880
   354  0000                     _TXB0D3	set	3881
   355  0000                     _TXB0D4	set	3882
   356  0000                     _TXB0D5	set	3883
   357  0000                     _TXB0D6	set	3884
   358  0000                     _TXB0D7	set	3885
   359  0000                     _TXB0DLC	set	3877
   360  0000                     _TXB0EIDH	set	3875
   361  0000                     _TXB0EIDL	set	3876
   362  0000                     _TXB0SIDH	set	3873
   363  0000                     _TXB0SIDL	set	3874
   364  0000                     _TXB1CON	set	3856
   365  0000                     _TXB1D0	set	3862
   366  0000                     _TXB1D1	set	3863
   367  0000                     _TXB1D2	set	3864
   368  0000                     _TXB1D3	set	3865
   369  0000                     _TXB1D4	set	3866
   370  0000                     _TXB1D5	set	3867
   371  0000                     _TXB1D6	set	3868
   372  0000                     _TXB1D7	set	3869
   373  0000                     _TXB1DLC	set	3861
   374  0000                     _TXB1EIDH	set	3859
   375  0000                     _TXB1EIDL	set	3860
   376  0000                     _TXB1SIDH	set	3857
   377  0000                     _TXB1SIDL	set	3858
   378  0000                     _TXB2CON	set	3840
   379  0000                     _TXB2D0	set	3846
   380  0000                     _TXB2D1	set	3847
   381  0000                     _TXB2D2	set	3848
   382  0000                     _TXB2D3	set	3849
   383  0000                     _TXB2D4	set	3850
   384  0000                     _TXB2D5	set	3851
   385  0000                     _TXB2D6	set	3852
   386  0000                     _TXB2D7	set	3853
   387  0000                     _TXB2DLC	set	3845
   388  0000                     _TXB2EIDH	set	3843
   389  0000                     _TXB2EIDL	set	3844
   390  0000                     _TXB2SIDH	set	3841
   391  0000                     _TXB2SIDL	set	3842
   392  0000                     _ADIE	set	31982
   393  0000                     _ADIF	set	31990
   394  0000                     _ERRIF	set	31677
   395  0000                     _RC4	set	31764
   396  0000                     _RC5	set	31765
   397  0000                     _RC6	set	31766
   398  0000                     _RD2	set	31770
   399  0000                     _RD3	set	31771
   400  0000                     _RXB0IF	set	31672
   401  0000                     _RXB1IF	set	31673
   402  0000                     _SWDTEN	set	32392
   403  0000                     _T08BIT	set	32430
   404  0000                     _T0CS	set	32429
   405  0000                     _TMR0IE	set	32661
   406  0000                     _TMR0IF	set	32658
   407  0000                     _TMR0ON	set	32431
   408  0000                     _TMR1IE	set	31976
   409  0000                     _TMR1IF	set	31984
   410  0000                     _TXB0IF	set	31674
   411  0000                     _TXB1IF	set	31675
   412  0000                     _TXB2IF	set	31676
   413                           
   414                           ; #config settings
   415  000F05  00                 	db	0	; dummy byte at the end
   416  0000                     tblptrh	equ	0xFF7
   417                           tblptrl	equ	0xFF6
   418                           tablat	equ	0xFF5
   419                           prodh	equ	0xFF4
   420                           prodl	equ	0xFF3
   421                           intcon	equ	0xFF2
   422                           wreg	equ	0xFE8
   423                           indf1	equ	0xFE7
   424                           fsr1h	equ	0xFE2
   425                           fsr1l	equ	0xFE1
   426                           indf2	equ	0xFDF
   427                           postinc2	equ	0xFDE
   428                           postdec2	equ	0xFDD
   429                           fsr2h	equ	0xFDA
   430                           fsr2l	equ	0xFD9
   431                           status	equ	0xFD8
   432                           
   433                           	psect	cinit
   434  0019A0                     __pcinit:
   435                           	opt stack 0
   436  0019A0                     start_initialization:
   437                           	opt stack 0
   438                           
   439                           ; Clear objects allocated to BIGRAM (640 bytes)
   440  0019A0  EE0B  F0C1         	lfsr	0,__pbssBIGRAM
   441  0019A4  EE12 F080          	lfsr	1,640
   442  0019A8                     clear_0:
   443  0019A8  6AEE               	clrf	postinc0,c
   444  0019AA  50E5               	movf	postdec1,w,c
   445  0019AC  50E1               	movf	fsr1l,w,c
   446  0019AE  E1FC               	bnz	clear_0
   447  0019B0  50E2               	movf	fsr1h,w,c
   448  0019B2  E1FA               	bnz	clear_0
   449                           
   450                           ; Clear objects allocated to BANK0 (18 bytes)
   451  0019B4  EE00  F0DE         	lfsr	0,__pbssBANK0
   452  0019B8  0E12               	movlw	18
   453  0019BA                     clear_1:
   454  0019BA  6AEE               	clrf	postinc0,c
   455  0019BC  06E8               	decf	wreg,f,c
   456  0019BE  E1FD               	bnz	clear_1
   457                           
   458                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   459  0019C0  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   460                           
   461                           ; Clear objects allocated to COMRAM (31 bytes)
   462  0019C2  EE00  F03C         	lfsr	0,__pbssCOMRAM
   463  0019C6  0E1F               	movlw	31
   464  0019C8                     clear_2:
   465  0019C8  6AEE               	clrf	postinc0,c
   466  0019CA  06E8               	decf	wreg,f,c
   467  0019CC  E1FD               	bnz	clear_2
   468                           
   469                           ; Initialize objects allocated to BANK0 (126 bytes)
   470                           ; load TBLPTR registers with __pidataBANK0
   471  0019CE  0EAA               	movlw	low __pidataBANK0
   472  0019D0  6EF6               	movwf	tblptrl,c
   473  0019D2  0E18               	movlw	high __pidataBANK0
   474  0019D4  6EF7               	movwf	tblptrh,c
   475  0019D6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   476  0019D8  6EF8               	movwf	tblptru,c
   477  0019DA  EE00  F060         	lfsr	0,__pdataBANK0
   478  0019DE  EE10 F07E          	lfsr	1,126
   479  0019E2                     copy_data0:
   480  0019E2  0009               	tblrd		*+
   481  0019E4  CFF5 FFEE          	movff	tablat,postinc0
   482  0019E8  50E5               	movf	postdec1,w,c
   483  0019EA  50E1               	movf	fsr1l,w,c
   484  0019EC  E1FA               	bnz	copy_data0
   485                           
   486                           ; Initialize objects allocated to COMRAM (4 bytes)
   487                           ; load TBLPTR registers with __pidataCOMRAM
   488  0019EE  0ED8               	movlw	low __pidataCOMRAM
   489  0019F0  6EF6               	movwf	tblptrl,c
   490  0019F2  0E1E               	movlw	high __pidataCOMRAM
   491  0019F4  6EF7               	movwf	tblptrh,c
   492  0019F6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   493  0019F8  6EF8               	movwf	tblptru,c
   494  0019FA  EE00  F05B         	lfsr	0,__pdataCOMRAM
   495  0019FE  EE10 F004          	lfsr	1,4
   496  001A02                     copy_data1:
   497  001A02  0009               	tblrd		*+
   498  001A04  CFF5 FFEE          	movff	tablat,postinc0
   499  001A08  50E5               	movf	postdec1,w,c
   500  001A0A  50E1               	movf	fsr1l,w,c
   501  001A0C  E1FA               	bnz	copy_data1
   502  001A0E                     end_of_initialization:
   503                           	opt stack 0
   504  001A0E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   505  001A10  6EF8               	movwf	tblptru,c
   506  001A12  0100               	movlb	0
   507  001A14  EFA2  F00D         	goto	_main	;jump to C main() function
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           prodh	equ	0xFF4
   513                           prodl	equ	0xFF3
   514                           intcon	equ	0xFF2
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           indf1	equ	0xFE7
   518                           postdec1	equ	0xFE5
   519                           fsr1h	equ	0xFE2
   520                           fsr1l	equ	0xFE1
   521                           indf2	equ	0xFDF
   522                           postinc2	equ	0xFDE
   523                           postdec2	equ	0xFDD
   524                           fsr2h	equ	0xFDA
   525                           fsr2l	equ	0xFD9
   526                           status	equ	0xFD8
   527                           
   528                           	psect	bitbssCOMRAM
   529  0002F8                     __pbitbssCOMRAM:
   530                           	opt stack 0
   531  0002F8                     _switchmode:
   532                           	opt stack 0
   533  0002F8                     	ds	1
   534  0002F9                     _time5ms:
   535                           	opt stack 0
   536  0002F9                     	ds	1
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           prodh	equ	0xFF4
   542                           prodl	equ	0xFF3
   543                           intcon	equ	0xFF2
   544                           postinc0	equ	0xFEE
   545                           wreg	equ	0xFE8
   546                           indf1	equ	0xFE7
   547                           postdec1	equ	0xFE5
   548                           fsr1h	equ	0xFE2
   549                           fsr1l	equ	0xFE1
   550                           indf2	equ	0xFDF
   551                           postinc2	equ	0xFDE
   552                           postdec2	equ	0xFDD
   553                           fsr2h	equ	0xFDA
   554                           fsr2l	equ	0xFD9
   555                           status	equ	0xFD8
   556                           
   557                           	psect	bssCOMRAM
   558  00003C                     __pbssCOMRAM:
   559                           	opt stack 0
   560  00003C                     _time_counter:
   561                           	opt stack 0
   562  00003C                     	ds	2
   563  00003E                     _time_counters:
   564                           	opt stack 0
   565  00003E                     	ds	2
   566  000040                     _time_off_counter:
   567                           	opt stack 0
   568  000040                     	ds	2
   569  000042                     _time_on_counter:
   570                           	opt stack 0
   571  000042                     	ds	2
   572  000044                     _f_r_mod:
   573                           	opt stack 0
   574  000044                     	ds	1
   575  000045                     _force_status:
   576                           	opt stack 0
   577  000045                     	ds	1
   578  000046                     _heartbeat:
   579                           	opt stack 0
   580  000046                     	ds	1
   581  000047                     _lines:
   582                           	opt stack 0
   583  000047                     	ds	1
   584  000048                     _my_addr:
   585                           	opt stack 0
   586  000048                     	ds	1
   587  000049                     _rows:
   588                           	opt stack 0
   589  000049                     	ds	1
   590  00004A                     _run_mode:
   591                           	opt stack 0
   592  00004A                     	ds	1
   593  00004B                     _t500ms_count:
   594                           	opt stack 0
   595  00004B                     	ds	1
   596  00004C                     _yflash_status:
   597                           	opt stack 0
   598  00004C                     	ds	1
   599  00004D                     _CANSdata:
   600                           	opt stack 0
   601  00004D                     	ds	8
   602  000055                     _eeprom_addr:
   603                           	opt stack 0
   604  000055                     	ds	2
   605  000057                     _readwrite:
   606                           	opt stack 0
   607  000057                     	ds	2
   608  000059                     _yflash_CFG:
   609                           	opt stack 0
   610  000059                     	ds	2
   611                           tblptru	equ	0xFF8
   612                           tblptrh	equ	0xFF7
   613                           tblptrl	equ	0xFF6
   614                           tablat	equ	0xFF5
   615                           prodh	equ	0xFF4
   616                           prodl	equ	0xFF3
   617                           intcon	equ	0xFF2
   618                           postinc0	equ	0xFEE
   619                           wreg	equ	0xFE8
   620                           indf1	equ	0xFE7
   621                           postdec1	equ	0xFE5
   622                           fsr1h	equ	0xFE2
   623                           fsr1l	equ	0xFE1
   624                           indf2	equ	0xFDF
   625                           postinc2	equ	0xFDE
   626                           postdec2	equ	0xFDD
   627                           fsr2h	equ	0xFDA
   628                           fsr2l	equ	0xFD9
   629                           status	equ	0xFD8
   630                           
   631                           	psect	dataCOMRAM
   632  00005B                     __pdataCOMRAM:
   633                           	opt stack 0
   634  00005B                     _CANSdlc:
   635                           	opt stack 0
   636  00005B                     	ds	1
   637  00005C                     _turnoff:
   638                           	opt stack 0
   639  00005C                     	ds	1
   640  00005D                     _CANRdlc:
   641                           	opt stack 0
   642  00005D                     	ds	1
   643  00005E                     _eeprom_num:
   644                           	opt stack 0
   645  00005E                     	ds	1
   646                           tblptru	equ	0xFF8
   647                           tblptrh	equ	0xFF7
   648                           tblptrl	equ	0xFF6
   649                           tablat	equ	0xFF5
   650                           prodh	equ	0xFF4
   651                           prodl	equ	0xFF3
   652                           intcon	equ	0xFF2
   653                           postinc0	equ	0xFEE
   654                           wreg	equ	0xFE8
   655                           indf1	equ	0xFE7
   656                           postdec1	equ	0xFE5
   657                           fsr1h	equ	0xFE2
   658                           fsr1l	equ	0xFE1
   659                           indf2	equ	0xFDF
   660                           postinc2	equ	0xFDE
   661                           postdec2	equ	0xFDD
   662                           fsr2h	equ	0xFDA
   663                           fsr2l	equ	0xFD9
   664                           status	equ	0xFD8
   665                           
   666                           	psect	bssBANK0
   667  0000DE                     __pbssBANK0:
   668                           	opt stack 0
   669  0000DE                     _t1_cont:
   670                           	opt stack 0
   671  0000DE                     	ds	2
   672  0000E0                     _CANRdata:
   673                           	opt stack 0
   674  0000E0                     	ds	8
   675  0000E8                     _CANRid:
   676                           	opt stack 0
   677  0000E8                     	ds	4
   678  0000EC                     _CANSid:
   679                           	opt stack 0
   680  0000EC                     	ds	4
   681                           tblptru	equ	0xFF8
   682                           tblptrh	equ	0xFF7
   683                           tblptrl	equ	0xFF6
   684                           tablat	equ	0xFF5
   685                           prodh	equ	0xFF4
   686                           prodl	equ	0xFF3
   687                           intcon	equ	0xFF2
   688                           postinc0	equ	0xFEE
   689                           wreg	equ	0xFE8
   690                           indf1	equ	0xFE7
   691                           postdec1	equ	0xFE5
   692                           fsr1h	equ	0xFE2
   693                           fsr1l	equ	0xFE1
   694                           indf2	equ	0xFDF
   695                           postinc2	equ	0xFDE
   696                           postdec2	equ	0xFDD
   697                           fsr2h	equ	0xFDA
   698                           fsr2l	equ	0xFD9
   699                           status	equ	0xFD8
   700                           
   701                           	psect	dataBANK0
   702  000060                     __pdataBANK0:
   703                           	opt stack 0
   704  000060                     _cycledutyoff:
   705                           	opt stack 0
   706  000060                     	ds	48
   707  000090                     _cycledutyon:
   708                           	opt stack 0
   709  000090                     	ds	48
   710  0000C0                     _period:
   711                           	opt stack 0
   712  0000C0                     	ds	30
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           prodh	equ	0xFF4
   718                           prodl	equ	0xFF3
   719                           intcon	equ	0xFF2
   720                           postinc0	equ	0xFEE
   721                           wreg	equ	0xFE8
   722                           indf1	equ	0xFE7
   723                           postdec1	equ	0xFE5
   724                           fsr1h	equ	0xFE2
   725                           fsr1l	equ	0xFE1
   726                           indf2	equ	0xFDF
   727                           postinc2	equ	0xFDE
   728                           postdec2	equ	0xFDD
   729                           fsr2h	equ	0xFDA
   730                           fsr2l	equ	0xFD9
   731                           status	equ	0xFD8
   732                           
   733                           	psect	bssBIGRAM
   734  000BC1                     __pbssBIGRAM:
   735                           	opt stack 0
   736  000BC1                     _time_off:
   737                           	opt stack 0
   738  000BC1                     	ds	320
   739  000D01                     _time_on:
   740                           	opt stack 0
   741  000D01                     	ds	320
   742                           tblptru	equ	0xFF8
   743                           tblptrh	equ	0xFF7
   744                           tblptrl	equ	0xFF6
   745                           tablat	equ	0xFF5
   746                           prodh	equ	0xFF4
   747                           prodl	equ	0xFF3
   748                           intcon	equ	0xFF2
   749                           postinc0	equ	0xFEE
   750                           wreg	equ	0xFE8
   751                           indf1	equ	0xFE7
   752                           postdec1	equ	0xFE5
   753                           fsr1h	equ	0xFE2
   754                           fsr1l	equ	0xFE1
   755                           indf2	equ	0xFDF
   756                           postinc2	equ	0xFDE
   757                           postdec2	equ	0xFDD
   758                           fsr2h	equ	0xFDA
   759                           fsr2l	equ	0xFD9
   760                           status	equ	0xFD8
   761                           
   762                           	psect	cstackCOMRAM
   763  000001                     __pcstackCOMRAM:
   764                           	opt stack 0
   765  000001                     ??_GetLampBoardAddr:
   766                           	opt stack 0
   767  000001                     ?_CANFilterSet:
   768                           	opt stack 0
   769  000001                     ?_CANErrClr:
   770                           	opt stack 0
   771  000001                     ??_CANErrClr:
   772                           	opt stack 0
   773  000001                     ?_CANSetID:
   774                           	opt stack 0
   775  000001                     ?_CANInit:
   776                           	opt stack 0
   777  000001                     ?_EEPROMRead:
   778                           	opt stack 0
   779  000001                     ?_EEPROMWrite:
   780                           	opt stack 0
   781  000001                     ?_delayus:
   782                           	opt stack 0
   783  000001                     ?_LED_On_Disp:
   784                           	opt stack 0
   785  000001                     ??_LED_On_Disp:
   786                           	opt stack 0
   787  000001                     ?_LED_Off_Disp:
   788                           	opt stack 0
   789  000001                     ??_LED_Off_Disp:
   790                           	opt stack 0
   791  000001                     ?_YellowFlash:
   792                           	opt stack 0
   793  000001                     ??_YellowFlash:
   794                           	opt stack 0
   795  000001                     ?_TMR0IntServer:
   796                           	opt stack 0
   797  000001                     ??_TMR0IntServer:
   798                           	opt stack 0
   799  000001                     ?_TMR1IntServer:
   800                           	opt stack 0
   801  000001                     ??_TMR1IntServer:
   802                           	opt stack 0
   803  000001                     ?_ADIntServer:
   804                           	opt stack 0
   805  000001                     ??_ADIntServer:
   806                           	opt stack 0
   807  000001                     ?_IntServer:
   808                           	opt stack 0
   809  000001                     ??_IntServer:
   810                           	opt stack 0
   811  000001                     ?_PORTInit:
   812                           	opt stack 0
   813  000001                     ??_PORTInit:
   814                           	opt stack 0
   815  000001                     ?_IntManager:
   816                           	opt stack 0
   817  000001                     ??_IntManager:
   818                           	opt stack 0
   819  000001                     ?_CANSendConfirm:
   820                           	opt stack 0
   821  000001                     ?_CANSendID:
   822                           	opt stack 0
   823  000001                     ?_CANWriteID:
   824                           	opt stack 0
   825  000001                     ?_Read_YFlash_CFG:
   826                           	opt stack 0
   827  000001                     ?_YFlashNewConfigure:
   828                           	opt stack 0
   829  000001                     ?_CANReadVersion:
   830                           	opt stack 0
   831  000001                     ?_HeartbeatTest:
   832                           	opt stack 0
   833  000001                     ?_main:
   834                           	opt stack 0
   835  000001                     ?_GetLampBoardAddr:
   836                           	opt stack 0
   837  000001                     ?_GetAddr:
   838                           	opt stack 0
   839  000001                     ?_CANSend:
   840                           	opt stack 0
   841  000001                     ?___lwdiv:
   842                           	opt stack 0
   843  000001                     ?___ftpack:
   844                           	opt stack 0
   845  000001                     CANFilterSet@f_type:
   846                           	opt stack 0
   847  000001                     CANSetID@f_type:
   848                           	opt stack 0
   849  000001                     CANSend@id:
   850                           	opt stack 0
   851  000001                     CANSend@dat:
   852                           	opt stack 0
   853  000001                     EEPROMRead@num:
   854                           	opt stack 0
   855  000001                     EEPROMWrite@num:
   856                           	opt stack 0
   857  000001                     GetLampBoardAddr@i:
   858                           	opt stack 0
   859  000001                     delayus@us:
   860                           	opt stack 0
   861  000001                     ___lwdiv@dividend:
   862                           	opt stack 0
   863  000001                     ___ftpack@arg:
   864                           	opt stack 0
   865                           
   866                           ; 3 bytes @ 0x0
   867  000001                     	ds	1
   868  000002                     ??_CANFilterSet:
   869                           	opt stack 0
   870  000002                     ??_CANSetID:
   871                           	opt stack 0
   872  000002                     CANFilterSet@board_addr:
   873                           	opt stack 0
   874  000002                     CANSend@dlc:
   875                           	opt stack 0
   876  000002                     EEPROMRead@dat:
   877                           	opt stack 0
   878  000002                     EEPROMWrite@dat:
   879                           	opt stack 0
   880                           
   881                           ; 2 bytes @ 0x1
   882  000002                     	ds	1
   883  000003                     ??_CANSend:
   884                           	opt stack 0
   885  000003                     ??_EEPROMRead:
   886                           	opt stack 0
   887  000003                     ??_delayus:
   888                           	opt stack 0
   889  000003                     ??_CANSendConfirm:
   890                           	opt stack 0
   891  000003                     ??_CANReadVersion:
   892                           	opt stack 0
   893  000003                     GetLampBoardAddr@addr:
   894                           	opt stack 0
   895  000003                     CANSetID@board_addr:
   896                           	opt stack 0
   897  000003                     EEPROMRead@addr:
   898                           	opt stack 0
   899  000003                     CANSendConfirm@i:
   900                           	opt stack 0
   901  000003                     delayus@i:
   902                           	opt stack 0
   903  000003                     ___lwdiv@divisor:
   904                           	opt stack 0
   905                           
   906                           ; 2 bytes @ 0x2
   907  000003                     	ds	1
   908  000004                     ??_GetAddr:
   909                           	opt stack 0
   910  000004                     ??_CANInit:
   911                           	opt stack 0
   912  000004                     ??_EEPROMWrite:
   913                           	opt stack 0
   914  000004                     ??_CANSendID:
   915                           	opt stack 0
   916  000004                     ??_Read_YFlash_CFG:
   917                           	opt stack 0
   918  000004                     ??_HeartbeatTest:
   919                           	opt stack 0
   920  000004                     GetAddr@board_type:
   921                           	opt stack 0
   922  000004                     CANInit@b_addr:
   923                           	opt stack 0
   924  000004                     EEPROMWrite@addr:
   925                           	opt stack 0
   926  000004                     CANSendID@sm:
   927                           	opt stack 0
   928  000004                     ___ftpack@exp:
   929                           	opt stack 0
   930                           
   931                           ; 1 bytes @ 0x3
   932  000004                     	ds	1
   933  000005                     ?_delayms:
   934                           	opt stack 0
   935  000005                     ??_CANWriteID:
   936                           	opt stack 0
   937  000005                     ??___lwdiv:
   938                           	opt stack 0
   939  000005                     GetAddr@rel:
   940                           	opt stack 0
   941  000005                     CANWriteID@fm:
   942                           	opt stack 0
   943  000005                     ___ftpack@sign:
   944                           	opt stack 0
   945  000005                     delayms@ms:
   946                           	opt stack 0
   947  000005                     ___lwdiv@quotient:
   948                           	opt stack 0
   949                           
   950                           ; 2 bytes @ 0x4
   951  000005                     	ds	1
   952  000006                     ??___ftpack:
   953                           	opt stack 0
   954  000006                     ?_CANRecv:
   955                           	opt stack 0
   956  000006                     CANRecv@dat:
   957                           	opt stack 0
   958                           
   959                           ; 1 bytes @ 0x5
   960  000006                     	ds	1
   961  000007                     ??_delayms:
   962                           	opt stack 0
   963  000007                     CANRecv@dlc:
   964                           	opt stack 0
   965  000007                     ___lwdiv@counter:
   966                           	opt stack 0
   967  000007                     delayms@i:
   968                           	opt stack 0
   969                           
   970                           ; 2 bytes @ 0x6
   971  000007                     	ds	1
   972  000008                     ??_CANRecv:
   973                           	opt stack 0
   974  000008                     CANRecv@id:
   975                           	opt stack 0
   976                           
   977                           ; 1 bytes @ 0x7
   978  000008                     	ds	1
   979  000009                     ?___ftmul:
   980                           	opt stack 0
   981  000009                     ___ftmul@f1:
   982                           	opt stack 0
   983                           
   984                           ; 3 bytes @ 0x8
   985  000009                     	ds	3
   986  00000C                     ___ftmul@f2:
   987                           	opt stack 0
   988                           
   989                           ; 3 bytes @ 0xB
   990  00000C                     	ds	3
   991  00000F                     ??___ftmul:
   992                           	opt stack 0
   993                           
   994                           ; 0 bytes @ 0xE
   995  00000F                     	ds	5
   996  000014                     ___ftmul@exp:
   997                           	opt stack 0
   998                           
   999                           ; 1 bytes @ 0x13
  1000  000014                     	ds	1
  1001  000015                     ___ftmul@f3_as_product:
  1002                           	opt stack 0
  1003                           
  1004                           ; 3 bytes @ 0x14
  1005  000015                     	ds	3
  1006  000018                     ___ftmul@cntr:
  1007                           	opt stack 0
  1008                           
  1009                           ; 1 bytes @ 0x17
  1010  000018                     	ds	1
  1011  000019                     ___ftmul@sign:
  1012                           	opt stack 0
  1013                           
  1014                           ; 1 bytes @ 0x18
  1015  000019                     	ds	1
  1016  00001A                     ?___fttol:
  1017                           	opt stack 0
  1018  00001A                     ___fttol@f1:
  1019                           	opt stack 0
  1020                           
  1021                           ; 3 bytes @ 0x19
  1022  00001A                     	ds	4
  1023  00001E                     ??___fttol:
  1024                           	opt stack 0
  1025                           
  1026                           ; 0 bytes @ 0x1D
  1027  00001E                     	ds	5
  1028  000023                     ___fttol@sign1:
  1029                           	opt stack 0
  1030                           
  1031                           ; 1 bytes @ 0x22
  1032  000023                     	ds	1
  1033  000024                     ___fttol@lval:
  1034                           	opt stack 0
  1035                           
  1036                           ; 4 bytes @ 0x23
  1037  000024                     	ds	4
  1038  000028                     ___fttol@exp1:
  1039                           	opt stack 0
  1040                           
  1041                           ; 1 bytes @ 0x27
  1042  000028                     	ds	1
  1043  000029                     ?_CalculateTime25msCounter:
  1044                           	opt stack 0
  1045  000029                     CalculateTime25msCounter@line:
  1046                           	opt stack 0
  1047                           
  1048                           ; 1 bytes @ 0x28
  1049  000029                     	ds	1
  1050  00002A                     ??_CalculateTime25msCounter:
  1051                           	opt stack 0
  1052                           
  1053                           ; 0 bytes @ 0x29
  1054  00002A                     	ds	6
  1055  000030                     CalculateTime25msCounter@row:
  1056                           	opt stack 0
  1057                           
  1058                           ; 1 bytes @ 0x2F
  1059  000030                     	ds	1
  1060  000031                     CalculateTime25msCounter@i:
  1061                           	opt stack 0
  1062                           
  1063                           ; 2 bytes @ 0x30
  1064  000031                     	ds	2
  1065  000033                     CalculateTime25msCounter@j:
  1066                           	opt stack 0
  1067                           
  1068                           ; 2 bytes @ 0x32
  1069  000033                     	ds	2
  1070  000035                     ??_YFlashNewConfigure:
  1071                           	opt stack 0
  1072  000035                     ?_CANDATAAnalyzing:
  1073                           	opt stack 0
  1074  000035                     CANDATAAnalyzing@dat:
  1075                           	opt stack 0
  1076                           
  1077                           ; 1 bytes @ 0x34
  1078  000035                     	ds	1
  1079  000036                     CANDATAAnalyzing@dlc:
  1080                           	opt stack 0
  1081                           
  1082                           ; 1 bytes @ 0x35
  1083  000036                     	ds	1
  1084  000037                     ??_CANDATAAnalyzing:
  1085                           	opt stack 0
  1086                           
  1087                           ; 0 bytes @ 0x36
  1088  000037                     	ds	4
  1089  00003B                     CANDATAAnalyzing@id:
  1090                           	opt stack 0
  1091                           
  1092                           ; 1 bytes @ 0x3A
  1093  00003B                     	ds	1
  1094  00003C                     ??_main:
  1095                           	opt stack 0
  1096                           tblptru	equ	0xFF8
  1097                           tblptrh	equ	0xFF7
  1098                           tblptrl	equ	0xFF6
  1099                           tablat	equ	0xFF5
  1100                           prodh	equ	0xFF4
  1101                           prodl	equ	0xFF3
  1102                           intcon	equ	0xFF2
  1103                           postinc0	equ	0xFEE
  1104                           wreg	equ	0xFE8
  1105                           indf1	equ	0xFE7
  1106                           postdec1	equ	0xFE5
  1107                           fsr1h	equ	0xFE2
  1108                           fsr1l	equ	0xFE1
  1109                           indf2	equ	0xFDF
  1110                           postinc2	equ	0xFDE
  1111                           postdec2	equ	0xFDD
  1112                           fsr2h	equ	0xFDA
  1113                           fsr2l	equ	0xFD9
  1114                           status	equ	0xFD8
  1115                           
  1116                           ; 0 bytes @ 0x3B
  1117 ;;
  1118 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1119 ;;
  1120 ;; *************** function _main *****************
  1121 ;; Defined at:
  1122 ;;		line 809 in file "G:\working\YellowFlashingController\YellowFlash.C"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;		None               void
  1129 ;; Registers used:
  1130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1140 ;;Total ram usage:        0 bytes
  1141 ;; Hardware stack levels required when called:    9
  1142 ;; This function calls:
  1143 ;;		_delayms
  1144 ;;		_PORTInit
  1145 ;;		_IntManager
  1146 ;;		_GetAddr
  1147 ;;		_CANInit
  1148 ;;		_CANRecv
  1149 ;;		_CANDATAAnalyzing
  1150 ;;		_HeartbeatTest
  1151 ;; This function is called by:
  1152 ;;		Startup code after reset
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text0
  1157  001B44                     __ptext0:
  1158                           	opt stack 0
  1159  001B44                     _main:
  1160                           	opt stack 22
  1161                           
  1162                           ;YellowFlash.C: 812: delayms(500);
  1163  001B44  0E01               	movlw	1
  1164  001B46  6E06               	movwf	?_delayms+1,c
  1165  001B48  0EF4               	movlw	244
  1166  001B4A  6E05               	movwf	?_delayms,c
  1167  001B4C  EC1A  F00F         	call	_delayms	;wreg free
  1168                           
  1169                           ;YellowFlash.C: 813: PORTInit();
  1170  001B50  EC4D  F00F         	call	_PORTInit	;wreg free
  1171                           
  1172                           ; BSR set to: 15
  1173                           ;YellowFlash.C: 814: IntManager();
  1174  001B54  EC07  F00F         	call	_IntManager	;wreg free
  1175                           
  1176                           ; BSR set to: 15
  1177                           ;YellowFlash.C: 815: my_addr =GetAddr(0x06);
  1178  001B58  0E06               	movlw	6
  1179  001B5A  EC5D  F00E         	call	_GetAddr
  1180  001B5E  6E48               	movwf	_my_addr,c
  1181                           
  1182                           ; BSR set to: 15
  1183                           ;YellowFlash.C: 817: sta = 0X01;
  1184  001B60  5048               	movf	_my_addr,w,c
  1185  001B62  ECCB  F00D         	call	_CANInit
  1186                           
  1187                           ;YellowFlash.C: 818: SWDTEN =1;
  1188  001B66  80D1               	bsf	4049,0,c	;volatile
  1189  001B68                     l3215:
  1190                           
  1191                           ;YellowFlash.C: 824: if(CANRecv(CANRid,CANRdata,&CANRdlc))
  1192  001B68  0100               	movlb	0	; () banked
  1193  001B6A  0EE0               	movlw	low _CANRdata
  1194  001B6C  6E06               	movwf	?_CANRecv,c
  1195  001B6E  0E5D               	movlw	low _CANRdlc
  1196  001B70  6E07               	movwf	?_CANRecv+1,c
  1197  001B72  0EE8               	movlw	_CANRid& (0+255)
  1198  001B74  EC83  F007         	call	_CANRecv
  1199  001B78  E308               	bnc	l3219
  1200                           
  1201                           ;YellowFlash.C: 825: {
  1202                           ;YellowFlash.C: 827: CANDATAAnalyzing(CANRid,CANRdata,CANRdlc);
  1203  001B7A  0100               	movlb	0	; () banked
  1204  001B7C  0EE0               	movlw	low _CANRdata
  1205  001B7E  6E35               	movwf	?_CANDATAAnalyzing,c
  1206  001B80  C05D  F036         	movff	_CANRdlc,?_CANDATAAnalyzing+1
  1207  001B84  0EE8               	movlw	_CANRid& (0+255)
  1208  001B86  EC77  F008         	call	_CANDATAAnalyzing
  1209  001B8A                     l3219:
  1210  001B8A  0004               	clrwdt		;# 
  1211                           
  1212                           ;YellowFlash.C: 830: if(force_status)
  1213  001B8C  5045               	movf	_force_status,w,c
  1214  001B8E  E1EC               	bnz	l3215
  1215                           
  1216                           ;YellowFlash.C: 832: else
  1217                           ;YellowFlash.C: 833: {
  1218                           ;YellowFlash.C: 834: HeartbeatTest();
  1219  001B90  EC96  F00E         	call	_HeartbeatTest	;wreg free
  1220  001B94  D7E9               	goto	l3215
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           prodh	equ	0xFF4
  1226                           prodl	equ	0xFF3
  1227                           intcon	equ	0xFF2
  1228                           postinc0	equ	0xFEE
  1229                           wreg	equ	0xFE8
  1230                           indf1	equ	0xFE7
  1231                           postdec1	equ	0xFE5
  1232                           fsr1h	equ	0xFE2
  1233                           fsr1l	equ	0xFE1
  1234                           indf2	equ	0xFDF
  1235                           postinc2	equ	0xFDE
  1236                           postdec2	equ	0xFDD
  1237                           fsr2h	equ	0xFDA
  1238                           fsr2l	equ	0xFD9
  1239                           status	equ	0xFD8
  1240                           
  1241 ;; *************** function _CANRecv *****************
  1242 ;; Defined at:
  1243 ;;		line 259 in file "G:\working\YellowFlashingController\CAN.H"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  id              1    wreg     PTR unsigned char 
  1246 ;;		 -> CANRid(4), 
  1247 ;;  dat             1    5[COMRAM] PTR unsigned char 
  1248 ;;		 -> CANRdata(8), 
  1249 ;;  dlc             1    6[COMRAM] PTR unsigned char 
  1250 ;;		 -> CANRdlc(1), 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  id              1    7[COMRAM] PTR unsigned char 
  1253 ;;		 -> CANRid(4), 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;		None               void
  1256 ;; Registers used:
  1257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : F/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: FFFFFFF0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1263 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1264 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1266 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1267 ;;Total ram usage:        3 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:    6
  1270 ;; This function calls:
  1271 ;;		_GetAddr
  1272 ;;		_CANInit
  1273 ;; This function is called by:
  1274 ;;		_main
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text1
  1279  000F06                     __ptext1:
  1280                           	opt stack 0
  1281  000F06                     __end_of_main:
  1282                           	opt stack 0
  1283  000F06                     _CANRecv:
  1284                           	opt stack 24
  1285                           
  1286                           ;CANRecv@id stored from wreg
  1287  000F06  CFE8 F008          	movff	wreg,CANRecv@id
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;CAN.H: 262: if(RXB0IF ==1)
  1291  000F0A  A077               	btfss	3959,0,c	;volatile
  1292  000F0C  D039               	goto	l362
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;CAN.H: 263: {
  1296                           ;CAN.H: 264: RXB0IF =0;
  1297  000F0E  9077               	bcf	3959,0,c	;volatile
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;CAN.H: 265: RXB0CON &= 0x7f;
  1301  000F10  9E60               	bcf	3936,7,c	;volatile
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;CAN.H: 266: id[0] = RXB0SIDH;
  1305  000F12  5008               	movf	CANRecv@id,w,c
  1306  000F14  6ED9               	movwf	fsr2l,c
  1307  000F16  6ADA               	clrf	fsr2h,c
  1308  000F18  CF61 FFDF          	movff	3937,indf2	;volatile
  1309                           
  1310                           ;CAN.H: 267: id[1] = RXB0SIDL;
  1311  000F1C  5008               	movf	CANRecv@id,w,c
  1312  000F1E  6ED9               	movwf	fsr2l,c
  1313  000F20  6ADA               	clrf	fsr2h,c
  1314  000F22  2AD9               	incf	fsr2l,f,c
  1315  000F24  6ADA               	clrf	fsr2h,c
  1316  000F26  CF62 FFDF          	movff	3938,indf2	;volatile
  1317                           
  1318                           ;CAN.H: 268: id[2] = RXB0EIDH;
  1319  000F2A  D8BE               	call	PL19	;call to abstracted procedure
  1320  000F2C  CF63 FFDF          	movff	3939,indf2	;volatile
  1321                           
  1322                           ;CAN.H: 269: id[3] = RXB0EIDL;
  1323  000F30  D8C2               	call	PL20	;call to abstracted procedure
  1324  000F32  CF64 FFDF          	movff	3940,indf2	;volatile
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;CAN.H: 271: *dlc =RXB0DLC;
  1328  000F36  5007               	movf	CANRecv@dlc,w,c
  1329  000F38  6ED9               	movwf	fsr2l,c
  1330  000F3A  6ADA               	clrf	fsr2h,c
  1331  000F3C  CF65 FFDF          	movff	3941,indf2	;volatile
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;CAN.H: 273: dat[0] = RXB0D0;
  1335  000F40  5006               	movf	CANRecv@dat,w,c
  1336  000F42  6ED9               	movwf	fsr2l,c
  1337  000F44  6ADA               	clrf	fsr2h,c
  1338  000F46  CF66 FFDF          	movff	3942,indf2	;volatile
  1339                           
  1340                           ;CAN.H: 274: dat[1] = RXB0D1;
  1341  000F4A  5006               	movf	CANRecv@dat,w,c
  1342  000F4C  6ED9               	movwf	fsr2l,c
  1343  000F4E  6ADA               	clrf	fsr2h,c
  1344  000F50  2AD9               	incf	fsr2l,f,c
  1345  000F52  6ADA               	clrf	fsr2h,c
  1346  000F54  CF67 FFDF          	movff	3943,indf2	;volatile
  1347                           
  1348                           ;CAN.H: 275: dat[2] = RXB0D2;
  1349  000F58  D8B5               	call	PL21	;call to abstracted procedure
  1350  000F5A  CF68 FFDF          	movff	3944,indf2	;volatile
  1351                           
  1352                           ;CAN.H: 276: dat[3] = RXB0D3;
  1353  000F5E  D8B9               	call	PL22	;call to abstracted procedure
  1354  000F60  CF69 FFDF          	movff	3945,indf2	;volatile
  1355                           
  1356                           ;CAN.H: 277: dat[4] = RXB0D4;
  1357  000F64  D88C               	call	PL16	;call to abstracted procedure
  1358  000F66  CF6A FFDF          	movff	3946,indf2	;volatile
  1359                           
  1360                           ;CAN.H: 278: dat[5] = RXB0D5;
  1361  000F6A  D8BA               	call	PL24	;call to abstracted procedure
  1362  000F6C  CF6B FFDF          	movff	3947,indf2	;volatile
  1363                           
  1364                           ;CAN.H: 279: dat[6] = RXB0D6;
  1365  000F70  D88D               	call	PL17	;call to abstracted procedure
  1366  000F72  CF6C FFDF          	movff	3948,indf2	;volatile
  1367                           
  1368                           ;CAN.H: 280: dat[7] = RXB0D7;
  1369  000F76  D891               	call	PL18	;call to abstracted procedure
  1370  000F78  CF6D FFDF          	movff	3949,indf2	;volatile
  1371  000F7C                     l2675:
  1372                           
  1373                           ;CAN.H: 281: return 1;
  1374  000F7C  80D8               	bsf	status,0,c
  1375  000F7E  0012               	return	
  1376  000F80                     l362:
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;CAN.H: 282: }
  1380                           ;CAN.H: 283: if(RXB1IF ==1)
  1381  000F80  A277               	btfss	3959,1,c	;volatile
  1382  000F82  D039               	goto	l364
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;CAN.H: 284: {
  1386                           ;CAN.H: 285: RXB1IF =0;
  1387  000F84  9277               	bcf	3959,1,c	;volatile
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;CAN.H: 286: RXB1CON &= 0x7f;
  1391  000F86  010F               	movlb	15	; () banked
  1392  000F88  9F30               	bcf	48,7,b	;volatile
  1393                           
  1394                           ; BSR set to: 15
  1395                           ;CAN.H: 287: id[0] = RXB1SIDH;
  1396  000F8A  5008               	movf	CANRecv@id,w,c
  1397  000F8C  6ED9               	movwf	fsr2l,c
  1398  000F8E  6ADA               	clrf	fsr2h,c
  1399  000F90  CF31 FFDF          	movff	3889,indf2	;volatile
  1400                           
  1401                           ; BSR set to: 15
  1402                           ;CAN.H: 288: id[1] = RXB1SIDL;
  1403  000F94  5008               	movf	CANRecv@id,w,c
  1404  000F96  6ED9               	movwf	fsr2l,c
  1405  000F98  6ADA               	clrf	fsr2h,c
  1406  000F9A  2AD9               	incf	fsr2l,f,c
  1407  000F9C  6ADA               	clrf	fsr2h,c
  1408  000F9E  CF32 FFDF          	movff	3890,indf2	;volatile
  1409                           
  1410                           ; BSR set to: 15
  1411                           ;CAN.H: 289: id[2] = RXB1EIDH;
  1412  000FA2  D882               	call	PL19	;call to abstracted procedure
  1413  000FA4  CF33 FFDF          	movff	3891,indf2	;volatile
  1414                           
  1415                           ; BSR set to: 15
  1416                           ;CAN.H: 290: id[3] = RXB1EIDL;
  1417  000FA8  D886               	call	PL20	;call to abstracted procedure
  1418  000FAA  CF34 FFDF          	movff	3892,indf2	;volatile
  1419                           
  1420                           ; BSR set to: 15
  1421                           ;CAN.H: 292: *dlc =RXB1DLC;
  1422  000FAE  5007               	movf	CANRecv@dlc,w,c
  1423  000FB0  6ED9               	movwf	fsr2l,c
  1424  000FB2  6ADA               	clrf	fsr2h,c
  1425  000FB4  CF35 FFDF          	movff	3893,indf2	;volatile
  1426                           
  1427                           ; BSR set to: 15
  1428                           ;CAN.H: 294: dat[0] = RXB1D0;
  1429  000FB8  5006               	movf	CANRecv@dat,w,c
  1430  000FBA  6ED9               	movwf	fsr2l,c
  1431  000FBC  6ADA               	clrf	fsr2h,c
  1432  000FBE  CF36 FFDF          	movff	3894,indf2	;volatile
  1433                           
  1434                           ; BSR set to: 15
  1435                           ;CAN.H: 295: dat[1] = RXB1D1;
  1436  000FC2  5006               	movf	CANRecv@dat,w,c
  1437  000FC4  6ED9               	movwf	fsr2l,c
  1438  000FC6  6ADA               	clrf	fsr2h,c
  1439  000FC8  2AD9               	incf	fsr2l,f,c
  1440  000FCA  6ADA               	clrf	fsr2h,c
  1441  000FCC  CF37 FFDF          	movff	3895,indf2	;volatile
  1442                           
  1443                           ; BSR set to: 15
  1444                           ;CAN.H: 296: dat[2] = RXB1D2;
  1445  000FD0  D879               	call	PL21	;call to abstracted procedure
  1446  000FD2  CF38 FFDF          	movff	3896,indf2	;volatile
  1447                           
  1448                           ; BSR set to: 15
  1449                           ;CAN.H: 297: dat[3] = RXB1D3;
  1450  000FD6  D87D               	call	PL22	;call to abstracted procedure
  1451  000FD8  CF39 FFDF          	movff	3897,indf2	;volatile
  1452                           
  1453                           ; BSR set to: 15
  1454                           ;CAN.H: 298: dat[4] = RXB1D4;
  1455  000FDC  D850               	call	PL16	;call to abstracted procedure
  1456  000FDE  CF3A FFDF          	movff	3898,indf2	;volatile
  1457                           
  1458                           ; BSR set to: 15
  1459                           ;CAN.H: 299: dat[5] = RXB1D5;
  1460  000FE2  D87E               	call	PL24	;call to abstracted procedure
  1461  000FE4  CF3B FFDF          	movff	3899,indf2	;volatile
  1462                           
  1463                           ; BSR set to: 15
  1464                           ;CAN.H: 300: dat[6] = RXB1D6;
  1465  000FE8  D851               	call	PL17	;call to abstracted procedure
  1466  000FEA  CF3C FFDF          	movff	3900,indf2	;volatile
  1467                           
  1468                           ; BSR set to: 15
  1469                           ;CAN.H: 301: dat[7] = RXB1D7;
  1470  000FEE  D855               	call	PL18	;call to abstracted procedure
  1471  000FF0  CF3D FFDF          	movff	3901,indf2	;volatile
  1472  000FF4  D7C3               	goto	l2675
  1473  000FF6                     l364:
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;CAN.H: 304: }
  1477                           ;CAN.H: 305: if(TXB0IF ==1)
  1478  000FF6  B477               	btfsc	3959,2,c	;volatile
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;CAN.H: 306: {
  1482                           ;CAN.H: 307: TXB0IF =0;
  1483  000FF8  9477               	bcf	3959,2,c	;volatile
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;CAN.H: 308: }
  1487                           ;CAN.H: 309: if(TXB1IF ==1)
  1488  000FFA  B677               	btfsc	3959,3,c	;volatile
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;CAN.H: 310: {
  1492                           ;CAN.H: 311: TXB1IF =0;
  1493  000FFC  9677               	bcf	3959,3,c	;volatile
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;CAN.H: 312: }
  1497                           ;CAN.H: 313: if(TXB2IF ==1)
  1498  000FFE  B877               	btfsc	3959,4,c	;volatile
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;CAN.H: 314: {
  1502                           ;CAN.H: 315: TXB2IF =0;
  1503  001000  9877               	bcf	3959,4,c	;volatile
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;CAN.H: 316: }
  1507                           ;CAN.H: 318: if(ERRIF ==1)
  1508  001002  AA77               	btfss	3959,5,c	;volatile
  1509  001004  D033               	goto	l2749
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;CAN.H: 319: {
  1513                           ;CAN.H: 320: ERRIF =0;
  1514  001006  9A77               	bcf	3959,5,c	;volatile
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;CAN.H: 322: id[0] = 0;
  1518  001008  5008               	movf	CANRecv@id,w,c
  1519  00100A  6ED9               	movwf	fsr2l,c
  1520  00100C  6ADA               	clrf	fsr2h,c
  1521  00100E  6ADF               	clrf	indf2,c
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;CAN.H: 323: id[1] = 0;
  1525  001010  5008               	movf	CANRecv@id,w,c
  1526  001012  6ED9               	movwf	fsr2l,c
  1527  001014  6ADA               	clrf	fsr2h,c
  1528  001016  2AD9               	incf	fsr2l,f,c
  1529  001018  6ADA               	clrf	fsr2h,c
  1530  00101A  6ADF               	clrf	indf2,c
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;CAN.H: 324: id[2] = 0;
  1534  00101C  D845               	call	PL19	;call to abstracted procedure
  1535  00101E  6ADF               	clrf	indf2,c
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;CAN.H: 325: id[3] = 0;
  1539  001020  D84A               	call	PL20	;call to abstracted procedure
  1540  001022  6ADF               	clrf	indf2,c
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;CAN.H: 327: *dlc =0;
  1544  001024  5007               	movf	CANRecv@dlc,w,c
  1545  001026  6ED9               	movwf	fsr2l,c
  1546  001028  6ADA               	clrf	fsr2h,c
  1547  00102A  6ADF               	clrf	indf2,c
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;CAN.H: 329: dat[0] = 0;
  1551  00102C  5006               	movf	CANRecv@dat,w,c
  1552  00102E  6ED9               	movwf	fsr2l,c
  1553  001030  6ADA               	clrf	fsr2h,c
  1554  001032  6ADF               	clrf	indf2,c
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;CAN.H: 330: dat[1] = 0;
  1558  001034  5006               	movf	CANRecv@dat,w,c
  1559  001036  6ED9               	movwf	fsr2l,c
  1560  001038  6ADA               	clrf	fsr2h,c
  1561  00103A  2AD9               	incf	fsr2l,f,c
  1562  00103C  6ADA               	clrf	fsr2h,c
  1563  00103E  6ADF               	clrf	indf2,c
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;CAN.H: 331: dat[2] = 0;
  1567  001040  5006               	movf	CANRecv@dat,w,c
  1568  001042  6ED9               	movwf	fsr2l,c
  1569  001044  6ADA               	clrf	fsr2h,c
  1570  001046  0E02               	movlw	2
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;CAN.H: 332: dat[3] = 0;
  1574  001048  D813               	call	PL6	;call to abstracted procedure
  1575  00104A  0E03               	movlw	3
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;CAN.H: 333: dat[4] = 0;
  1579  00104C  D811               	call	PL6	;call to abstracted procedure
  1580  00104E  0E04               	movlw	4
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;CAN.H: 334: dat[5] = 0;
  1584  001050  D80F               	call	PL6	;call to abstracted procedure
  1585  001052  0E05               	movlw	5
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;CAN.H: 335: dat[6] = 0;
  1589  001054  D80D               	call	PL6	;call to abstracted procedure
  1590  001056  0E06               	movlw	6
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;CAN.H: 336: dat[7] = 0;
  1594  001058  D80B               	call	PL6	;call to abstracted procedure
  1595  00105A  0E07               	movlw	7
  1596  00105C  26D9               	addwf	fsr2l,f,c
  1597  00105E  6ADA               	clrf	fsr2h,c
  1598  001060  6ADF               	clrf	indf2,c
  1599                           
  1600                           ; BSR set to: 0
  1601                           ;CAN.H: 338: CANInit(GetAddr(0x06));
  1602  001062  0E06               	movlw	6
  1603  001064  EC5D  F00E         	call	_GetAddr
  1604  001068  ECCB  F00D         	call	_CANInit
  1605  00106C                     l2749:
  1606                           
  1607                           ;CAN.H: 340: return 0;
  1608  00106C  90D8               	bcf	status,0,c
  1609  00106E  0012               	return	
  1610  001070                     __end_of_CANRecv:
  1611                           	opt stack 0
  1612  001070                     PL6:
  1613  001070  26D9               	addwf	fsr2l,f,c
  1614  001072  6ADA               	clrf	fsr2h,c
  1615  001074  6ADF               	clrf	indf2,c
  1616  001076  5006               	movf	CANRecv@dat,w,c
  1617  001078  6ED9               	movwf	fsr2l,c
  1618  00107A  6ADA               	clrf	fsr2h,c
  1619  00107C  0012               	return	
  1620  00107E                     PL16:
  1621  00107E  5006               	movf	CANRecv@dat,w,c
  1622  001080  6ED9               	movwf	fsr2l,c
  1623  001082  6ADA               	clrf	fsr2h,c
  1624  001084  0E04               	movlw	4
  1625  001086  26D9               	addwf	fsr2l,f,c
  1626  001088  6ADA               	clrf	fsr2h,c
  1627  00108A  0012               	return	
  1628  00108C                     PL17:
  1629  00108C  5006               	movf	CANRecv@dat,w,c
  1630  00108E  6ED9               	movwf	fsr2l,c
  1631  001090  6ADA               	clrf	fsr2h,c
  1632  001092  0E06               	movlw	6
  1633  001094  26D9               	addwf	fsr2l,f,c
  1634  001096  6ADA               	clrf	fsr2h,c
  1635  001098  0012               	return	
  1636  00109A                     PL18:
  1637  00109A  5006               	movf	CANRecv@dat,w,c
  1638  00109C  6ED9               	movwf	fsr2l,c
  1639  00109E  6ADA               	clrf	fsr2h,c
  1640  0010A0  0E07               	movlw	7
  1641  0010A2  26D9               	addwf	fsr2l,f,c
  1642  0010A4  6ADA               	clrf	fsr2h,c
  1643  0010A6  0012               	return	
  1644  0010A8                     PL19:
  1645  0010A8  5008               	movf	CANRecv@id,w,c
  1646  0010AA  6ED9               	movwf	fsr2l,c
  1647  0010AC  6ADA               	clrf	fsr2h,c
  1648  0010AE  0E02               	movlw	2
  1649  0010B0  26D9               	addwf	fsr2l,f,c
  1650  0010B2  6ADA               	clrf	fsr2h,c
  1651  0010B4  0012               	return	
  1652  0010B6                     PL20:
  1653  0010B6  5008               	movf	CANRecv@id,w,c
  1654  0010B8  6ED9               	movwf	fsr2l,c
  1655  0010BA  6ADA               	clrf	fsr2h,c
  1656  0010BC  0E03               	movlw	3
  1657  0010BE  26D9               	addwf	fsr2l,f,c
  1658  0010C0  6ADA               	clrf	fsr2h,c
  1659  0010C2  0012               	return	
  1660  0010C4                     PL21:
  1661  0010C4  5006               	movf	CANRecv@dat,w,c
  1662  0010C6  6ED9               	movwf	fsr2l,c
  1663  0010C8  6ADA               	clrf	fsr2h,c
  1664  0010CA  0E02               	movlw	2
  1665  0010CC  26D9               	addwf	fsr2l,f,c
  1666  0010CE  6ADA               	clrf	fsr2h,c
  1667  0010D0  0012               	return	
  1668  0010D2                     PL22:
  1669  0010D2  5006               	movf	CANRecv@dat,w,c
  1670  0010D4  6ED9               	movwf	fsr2l,c
  1671  0010D6  6ADA               	clrf	fsr2h,c
  1672  0010D8  0E03               	movlw	3
  1673  0010DA  26D9               	addwf	fsr2l,f,c
  1674  0010DC  6ADA               	clrf	fsr2h,c
  1675  0010DE  0012               	return	
  1676  0010E0                     PL24:
  1677  0010E0  5006               	movf	CANRecv@dat,w,c
  1678  0010E2  6ED9               	movwf	fsr2l,c
  1679  0010E4  6ADA               	clrf	fsr2h,c
  1680  0010E6  0E05               	movlw	5
  1681  0010E8  26D9               	addwf	fsr2l,f,c
  1682  0010EA  6ADA               	clrf	fsr2h,c
  1683  0010EC  0012               	return	
  1684                           tblptru	equ	0xFF8
  1685                           tblptrh	equ	0xFF7
  1686                           tblptrl	equ	0xFF6
  1687                           tablat	equ	0xFF5
  1688                           prodh	equ	0xFF4
  1689                           prodl	equ	0xFF3
  1690                           intcon	equ	0xFF2
  1691                           postinc0	equ	0xFEE
  1692                           wreg	equ	0xFE8
  1693                           indf1	equ	0xFE7
  1694                           postdec1	equ	0xFE5
  1695                           fsr1h	equ	0xFE2
  1696                           fsr1l	equ	0xFE1
  1697                           indf2	equ	0xFDF
  1698                           postinc2	equ	0xFDE
  1699                           postdec2	equ	0xFDD
  1700                           fsr2h	equ	0xFDA
  1701                           fsr2l	equ	0xFD9
  1702                           status	equ	0xFD8
  1703                           
  1704 ;; *************** function _GetAddr *****************
  1705 ;; Defined at:
  1706 ;;		line 143 in file "G:\working\YellowFlashingController\TSC.H"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  board_type      1    wreg     unsigned char 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  board_type      1    3[COMRAM] unsigned char 
  1711 ;;  rel             1    4[COMRAM] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      unsigned char 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, status,0, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/F
  1718 ;;		On exit  : 0/F
  1719 ;;		Unchanged: FFFFFFFF/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1722 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1724 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1725 ;;Total ram usage:        2 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    5
  1728 ;; This function calls:
  1729 ;;		_GetLampBoardAddr
  1730 ;; This function is called by:
  1731 ;;		_CANRecv
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text2
  1737  001CBA                     __ptext2:
  1738                           	opt stack 0
  1739  001CBA                     _GetAddr:
  1740                           	opt stack 24
  1741                           
  1742                           ;GetAddr@board_type stored from wreg
  1743  001CBA  CFE8 F004          	movff	wreg,GetAddr@board_type
  1744                           
  1745                           ;TSC.H: 144: unsigned char rel;
  1746                           ;TSC.H: 145: switch (board_type)
  1747  001CBE  D00A               	goto	l2471
  1748  001CC0                     l2463:
  1749                           
  1750                           ;TSC.H: 148: rel = 0x20;
  1751  001CC0  0E20               	movlw	32
  1752  001CC2  D004               	goto	L2
  1753  001CC4                     l2465:
  1754                           
  1755                           ;TSC.H: 152: rel = GetLampBoardAddr();
  1756  001CC4  EC74  F00D         	call	_GetLampBoardAddr	;wreg free
  1757  001CC8  D001               	goto	L2
  1758  001CCA                     l2467:
  1759                           
  1760                           ;TSC.H: 155: rel= 0x2E;
  1761  001CCA  0E2E               	movlw	46
  1762  001CCC                     L2:
  1763  001CCC  6E05               	movwf	GetAddr@rel,c
  1764  001CCE  D010               	goto	l2473
  1765  001CD0                     l325:
  1766                           
  1767                           ;TSC.H: 166: rel = 0;
  1768  001CD0  6A05               	clrf	GetAddr@rel,c
  1769                           
  1770                           ;TSC.H: 167: break;
  1771  001CD2  D00E               	goto	l2473
  1772  001CD4                     l2471:
  1773  001CD4  5004               	movf	GetAddr@board_type,w,c
  1774                           
  1775                           ; Switch size 1, requested type "space"
  1776                           ; Number of cases is 6, Range of values is 1 to 6
  1777                           ; switch strategies available:
  1778                           ; Name         Instructions Cycles
  1779                           ; simple_byte           19    10 (average)
  1780                           ;	Chosen strategy is simple_byte
  1781  001CD6  0A01               	xorlw	1	; case 1
  1782  001CD8  E0F3               	bz	l2463
  1783  001CDA  0A03               	xorlw	3	; case 2
  1784  001CDC  E0F3               	bz	l2465
  1785  001CDE  0A01               	xorlw	1	; case 3
  1786  001CE0  E007               	bz	l2473
  1787  001CE2  0A07               	xorlw	7	; case 4
  1788  001CE4  E005               	bz	l2473
  1789  001CE6  0A01               	xorlw	1	; case 5
  1790  001CE8  E003               	bz	l2473
  1791  001CEA  0A03               	xorlw	3	; case 6
  1792  001CEC  E0EE               	bz	l2467
  1793  001CEE  D7F0               	goto	l325
  1794  001CF0                     l2473:
  1795                           
  1796                           ;TSC.H: 170: return rel;
  1797  001CF0  5005               	movf	GetAddr@rel,w,c
  1798  001CF2  0012               	return	
  1799  001CF4                     __end_of_GetAddr:
  1800                           	opt stack 0
  1801                           tblptru	equ	0xFF8
  1802                           tblptrh	equ	0xFF7
  1803                           tblptrl	equ	0xFF6
  1804                           tablat	equ	0xFF5
  1805                           prodh	equ	0xFF4
  1806                           prodl	equ	0xFF3
  1807                           intcon	equ	0xFF2
  1808                           postinc0	equ	0xFEE
  1809                           wreg	equ	0xFE8
  1810                           indf1	equ	0xFE7
  1811                           postdec1	equ	0xFE5
  1812                           fsr1h	equ	0xFE2
  1813                           fsr1l	equ	0xFE1
  1814                           indf2	equ	0xFDF
  1815                           postinc2	equ	0xFDE
  1816                           postdec2	equ	0xFDD
  1817                           fsr2h	equ	0xFDA
  1818                           fsr2l	equ	0xFD9
  1819                           status	equ	0xFD8
  1820                           
  1821 ;; *************** function _GetLampBoardAddr *****************
  1822 ;; Defined at:
  1823 ;;		line 82 in file "G:\working\YellowFlashingController\TSC.H"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  i               2    0[COMRAM] unsigned int 
  1828 ;;  addr            1    2[COMRAM] unsigned char 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      unsigned char 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/F
  1835 ;;		On exit  : 0/F
  1836 ;;		Unchanged: FFFFFFFF/0
  1837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1839 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1841 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1842 ;;Total ram usage:        3 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    4
  1845 ;; This function calls:
  1846 ;;		Nothing
  1847 ;; This function is called by:
  1848 ;;		_GetAddr
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           	psect	text3
  1853  001AE8                     __ptext3:
  1854                           	opt stack 0
  1855  001AE8                     _GetLampBoardAddr:
  1856                           	opt stack 24
  1857                           
  1858                           ;TSC.H: 84: unsigned int i=0;
  1859  001AE8  6A01               	clrf	GetLampBoardAddr@i,c
  1860  001AEA  6A02               	clrf	GetLampBoardAddr@i+1,c
  1861                           
  1862                           ;TSC.H: 86: addr = (PORTB>>5) & 0x07;
  1863  001AEC  3881               	swapf	3969,w,c	;volatile
  1864  001AEE  42E8               	rrncf	wreg,f,c
  1865  001AF0  0B07               	andlw	7
  1866  001AF2  6E03               	movwf	GetLampBoardAddr@addr,c
  1867                           
  1868                           ;TSC.H: 89: for(i=0;i<1000;i++)
  1869  001AF4  6A01               	clrf	GetLampBoardAddr@i,c
  1870  001AF6  6A02               	clrf	GetLampBoardAddr@i+1,c
  1871  001AF8                     l2397:
  1872                           
  1873                           ;TSC.H: 90: {;}
  1874  001AF8  4A01               	infsnz	GetLampBoardAddr@i,f,c
  1875  001AFA  2A02               	incf	GetLampBoardAddr@i+1,f,c
  1876  001AFC  0EE8               	movlw	232
  1877  001AFE  5C01               	subwf	GetLampBoardAddr@i,w,c
  1878  001B00  0E03               	movlw	3
  1879  001B02  5802               	subwfb	GetLampBoardAddr@i+1,w,c
  1880  001B04  E3F9               	bnc	l2397
  1881                           
  1882                           ;TSC.H: 92: if(addr ==((PORTB>>5) & 0x07))
  1883  001B06  3881               	swapf	3969,w,c	;volatile
  1884  001B08  42E8               	rrncf	wreg,f,c
  1885  001B0A  0B07               	andlw	7
  1886  001B0C  1803               	xorwf	GetLampBoardAddr@addr,w,c
  1887  001B0E  E008               	bz	l2455
  1888  001B10  0CFF               	retlw	255
  1889  001B12                     l2405:
  1890                           
  1891                           ;TSC.H: 97: return 0x13;
  1892  001B12  0C13               	retlw	19
  1893  001B14                     l2411:
  1894                           
  1895                           ;TSC.H: 100: return 0x14;
  1896  001B14  0C14               	retlw	20
  1897  001B16                     l2417:
  1898                           
  1899                           ;TSC.H: 103: return 0x15;
  1900  001B16  0C15               	retlw	21
  1901  001B18                     l2423:
  1902                           
  1903                           ;TSC.H: 106: return 0x16;
  1904  001B18  0C16               	retlw	22
  1905  001B1A                     l2429:
  1906                           
  1907                           ;TSC.H: 109: return 0x17;
  1908  001B1A  0C17               	retlw	23
  1909  001B1C                     l2435:
  1910                           
  1911                           ;TSC.H: 112: return 0x18;
  1912  001B1C  0C18               	retlw	24
  1913  001B1E                     l2441:
  1914                           
  1915                           ;TSC.H: 115: return 0x1a;
  1916  001B1E  0C1A               	retlw	26
  1917  001B20                     l2455:
  1918  001B20  5003               	movf	GetLampBoardAddr@addr,w,c
  1919                           
  1920                           ; Switch size 1, requested type "space"
  1921                           ; Number of cases is 8, Range of values is 0 to 7
  1922                           ; switch strategies available:
  1923                           ; Name         Instructions Cycles
  1924                           ; simple_byte           25    13 (average)
  1925                           ;	Chosen strategy is simple_byte
  1926  001B22  E0F7               	bz	l2405
  1927  001B24  0A01               	xorlw	1	; case 1
  1928  001B26  E0F6               	bz	l2411
  1929  001B28  0A03               	xorlw	3	; case 2
  1930  001B2A  E0F5               	bz	l2417
  1931  001B2C  0A01               	xorlw	1	; case 3
  1932  001B2E  E0F4               	bz	l2423
  1933  001B30  0A07               	xorlw	7	; case 4
  1934  001B32  E0F3               	bz	l2429
  1935  001B34  0A01               	xorlw	1	; case 5
  1936  001B36  E0F2               	bz	l2435
  1937  001B38  0A03               	xorlw	3	; case 6
  1938  001B3A  E0F1               	bz	l2441
  1939  001B3C  0A01               	xorlw	1	; case 7
  1940  001B3E  A4D8               	btfss	status,2,c
  1941  001B40  0012               	return	
  1942  001B42  0C1B               	retlw	27
  1943  001B44                     __end_of_GetLampBoardAddr:
  1944                           	opt stack 0
  1945                           tblptru	equ	0xFF8
  1946                           tblptrh	equ	0xFF7
  1947                           tblptrl	equ	0xFF6
  1948                           tablat	equ	0xFF5
  1949                           prodh	equ	0xFF4
  1950                           prodl	equ	0xFF3
  1951                           intcon	equ	0xFF2
  1952                           postinc0	equ	0xFEE
  1953                           wreg	equ	0xFE8
  1954                           indf1	equ	0xFE7
  1955                           postdec1	equ	0xFE5
  1956                           fsr1h	equ	0xFE2
  1957                           fsr1l	equ	0xFE1
  1958                           indf2	equ	0xFDF
  1959                           postinc2	equ	0xFDE
  1960                           postdec2	equ	0xFDD
  1961                           fsr2h	equ	0xFDA
  1962                           fsr2l	equ	0xFD9
  1963                           status	equ	0xFD8
  1964                           
  1965 ;; *************** function _CANInit *****************
  1966 ;; Defined at:
  1967 ;;		line 117 in file "G:\working\YellowFlashingController\CAN.H"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  b_addr          1    wreg     unsigned char 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  b_addr          1    3[COMRAM] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;		None               void
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/F
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: FFFFFFF0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1985 ;;Total ram usage:        1 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    5
  1988 ;; This function calls:
  1989 ;;		_CANSetID
  1990 ;;		_CANFilterSet
  1991 ;;		_CANErrClr
  1992 ;; This function is called by:
  1993 ;;		_CANRecv
  1994 ;;		_main
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text4
  1999  001B96                     __ptext4:
  2000                           	opt stack 0
  2001  001B96                     _CANInit:
  2002                           	opt stack 24
  2003                           
  2004                           ;CANInit@b_addr stored from wreg
  2005  001B96  CFE8 F004          	movff	wreg,CANInit@b_addr
  2006                           
  2007                           ;CAN.H: 118: TRISB |= 0x08;
  2008  001B9A  8693               	bsf	3987,3,c	;volatile
  2009                           
  2010                           ;CAN.H: 119: TRISB &= 0xfb;
  2011  001B9C  9493               	bcf	3987,2,c	;volatile
  2012                           
  2013                           ;CAN.H: 121: CANCON |=0x80;
  2014  001B9E  8E6F               	bsf	3951,7,c	;volatile
  2015  001BA0                     l338:
  2016  001BA0  AE6E               	btfss	3950,7,c	;volatile
  2017  001BA2  D7FE               	goto	l338
  2018                           
  2019                           ;CAN.H: 126: ECANCON &= 0x3f;
  2020  001BA4  0E3F               	movlw	63
  2021  001BA6  1672               	andwf	3954,f,c	;volatile
  2022                           
  2023                           ;CAN.H: 128: BRGCON1 = 0x00;
  2024  001BA8  010E               	movlb	14	; () banked
  2025  001BAA  6B43               	clrf	67,b	;volatile
  2026                           
  2027                           ; BSR set to: 14
  2028                           ;CAN.H: 129: BRGCON2 = 0xd1;;
  2029  001BAC  0ED1               	movlw	209
  2030  001BAE  6F44               	movwf	68,b	;volatile
  2031                           
  2032                           ; BSR set to: 14
  2033                           ;CAN.H: 130: BRGCON3 = 0xc1;
  2034  001BB0  0EC1               	movlw	193
  2035  001BB2  6F45               	movwf	69,b	;volatile
  2036                           
  2037                           ; BSR set to: 14
  2038                           ;CAN.H: 131: CIOCON = 0x21;
  2039  001BB4  0E21               	movlw	33
  2040  001BB6  6E70               	movwf	3952,c	;volatile
  2041                           
  2042                           ; BSR set to: 14
  2043                           ;CAN.H: 133: RXB0CON |= 0x06;
  2044  001BB8  0E06               	movlw	6
  2045  001BBA  1260               	iorwf	3936,f,c	;volatile
  2046                           
  2047                           ; BSR set to: 14
  2048                           ;CAN.H: 134: RXB1CON |= 0x06;
  2049  001BBC  010F               	movlb	15	; () banked
  2050  001BBE  1330               	iorwf	48,f,b	;volatile
  2051                           
  2052                           ; BSR set to: 15
  2053                           ;CAN.H: 136: CANSetID(b_addr,0x03);
  2054  001BC0  0E03               	movlw	3
  2055  001BC2  6E01               	movwf	?_CANSetID,c
  2056  001BC4  5004               	movf	CANInit@b_addr,w,c
  2057  001BC6  ECF2  F00D         	call	_CANSetID
  2058                           
  2059                           ; BSR set to: 15
  2060                           ;CAN.H: 137: CANFilterSet(b_addr,0x03);
  2061  001BCA  0E03               	movlw	3
  2062  001BCC  6E01               	movwf	?_CANFilterSet,c
  2063  001BCE  5004               	movf	CANInit@b_addr,w,c
  2064  001BD0  ECC1  F00B         	call	_CANFilterSet
  2065                           
  2066                           ; BSR set to: 14
  2067                           ;CAN.H: 138: CANErrClr();
  2068  001BD4  EC6E  F00F         	call	_CANErrClr	;wreg free
  2069                           
  2070                           ; BSR set to: 14
  2071                           ;CAN.H: 141: CIOCON=0X00;
  2072  001BD8  6A70               	clrf	3952,c	;volatile
  2073                           
  2074                           ; BSR set to: 14
  2075                           ;CAN.H: 145: CANCON &= 0x1f;
  2076  001BDA  0E1F               	movlw	31
  2077  001BDC  166F               	andwf	3951,f,c	;volatile
  2078  001BDE                     l341:
  2079  001BDE  A06E               	btfss	3950,0,c	;volatile
  2080  001BE0  0012               	return	
  2081  001BE2  D7FD               	goto	l341
  2082  001BE4                     __end_of_CANInit:
  2083                           	opt stack 0
  2084                           tblptru	equ	0xFF8
  2085                           tblptrh	equ	0xFF7
  2086                           tblptrl	equ	0xFF6
  2087                           tablat	equ	0xFF5
  2088                           prodh	equ	0xFF4
  2089                           prodl	equ	0xFF3
  2090                           intcon	equ	0xFF2
  2091                           postinc0	equ	0xFEE
  2092                           wreg	equ	0xFE8
  2093                           indf1	equ	0xFE7
  2094                           postdec1	equ	0xFE5
  2095                           fsr1h	equ	0xFE2
  2096                           fsr1l	equ	0xFE1
  2097                           indf2	equ	0xFDF
  2098                           postinc2	equ	0xFDE
  2099                           postdec2	equ	0xFDD
  2100                           fsr2h	equ	0xFDA
  2101                           fsr2l	equ	0xFD9
  2102                           status	equ	0xFD8
  2103                           
  2104 ;; *************** function _CANFilterSet *****************
  2105 ;; Defined at:
  2106 ;;		line 15 in file "G:\working\YellowFlashingController\CAN.H"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  board_addr      1    wreg     unsigned char 
  2109 ;;  f_type          1    0[COMRAM] unsigned char 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  board_addr      1    1[COMRAM] unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;		None               void
  2114 ;; Registers used:
  2115 ;;		wreg, status,2, status,0
  2116 ;; Tracked objects:
  2117 ;;		On entry : F/F
  2118 ;;		On exit  : F/E
  2119 ;;		Unchanged: FFFFFFF0/0
  2120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2121 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2124 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2125 ;;Total ram usage:        2 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    4
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_CANInit
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text5
  2136  001782                     __ptext5:
  2137                           	opt stack 0
  2138  001782                     _CANFilterSet:
  2139                           	opt stack 24
  2140                           
  2141                           ;CANFilterSet@board_addr stored from wreg
  2142  001782  CFE8 F002          	movff	wreg,CANFilterSet@board_addr
  2143                           
  2144                           ; BSR set to: 15
  2145                           ;CAN.H: 20: RXF0SIDH = 0;
  2146  001786  010E               	movlb	14	; () banked
  2147  001788  6BE0               	clrf	224,b	;volatile
  2148                           
  2149                           ; BSR set to: 14
  2150                           ;CAN.H: 21: RXF0SIDH = (f_type<<5)|(0x10>>1);
  2151  00178A  3801               	swapf	CANFilterSet@f_type,w,c
  2152  00178C  46E8               	rlncf	wreg,f,c
  2153  00178E  0BE0               	andlw	224
  2154  001790  0908               	iorlw	8
  2155  001792  6FE0               	movwf	224,b	;volatile
  2156                           
  2157                           ; BSR set to: 14
  2158                           ;CAN.H: 22: RXF0SIDL = 0;
  2159  001794  6BE1               	clrf	225,b	;volatile
  2160                           
  2161                           ;CAN.H: 23: RXF0SIDL = (0x10<<7)|(0x00<<5)|0x08|(board_addr>>4);
  2162  001796  3802               	swapf	CANFilterSet@board_addr,w,c
  2163  001798  0B0F               	andlw	15
  2164  00179A  0908               	iorlw	8
  2165  00179C  6FE1               	movwf	225,b	;volatile
  2166                           
  2167                           ; BSR set to: 14
  2168                           ;CAN.H: 24: RXF0EIDH = 0;
  2169  00179E  6BE2               	clrf	226,b	;volatile
  2170                           
  2171                           ;CAN.H: 25: RXF0EIDH = (board_addr<<4)|0x0f;
  2172  0017A0  3802               	swapf	CANFilterSet@board_addr,w,c
  2173  0017A2  0BF0               	andlw	240
  2174  0017A4  090F               	iorlw	15
  2175  0017A6  6FE2               	movwf	226,b	;volatile
  2176                           
  2177                           ; BSR set to: 14
  2178                           ;CAN.H: 26: RXF0EIDL = 0;
  2179  0017A8  6BE3               	clrf	227,b	;volatile
  2180                           
  2181                           ; BSR set to: 14
  2182                           ;CAN.H: 27: RXF0EIDL = 0xF0|0x0f;
  2183  0017AA  69E3               	setf	227,b	;volatile
  2184                           
  2185                           ; BSR set to: 14
  2186                           ;CAN.H: 31: RXF1SIDH = RXF0SIDH;
  2187  0017AC  CEE0 FEE4          	movff	3808,3812	;volatile
  2188                           
  2189                           ; BSR set to: 14
  2190                           ;CAN.H: 32: RXF1SIDL = RXF0SIDL;
  2191  0017B0  CEE1 FEE5          	movff	3809,3813	;volatile
  2192                           
  2193                           ; BSR set to: 14
  2194                           ;CAN.H: 33: RXF1EIDH = RXF0EIDH;
  2195  0017B4  CEE2 FEE6          	movff	3810,3814	;volatile
  2196                           
  2197                           ; BSR set to: 14
  2198                           ;CAN.H: 34: RXF1EIDL = RXF0EIDL;
  2199  0017B8  CEE3 FEE7          	movff	3811,3815	;volatile
  2200                           
  2201                           ; BSR set to: 14
  2202                           ;CAN.H: 39: RXF2SIDH = RXF0SIDH;
  2203  0017BC  CEE0 FEE8          	movff	3808,3816	;volatile
  2204                           
  2205                           ; BSR set to: 14
  2206                           ;CAN.H: 40: RXF2SIDL = RXF0SIDL;
  2207  0017C0  CEE1 FEE9          	movff	3809,3817	;volatile
  2208                           
  2209                           ; BSR set to: 14
  2210                           ;CAN.H: 41: RXF2EIDH = RXF0EIDH;
  2211  0017C4  CEE2 FEEA          	movff	3810,3818	;volatile
  2212                           
  2213                           ; BSR set to: 14
  2214                           ;CAN.H: 42: RXF2EIDL = RXF0EIDL;
  2215  0017C8  CEE3 FEEB          	movff	3811,3819	;volatile
  2216                           
  2217                           ; BSR set to: 14
  2218                           ;CAN.H: 46: RXF3SIDH = RXF0SIDH;
  2219  0017CC  CEE0 FEEC          	movff	3808,3820	;volatile
  2220                           
  2221                           ; BSR set to: 14
  2222                           ;CAN.H: 47: RXF3SIDL = RXF0SIDL;
  2223  0017D0  CEE1 FEED          	movff	3809,3821	;volatile
  2224                           
  2225                           ; BSR set to: 14
  2226                           ;CAN.H: 48: RXF3EIDH = RXF0EIDH;
  2227  0017D4  CEE2 FEEE          	movff	3810,3822	;volatile
  2228                           
  2229                           ; BSR set to: 14
  2230                           ;CAN.H: 49: RXF3EIDL = RXF0EIDL;
  2231  0017D8  CEE3 FEEF          	movff	3811,3823	;volatile
  2232                           
  2233                           ; BSR set to: 14
  2234                           ;CAN.H: 53: RXF4SIDH = 0x68;
  2235  0017DC  0E68               	movlw	104
  2236  0017DE  6FF0               	movwf	240,b	;volatile
  2237                           
  2238                           ; BSR set to: 14
  2239                           ;CAN.H: 54: RXF4SIDL = 0x6a;
  2240  0017E0  0E6A               	movlw	106
  2241  0017E2  6FF1               	movwf	241,b	;volatile
  2242                           
  2243                           ; BSR set to: 14
  2244                           ;CAN.H: 55: RXF4EIDH = 0x0f;
  2245  0017E4  0E0F               	movlw	15
  2246  0017E6  6FF2               	movwf	242,b	;volatile
  2247                           
  2248                           ; BSR set to: 14
  2249                           ;CAN.H: 56: RXF4EIDL = 0xff;
  2250  0017E8  69F3               	setf	243,b	;volatile
  2251                           
  2252                           ; BSR set to: 14
  2253                           ;CAN.H: 59: RXF5SIDH = RXF0SIDH;
  2254  0017EA  CEE0 FEF4          	movff	3808,3828	;volatile
  2255                           
  2256                           ; BSR set to: 14
  2257                           ;CAN.H: 60: RXF5SIDL = RXF0SIDL;
  2258  0017EE  CEE1 FEF5          	movff	3809,3829	;volatile
  2259                           
  2260                           ; BSR set to: 14
  2261                           ;CAN.H: 61: RXF5EIDH = RXF0EIDH;
  2262  0017F2  CEE2 FEF6          	movff	3810,3830	;volatile
  2263                           
  2264                           ; BSR set to: 14
  2265                           ;CAN.H: 62: RXF5EIDL = RXF0EIDL;
  2266  0017F6  CEE3 FEF7          	movff	3811,3831	;volatile
  2267                           
  2268                           ; BSR set to: 14
  2269                           ;CAN.H: 65: RXM0SIDH = 0x1f;
  2270  0017FA  0E1F               	movlw	31
  2271  0017FC  6FF8               	movwf	248,b	;volatile
  2272                           
  2273                           ; BSR set to: 14
  2274                           ;CAN.H: 66: RXM0SIDL = 0x83;
  2275  0017FE  0E83               	movlw	131
  2276  001800  6FF9               	movwf	249,b	;volatile
  2277                           
  2278                           ; BSR set to: 14
  2279                           ;CAN.H: 67: RXM0EIDH = 0xf0;
  2280  001802  0EF0               	movlw	240
  2281  001804  6FFA               	movwf	250,b	;volatile
  2282                           
  2283                           ; BSR set to: 14
  2284                           ;CAN.H: 68: RXM0EIDL = 0x00;
  2285  001806  6BFB               	clrf	251,b	;volatile
  2286                           
  2287                           ; BSR set to: 14
  2288                           ;CAN.H: 71: RXM1SIDH = 0x1f;
  2289  001808  0E1F               	movlw	31
  2290  00180A  6FFC               	movwf	252,b	;volatile
  2291                           
  2292                           ; BSR set to: 14
  2293                           ;CAN.H: 72: RXM1SIDL = 0xe3;
  2294  00180C  0EE3               	movlw	227
  2295  00180E  6FFD               	movwf	253,b	;volatile
  2296                           
  2297                           ; BSR set to: 14
  2298                           ;CAN.H: 73: RXM1EIDH = 0xf0;
  2299  001810  0EF0               	movlw	240
  2300  001812  6FFE               	movwf	254,b	;volatile
  2301                           
  2302                           ; BSR set to: 14
  2303                           ;CAN.H: 74: RXM1EIDL = 0x00;
  2304  001814  6BFF               	clrf	255,b	;volatile
  2305                           
  2306                           ; BSR set to: 14
  2307  001816  0012               	return	
  2308  001818                     __end_of_CANFilterSet:
  2309                           	opt stack 0
  2310                           tblptru	equ	0xFF8
  2311                           tblptrh	equ	0xFF7
  2312                           tblptrl	equ	0xFF6
  2313                           tablat	equ	0xFF5
  2314                           prodh	equ	0xFF4
  2315                           prodl	equ	0xFF3
  2316                           intcon	equ	0xFF2
  2317                           postinc0	equ	0xFEE
  2318                           wreg	equ	0xFE8
  2319                           indf1	equ	0xFE7
  2320                           postdec1	equ	0xFE5
  2321                           fsr1h	equ	0xFE2
  2322                           fsr1l	equ	0xFE1
  2323                           indf2	equ	0xFDF
  2324                           postinc2	equ	0xFDE
  2325                           postdec2	equ	0xFDD
  2326                           fsr2h	equ	0xFDA
  2327                           fsr2l	equ	0xFD9
  2328                           status	equ	0xFD8
  2329                           
  2330 ;; *************** function _CANErrClr *****************
  2331 ;; Defined at:
  2332 ;;		line 80 in file "G:\working\YellowFlashingController\CAN.H"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;		None
  2337 ;; Return value:  Size  Location     Type
  2338 ;;		None               void
  2339 ;; Registers used:
  2340 ;;		None
  2341 ;; Tracked objects:
  2342 ;;		On entry : F/E
  2343 ;;		On exit  : F/E
  2344 ;;		Unchanged: FFFFFFF0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2350 ;;Total ram usage:        0 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:    4
  2353 ;; This function calls:
  2354 ;;		Nothing
  2355 ;; This function is called by:
  2356 ;;		_CANInit
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text6
  2361  001EDC                     __ptext6:
  2362                           	opt stack 0
  2363  001EDC                     _CANErrClr:
  2364                           	opt stack 24
  2365                           
  2366                           ; BSR set to: 14
  2367                           
  2368                           ; BSR set to: 14
  2369  001EDC  0012               	return	
  2370  001EDE                     __end_of_CANErrClr:
  2371                           	opt stack 0
  2372                           tblptru	equ	0xFF8
  2373                           tblptrh	equ	0xFF7
  2374                           tblptrl	equ	0xFF6
  2375                           tablat	equ	0xFF5
  2376                           prodh	equ	0xFF4
  2377                           prodl	equ	0xFF3
  2378                           intcon	equ	0xFF2
  2379                           postinc0	equ	0xFEE
  2380                           wreg	equ	0xFE8
  2381                           indf1	equ	0xFE7
  2382                           postdec1	equ	0xFE5
  2383                           fsr1h	equ	0xFE2
  2384                           fsr1l	equ	0xFE1
  2385                           indf2	equ	0xFDF
  2386                           postinc2	equ	0xFDE
  2387                           postdec2	equ	0xFDD
  2388                           fsr2h	equ	0xFDA
  2389                           fsr2l	equ	0xFD9
  2390                           status	equ	0xFD8
  2391                           
  2392 ;; *************** function _CANSetID *****************
  2393 ;; Defined at:
  2394 ;;		line 89 in file "G:\working\YellowFlashingController\CAN.H"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  board_addr      1    wreg     unsigned char 
  2397 ;;  f_type          1    0[COMRAM] unsigned char 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  board_addr      1    2[COMRAM] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;		None               void
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0
  2404 ;; Tracked objects:
  2405 ;;		On entry : F/F
  2406 ;;		On exit  : F/F
  2407 ;;		Unchanged: FFFFFFF0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2409 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2412 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2413 ;;Total ram usage:        3 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    4
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_CANInit
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text7
  2424  001BE4                     __ptext7:
  2425                           	opt stack 0
  2426  001BE4                     _CANSetID:
  2427                           	opt stack 24
  2428                           
  2429                           ; BSR set to: 14
  2430                           ;CANSetID@board_addr stored from wreg
  2431  001BE4  CFE8 F003          	movff	wreg,CANSetID@board_addr
  2432                           
  2433                           ; BSR set to: 15
  2434                           ;CAN.H: 91: TXB0SIDH = 0;
  2435  001BE8  6B21               	clrf	33,b	;volatile
  2436                           
  2437                           ; BSR set to: 15
  2438                           ;CAN.H: 92: TXB0SIDH = (f_type<<5)|(board_addr>>1);
  2439  001BEA  C003  F002         	movff	CANSetID@board_addr,??_CANSetID
  2440  001BEE  90D8               	bcf	status,0,c
  2441  001BF0  3202               	rrcf	??_CANSetID,f,c
  2442  001BF2  3801               	swapf	CANSetID@f_type,w,c
  2443  001BF4  46E8               	rlncf	wreg,f,c
  2444  001BF6  0BE0               	andlw	224
  2445  001BF8  1002               	iorwf	??_CANSetID,w,c
  2446  001BFA  6F21               	movwf	33,b	;volatile
  2447                           
  2448                           ; BSR set to: 15
  2449                           ;CAN.H: 93: TXB0SIDL = 0;
  2450  001BFC  6B22               	clrf	34,b	;volatile
  2451                           
  2452                           ;CAN.H: 94: TXB0SIDL = (board_addr<<7)|(0x00<<5)|0x08|(0x10>>4);
  2453  001BFE  4003               	rrncf	CANSetID@board_addr,w,c
  2454  001C00  0B80               	andlw	128
  2455  001C02  0909               	iorlw	9
  2456  001C04  6F22               	movwf	34,b	;volatile
  2457                           
  2458                           ; BSR set to: 15
  2459                           ;CAN.H: 95: TXB0EIDH = 0;
  2460  001C06  6B23               	clrf	35,b	;volatile
  2461                           
  2462                           ; BSR set to: 15
  2463                           ;CAN.H: 96: TXB0EIDH = (0x10<<4)|0x0f;
  2464  001C08  0E0F               	movlw	15
  2465  001C0A  6F23               	movwf	35,b	;volatile
  2466                           
  2467                           ; BSR set to: 15
  2468                           ;CAN.H: 97: TXB0EIDL = 0;
  2469  001C0C  6B24               	clrf	36,b	;volatile
  2470                           
  2471                           ; BSR set to: 15
  2472                           ;CAN.H: 98: TXB0EIDL = 0xF0|0x0f;
  2473  001C0E  6924               	setf	36,b	;volatile
  2474                           
  2475                           ; BSR set to: 15
  2476                           ;CAN.H: 101: TXB1SIDH = TXB0SIDH;
  2477  001C10  CF21 FF11          	movff	3873,3857	;volatile
  2478                           
  2479                           ; BSR set to: 15
  2480                           ;CAN.H: 102: TXB1SIDL = TXB0SIDL;
  2481  001C14  CF22 FF12          	movff	3874,3858	;volatile
  2482                           
  2483                           ; BSR set to: 15
  2484                           ;CAN.H: 103: TXB1EIDH = TXB0EIDH;
  2485  001C18  CF23 FF13          	movff	3875,3859	;volatile
  2486                           
  2487                           ; BSR set to: 15
  2488                           ;CAN.H: 104: TXB1EIDL = TXB0EIDL;
  2489  001C1C  CF24 FF14          	movff	3876,3860	;volatile
  2490                           
  2491                           ; BSR set to: 15
  2492                           ;CAN.H: 107: TXB2SIDH = TXB0SIDH;
  2493  001C20  CF21 FF01          	movff	3873,3841	;volatile
  2494                           
  2495                           ; BSR set to: 15
  2496                           ;CAN.H: 108: TXB2SIDL = TXB0SIDL;
  2497  001C24  CF22 FF02          	movff	3874,3842	;volatile
  2498                           
  2499                           ; BSR set to: 15
  2500                           ;CAN.H: 109: TXB2EIDH = TXB0EIDH;
  2501  001C28  CF23 FF03          	movff	3875,3843	;volatile
  2502                           
  2503                           ; BSR set to: 15
  2504                           ;CAN.H: 110: TXB2EIDL = TXB0EIDL;
  2505  001C2C  CF24 FF04          	movff	3876,3844	;volatile
  2506                           
  2507                           ; BSR set to: 15
  2508  001C30  0012               	return	
  2509  001C32                     __end_of_CANSetID:
  2510                           	opt stack 0
  2511                           tblptru	equ	0xFF8
  2512                           tblptrh	equ	0xFF7
  2513                           tblptrl	equ	0xFF6
  2514                           tablat	equ	0xFF5
  2515                           prodh	equ	0xFF4
  2516                           prodl	equ	0xFF3
  2517                           intcon	equ	0xFF2
  2518                           postinc0	equ	0xFEE
  2519                           wreg	equ	0xFE8
  2520                           indf1	equ	0xFE7
  2521                           postdec1	equ	0xFE5
  2522                           fsr1h	equ	0xFE2
  2523                           fsr1l	equ	0xFE1
  2524                           indf2	equ	0xFDF
  2525                           postinc2	equ	0xFDE
  2526                           postdec2	equ	0xFDD
  2527                           fsr2h	equ	0xFDA
  2528                           fsr2l	equ	0xFD9
  2529                           status	equ	0xFD8
  2530                           
  2531 ;; *************** function _delayms *****************
  2532 ;; Defined at:
  2533 ;;		line 108 in file "G:\working\YellowFlashingController\mcu.h"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  ms              2    4[COMRAM] unsigned int 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  i               2    6[COMRAM] unsigned int 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;		None               void
  2540 ;; Registers used:
  2541 ;;		wreg, status,2, status,0, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: FFFFFFFF/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2548 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2550 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2551 ;;Total ram usage:        4 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:    5
  2554 ;; This function calls:
  2555 ;;		_delayus
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text8
  2562  001E34                     __ptext8:
  2563                           	opt stack 0
  2564  001E34                     _delayms:
  2565                           	opt stack 25
  2566                           
  2567                           ;mcu.h: 109: unsigned int i;
  2568                           ;mcu.h: 112: for(i=0;i<ms;i++)
  2569                           
  2570                           ; BSR set to: 15
  2571  001E34  6A07               	clrf	delayms@i,c
  2572  001E36  6A08               	clrf	delayms@i+1,c
  2573  001E38  D008               	goto	l2817
  2574  001E3A                     l2813:
  2575                           
  2576                           ;mcu.h: 113: {
  2577                           ;mcu.h: 114: delayus(997);
  2578  001E3A  0E03               	movlw	3
  2579  001E3C  6E02               	movwf	?_delayus+1,c
  2580  001E3E  0EE5               	movlw	229
  2581  001E40  6E01               	movwf	?_delayus,c
  2582  001E42  EC3D  F00F         	call	_delayus	;wreg free
  2583  001E46  4A07               	infsnz	delayms@i,f,c
  2584  001E48  2A08               	incf	delayms@i+1,f,c
  2585  001E4A                     l2817:
  2586  001E4A  5005               	movf	delayms@ms,w,c
  2587  001E4C  5C07               	subwf	delayms@i,w,c
  2588  001E4E  5006               	movf	delayms@ms+1,w,c
  2589  001E50  5808               	subwfb	delayms@i+1,w,c
  2590  001E52  B0D8               	btfsc	status,0,c
  2591  001E54  0012               	return	
  2592  001E56  D7F1               	goto	l2813
  2593  001E58                     __end_of_delayms:
  2594                           	opt stack 0
  2595                           tblptru	equ	0xFF8
  2596                           tblptrh	equ	0xFF7
  2597                           tblptrl	equ	0xFF6
  2598                           tablat	equ	0xFF5
  2599                           prodh	equ	0xFF4
  2600                           prodl	equ	0xFF3
  2601                           intcon	equ	0xFF2
  2602                           postinc0	equ	0xFEE
  2603                           wreg	equ	0xFE8
  2604                           indf1	equ	0xFE7
  2605                           postdec1	equ	0xFE5
  2606                           fsr1h	equ	0xFE2
  2607                           fsr1l	equ	0xFE1
  2608                           indf2	equ	0xFDF
  2609                           postinc2	equ	0xFDE
  2610                           postdec2	equ	0xFDD
  2611                           fsr2h	equ	0xFDA
  2612                           fsr2l	equ	0xFD9
  2613                           status	equ	0xFD8
  2614                           
  2615 ;; *************** function _delayus *****************
  2616 ;; Defined at:
  2617 ;;		line 92 in file "G:\working\YellowFlashingController\mcu.h"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  us              2    0[COMRAM] unsigned int 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  i               2    2[COMRAM] unsigned int 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;		None               void
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: FFFFFFFF/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2634 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2635 ;;Total ram usage:        4 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    4
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_delayms
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text9
  2646  001E7A                     __ptext9:
  2647                           	opt stack 0
  2648  001E7A                     _delayus:
  2649                           	opt stack 25
  2650                           
  2651                           ;mcu.h: 94: unsigned int i;
  2652                           ;mcu.h: 95: us=us-5;
  2653  001E7A  0EFB               	movlw	251
  2654  001E7C  2601               	addwf	delayus@us,f,c
  2655  001E7E  0EFF               	movlw	255
  2656  001E80  2202               	addwfc	delayus@us+1,f,c
  2657                           
  2658                           ;mcu.h: 97: for(i=0;i<us;i++)
  2659  001E82  6A03               	clrf	delayus@i,c
  2660  001E84  6A04               	clrf	delayus@i+1,c
  2661  001E86  D002               	goto	l2809
  2662  001E88                     l2807:
  2663                           
  2664                           ;mcu.h: 98: {
  2665                           ;mcu.h: 99: ;
  2666  001E88  4A03               	infsnz	delayus@i,f,c
  2667  001E8A  2A04               	incf	delayus@i+1,f,c
  2668  001E8C                     l2809:
  2669  001E8C  5001               	movf	delayus@us,w,c
  2670  001E8E  5C03               	subwf	delayus@i,w,c
  2671  001E90  5002               	movf	delayus@us+1,w,c
  2672  001E92  5804               	subwfb	delayus@i+1,w,c
  2673  001E94  B0D8               	btfsc	status,0,c
  2674  001E96  0012               	return	
  2675  001E98  D7F7               	goto	l2807
  2676  001E9A                     __end_of_delayus:
  2677                           	opt stack 0
  2678                           tblptru	equ	0xFF8
  2679                           tblptrh	equ	0xFF7
  2680                           tblptrl	equ	0xFF6
  2681                           tablat	equ	0xFF5
  2682                           prodh	equ	0xFF4
  2683                           prodl	equ	0xFF3
  2684                           intcon	equ	0xFF2
  2685                           postinc0	equ	0xFEE
  2686                           wreg	equ	0xFE8
  2687                           indf1	equ	0xFE7
  2688                           postdec1	equ	0xFE5
  2689                           fsr1h	equ	0xFE2
  2690                           fsr1l	equ	0xFE1
  2691                           indf2	equ	0xFDF
  2692                           postinc2	equ	0xFDE
  2693                           postdec2	equ	0xFDD
  2694                           fsr2h	equ	0xFDA
  2695                           fsr2l	equ	0xFD9
  2696                           status	equ	0xFD8
  2697                           
  2698 ;; *************** function _PORTInit *****************
  2699 ;; Defined at:
  2700 ;;		line 326 in file "G:\working\YellowFlashingController\YellowFlash.C"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;		None               void
  2707 ;; Registers used:
  2708 ;;		wreg, status,2
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : F/F
  2712 ;;		Unchanged: FFFFFFF0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2718 ;;Total ram usage:        0 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    4
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_main
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text10
  2729  001E9A                     __ptext10:
  2730                           	opt stack 0
  2731  001E9A                     _PORTInit:
  2732                           	opt stack 26
  2733                           
  2734                           ;YellowFlash.C: 330: TRISB = 0xe0;
  2735  001E9A  0EE0               	movlw	224
  2736  001E9C  6E93               	movwf	3987,c	;volatile
  2737                           
  2738                           ;YellowFlash.C: 331: TRISC = 0x8f;
  2739  001E9E  0E8F               	movlw	143
  2740  001EA0  6E94               	movwf	3988,c	;volatile
  2741                           
  2742                           ;YellowFlash.C: 332: TRISD = 0xf3;
  2743  001EA2  0EF3               	movlw	243
  2744  001EA4  6E95               	movwf	3989,c	;volatile
  2745                           
  2746                           ;YellowFlash.C: 334: ANCON1 = 0X00;
  2747  001EA6  010F               	movlb	15	; () banked
  2748  001EA8  6B5C               	clrf	92,b	;volatile
  2749                           
  2750                           ; BSR set to: 15
  2751                           ;YellowFlash.C: 335: RC5=0;
  2752  001EAA  9A82               	bcf	3970,5,c	;volatile
  2753                           
  2754                           ; BSR set to: 15
  2755                           ;YellowFlash.C: 336: RC6=1;
  2756  001EAC  8C82               	bsf	3970,6,c	;volatile
  2757                           
  2758                           ; BSR set to: 15
  2759                           ;YellowFlash.C: 337: RC4=1;
  2760  001EAE  8882               	bsf	3970,4,c	;volatile
  2761                           
  2762                           ; BSR set to: 15
  2763                           ;YellowFlash.C: 338: RD3=1;
  2764  001EB0  8683               	bsf	3971,3,c	;volatile
  2765                           
  2766                           ; BSR set to: 15
  2767  001EB2  0012               	return	
  2768  001EB4                     __end_of_PORTInit:
  2769                           	opt stack 0
  2770                           tblptru	equ	0xFF8
  2771                           tblptrh	equ	0xFF7
  2772                           tblptrl	equ	0xFF6
  2773                           tablat	equ	0xFF5
  2774                           prodh	equ	0xFF4
  2775                           prodl	equ	0xFF3
  2776                           intcon	equ	0xFF2
  2777                           postinc0	equ	0xFEE
  2778                           wreg	equ	0xFE8
  2779                           indf1	equ	0xFE7
  2780                           postdec1	equ	0xFE5
  2781                           fsr1h	equ	0xFE2
  2782                           fsr1l	equ	0xFE1
  2783                           indf2	equ	0xFDF
  2784                           postinc2	equ	0xFDE
  2785                           postdec2	equ	0xFDD
  2786                           fsr2h	equ	0xFDA
  2787                           fsr2l	equ	0xFD9
  2788                           status	equ	0xFD8
  2789                           
  2790 ;; *************** function _IntManager *****************
  2791 ;; Defined at:
  2792 ;;		line 372 in file "G:\working\YellowFlashingController\YellowFlash.C"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;		None
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;		None               void
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0
  2801 ;; Tracked objects:
  2802 ;;		On entry : F/F
  2803 ;;		On exit  : F/F
  2804 ;;		Unchanged: FFFFFFF0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2810 ;;Total ram usage:        0 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    4
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_main
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text11
  2821  001E0E                     __ptext11:
  2822                           	opt stack 0
  2823  001E0E                     _IntManager:
  2824                           	opt stack 26
  2825                           
  2826                           ; BSR set to: 15
  2827                           ;YellowFlash.C: 374: INTCON |= 0xc0;
  2828                           
  2829                           ; BSR set to: 15
  2830  001E0E  0EC0               	movlw	192
  2831  001E10  12F2               	iorwf	intcon,f,c	;volatile
  2832                           
  2833                           ; BSR set to: 15
  2834                           ;YellowFlash.C: 378: TMR0IE = 1;
  2835  001E12  8AF2               	bsf	intcon,5,c	;volatile
  2836                           
  2837                           ; BSR set to: 15
  2838                           ;YellowFlash.C: 379: TMR0IF = 0;
  2839  001E14  94F2               	bcf	intcon,2,c	;volatile
  2840                           
  2841                           ; BSR set to: 15
  2842                           ;YellowFlash.C: 380: T08BIT = 0;
  2843  001E16  9CD5               	bcf	4053,6,c	;volatile
  2844                           
  2845                           ; BSR set to: 15
  2846                           ;YellowFlash.C: 381: T0CS = 0;
  2847  001E18  9AD5               	bcf	4053,5,c	;volatile
  2848                           
  2849                           ; BSR set to: 15
  2850                           ;YellowFlash.C: 383: TMR0H = 0xd8;
  2851  001E1A  0ED8               	movlw	216
  2852  001E1C  6ED7               	movwf	4055,c	;volatile
  2853                           
  2854                           ; BSR set to: 15
  2855                           ;YellowFlash.C: 384: TMR0L = 0xef;
  2856  001E1E  0EEF               	movlw	239
  2857  001E20  6ED6               	movwf	4054,c	;volatile
  2858                           
  2859                           ; BSR set to: 15
  2860                           ;YellowFlash.C: 386: TMR0ON = 1;
  2861  001E22  8ED5               	bsf	4053,7,c	;volatile
  2862                           
  2863                           ; BSR set to: 15
  2864                           ;YellowFlash.C: 389: TMR1IE = 1;
  2865  001E24  809D               	bsf	3997,0,c	;volatile
  2866                           
  2867                           ; BSR set to: 15
  2868                           ;YellowFlash.C: 390: TMR1IF = 0;
  2869  001E26  909E               	bcf	3998,0,c	;volatile
  2870                           
  2871                           ; BSR set to: 15
  2872                           ;YellowFlash.C: 391: T1CON = 0x00;
  2873  001E28  6ACD               	clrf	4045,c	;volatile
  2874                           
  2875                           ; BSR set to: 15
  2876                           ;YellowFlash.C: 393: TMR1H = 0x3c;
  2877  001E2A  0E3C               	movlw	60
  2878  001E2C  6ECF               	movwf	4047,c	;volatile
  2879                           
  2880                           ; BSR set to: 15
  2881                           ;YellowFlash.C: 394: TMR1L = 0xaf;
  2882  001E2E  0EAF               	movlw	175
  2883  001E30  6ECE               	movwf	4046,c	;volatile
  2884                           
  2885                           ; BSR set to: 15
  2886  001E32  0CAF               	retlw	175
  2887  001E34                     __end_of_IntManager:
  2888                           	opt stack 0
  2889                           tblptru	equ	0xFF8
  2890                           tblptrh	equ	0xFF7
  2891                           tblptrl	equ	0xFF6
  2892                           tablat	equ	0xFF5
  2893                           prodh	equ	0xFF4
  2894                           prodl	equ	0xFF3
  2895                           intcon	equ	0xFF2
  2896                           postinc0	equ	0xFEE
  2897                           wreg	equ	0xFE8
  2898                           indf1	equ	0xFE7
  2899                           postdec1	equ	0xFE5
  2900                           fsr1h	equ	0xFE2
  2901                           fsr1l	equ	0xFE1
  2902                           indf2	equ	0xFDF
  2903                           postinc2	equ	0xFDE
  2904                           postdec2	equ	0xFDD
  2905                           fsr2h	equ	0xFDA
  2906                           fsr2l	equ	0xFD9
  2907                           status	equ	0xFD8
  2908                           
  2909 ;; *************** function _CANDATAAnalyzing *****************
  2910 ;; Defined at:
  2911 ;;		line 573 in file "G:\working\YellowFlashingController\YellowFlash.C"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  id              1    wreg     PTR unsigned char 
  2914 ;;		 -> CANRid(4), 
  2915 ;;  dat             1   52[COMRAM] PTR unsigned char 
  2916 ;;		 -> CANRdata(8), 
  2917 ;;  dlc             1   53[COMRAM] unsigned char 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  id              1   58[COMRAM] PTR unsigned char 
  2920 ;;		 -> CANRid(4), 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;		None               void
  2923 ;; Registers used:
  2924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : F/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2931 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2932 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2933 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2934 ;;Total ram usage:        7 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    8
  2937 ;; This function calls:
  2938 ;;		_CANReadVersion
  2939 ;;		_CANSendConfirm
  2940 ;;		_CANSendID
  2941 ;;		_CANWriteID
  2942 ;;		_EEPROMRead
  2943 ;;		_CANSend
  2944 ;;		_YFlashNewConfigure
  2945 ;;		_Read_YFlash_CFG
  2946 ;; This function is called by:
  2947 ;;		_main
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           	psect	text12
  2952  0010EE                     __ptext12:
  2953                           	opt stack 0
  2954  0010EE                     _CANDATAAnalyzing:
  2955                           	opt stack 22
  2956                           
  2957                           ; BSR set to: 15
  2958                           ;CANDATAAnalyzing@id stored from wreg
  2959  0010EE  CFE8 F03B          	movff	wreg,CANDATAAnalyzing@id
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;YellowFlash.C: 580: switch (((dat[0] & 0xc0)>>6))
  2963  0010F2  D009               	goto	l3037
  2964  0010F4                     l561:
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;YellowFlash.C: 583: f_r_mod = 0x00;
  2968  0010F4  6A44               	clrf	_f_r_mod,c
  2969                           
  2970                           ;YellowFlash.C: 584: break;
  2971  0010F6  D022               	goto	l3039
  2972  0010F8                     l3029:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;YellowFlash.C: 586: f_r_mod = 0x01;
  2976  0010F8  0E01               	movlw	1
  2977  0010FA  D003               	goto	L4
  2978  0010FC                     l3031:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;YellowFlash.C: 589: f_r_mod = 0x02;
  2982  0010FC  0E02               	movlw	2
  2983  0010FE  D001               	goto	L4
  2984  001100                     l3033:
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;YellowFlash.C: 592: f_r_mod = 0x03;
  2988  001100  0E03               	movlw	3
  2989  001102                     L4:
  2990  001102  6E44               	movwf	_f_r_mod,c
  2991                           
  2992                           ;YellowFlash.C: 593: break;
  2993  001104  D01B               	goto	l3039
  2994  001106                     l3037:
  2995                           
  2996                           ; BSR set to: 0
  2997  001106  5035               	movf	CANDATAAnalyzing@dat,w,c
  2998  001108  6ED9               	movwf	fsr2l,c
  2999  00110A  6ADA               	clrf	fsr2h,c
  3000  00110C  50DF               	movf	indf2,w,c
  3001  00110E  6E37               	movwf	??_CANDATAAnalyzing& (0+255),c
  3002  001110  0E06               	movlw	6
  3003  001112  6E38               	movwf	(??_CANDATAAnalyzing+1)& (0+255),c
  3004  001114                     u1145:
  3005  001114  90D8               	bcf	status,0,c
  3006  001116  3237               	rrcf	??_CANDATAAnalyzing,f,c
  3007  001118  2E38               	decfsz	(??_CANDATAAnalyzing+1)& (0+255),f,c
  3008  00111A  D7FC               	goto	u1145
  3009  00111C  0E03               	movlw	3
  3010  00111E  1637               	andwf	??_CANDATAAnalyzing,f,c
  3011  001120  C037  F039         	movff	??_CANDATAAnalyzing,??_CANDATAAnalyzing+2
  3012  001124  6A3A               	clrf	(??_CANDATAAnalyzing+3)& (0+255),c
  3013                           
  3014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3015                           ; Switch size 1, requested type "space"
  3016                           ; Number of cases is 1, Range of values is 0 to 0
  3017                           ; switch strategies available:
  3018                           ; Name         Instructions Cycles
  3019                           ; simple_byte            4     3 (average)
  3020                           ;	Chosen strategy is simple_byte
  3021  001126  503A               	movf	??_CANDATAAnalyzing+3,w,c
  3022  001128  E1E5               	bnz	l561
  3023                           
  3024                           ; BSR set to: 0
  3025                           ; Switch size 1, requested type "space"
  3026                           ; Number of cases is 4, Range of values is 0 to 3
  3027                           ; switch strategies available:
  3028                           ; Name         Instructions Cycles
  3029                           ; simple_byte           13     7 (average)
  3030                           ;	Chosen strategy is simple_byte
  3031  00112A  5039               	movf	??_CANDATAAnalyzing+2,w,c
  3032  00112C  E0E3               	bz	l561
  3033  00112E  0A01               	xorlw	1	; case 1
  3034  001130  E0E3               	bz	l3029
  3035  001132  0A03               	xorlw	3	; case 2
  3036  001134  E0E3               	bz	l3031
  3037  001136  0A01               	xorlw	1	; case 3
  3038  001138  E0E3               	bz	l3033
  3039  00113A  D7DC               	goto	l561
  3040  00113C                     l3039:
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;YellowFlash.C: 598: if(dat[0]==0xff)
  3044  00113C  5035               	movf	CANDATAAnalyzing@dat,w,c
  3045  00113E  6ED9               	movwf	fsr2l,c
  3046  001140  6ADA               	clrf	fsr2h,c
  3047  001142  0EFF               	movlw	255
  3048  001144  62DF               	cpfseq	indf2,c
  3049  001146  D002               	goto	l3043
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;YellowFlash.C: 599: CANReadVersion();
  3053  001148  EC94  F00C         	call	_CANReadVersion	;wreg free
  3054  00114C                     l3043:
  3055                           
  3056                           ;YellowFlash.C: 602: if(((id[1]>>5)&0x03)==0x03)
  3057  00114C  503B               	movf	CANDATAAnalyzing@id,w,c
  3058  00114E  6ED9               	movwf	fsr2l,c
  3059  001150  6ADA               	clrf	fsr2h,c
  3060  001152  2AD9               	incf	fsr2l,f,c
  3061  001154  6ADA               	clrf	fsr2h,c
  3062  001156  50DF               	movf	indf2,w,c
  3063  001158  6E37               	movwf	??_CANDATAAnalyzing& (0+255),c
  3064  00115A  0E05               	movlw	5
  3065  00115C  6E38               	movwf	(??_CANDATAAnalyzing+1)& (0+255),c
  3066  00115E                     u1165:
  3067  00115E  90D8               	bcf	status,0,c
  3068  001160  3237               	rrcf	??_CANDATAAnalyzing,f,c
  3069  001162  2E38               	decfsz	(??_CANDATAAnalyzing+1)& (0+255),f,c
  3070  001164  D7FC               	goto	u1165
  3071  001166  5037               	movf	??_CANDATAAnalyzing,w,c
  3072  001168  0B03               	andlw	3
  3073  00116A  0A03               	xorlw	3
  3074  00116C  E10F               	bnz	l3065
  3075                           
  3076                           ;YellowFlash.C: 603: {
  3077                           ;YellowFlash.C: 604: if(force_status)
  3078  00116E  5045               	movf	_force_status,w,c
  3079  001170  A4D8               	btfss	status,2,c
  3080  001172  0012               	return	
  3081                           
  3082                           ;YellowFlash.C: 606: else
  3083                           ;YellowFlash.C: 607: {
  3084                           ;YellowFlash.C: 608: heartbeat=0;
  3085  001174  6A46               	clrf	_heartbeat,c
  3086                           
  3087                           ;YellowFlash.C: 609: TMR0ON = 1;
  3088  001176  8ED5               	bsf	4053,7,c	;volatile
  3089                           
  3090                           ;YellowFlash.C: 610: T1CON |= 0x00;
  3091  001178  50CD               	movf	4045,w,c	;volatile
  3092                           
  3093                           ;YellowFlash.C: 611: turnoff=0x00;
  3094  00117A  6A5C               	clrf	_turnoff,c
  3095                           
  3096                           ;YellowFlash.C: 612: switchmode=0;
  3097  00117C  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  3098  00117E  905F               	bcf	_switchmode/(0+8),_switchmode& (0+7),c
  3099                           
  3100                           ;YellowFlash.C: 613: yflash_status=0x00;
  3101  001180  6A4C               	clrf	_yflash_status,c
  3102                           
  3103                           ;YellowFlash.C: 614: RC6=1;
  3104  001182  8C82               	bsf	3970,6,c	;volatile
  3105                           
  3106                           ;YellowFlash.C: 615: RC4=1;
  3107  001184  8882               	bsf	3970,4,c	;volatile
  3108                           
  3109                           ;YellowFlash.C: 616: RD3=1;
  3110  001186  8683               	bsf	3971,3,c	;volatile
  3111                           
  3112                           ;YellowFlash.C: 617: RD2=0;
  3113  001188  9483               	bcf	3971,2,c	;volatile
  3114  00118A  0012               	return	
  3115  00118C                     l3065:
  3116                           
  3117                           ;YellowFlash.C: 621: else
  3118                           ;YellowFlash.C: 622: {
  3119                           ;YellowFlash.C: 625: if((f_r_mod ==0x02)&&((dat[0] & 0x3f)!=0x02))
  3120  00118C  5044               	movf	_f_r_mod,w,c
  3121  00118E  0A02               	xorlw	2
  3122  001190  E171               	bnz	l3167
  3123  001192  5035               	movf	CANDATAAnalyzing@dat,w,c
  3124  001194  6ED9               	movwf	fsr2l,c
  3125  001196  6ADA               	clrf	fsr2h,c
  3126  001198  50DF               	movf	indf2,w,c
  3127  00119A  0B3F               	andlw	63
  3128  00119C  0A02               	xorlw	2
  3129  00119E  E06A               	bz	l3167
  3130                           
  3131                           ;YellowFlash.C: 626: {
  3132                           ;YellowFlash.C: 627: CANSendConfirm();
  3133  0011A0  ECB1  F00E         	call	_CANSendConfirm	;wreg free
  3134  0011A4  D067               	goto	l3167
  3135  0011A6                     l3071:
  3136                           
  3137                           ;YellowFlash.C: 635: if(f_r_mod ==0x01)
  3138  0011A6  0444               	decf	_f_r_mod,w,c
  3139  0011A8  A4D8               	btfss	status,2,c
  3140  0011AA  0012               	return	
  3141                           
  3142                           ;YellowFlash.C: 636: {
  3143                           ;YellowFlash.C: 637: CANSendID(0X00);
  3144  0011AC  0E00               	movlw	0
  3145  0011AE  EF7A  F00E         	goto	_CANSendID
  3146  0011B2                     l3075:
  3147                           
  3148                           ;YellowFlash.C: 642: CANWriteID(f_r_mod);
  3149  0011B2  5044               	movf	_f_r_mod,w,c
  3150  0011B4  EFC9  F00E         	goto	_CANWriteID
  3151  0011B8                     l3077:
  3152                           
  3153                           ;YellowFlash.C: 646: CANSdlc=4;
  3154  0011B8  0E04               	movlw	4
  3155  0011BA  6E5B               	movwf	_CANSdlc,c
  3156                           
  3157                           ;YellowFlash.C: 647: CANSdata[0]=0x02;
  3158  0011BC  0E02               	movlw	2
  3159  0011BE  6E4D               	movwf	_CANSdata,c
  3160                           
  3161                           ;YellowFlash.C: 648: eeprom_addr = 0x0009;
  3162  0011C0  6A56               	clrf	_eeprom_addr+1,c
  3163  0011C2  0E09               	movlw	9
  3164  0011C4  6E55               	movwf	_eeprom_addr,c
  3165                           
  3166                           ;YellowFlash.C: 649: eeprom_num = 2;
  3167  0011C6  0E02               	movlw	2
  3168  0011C8  6E5E               	movwf	_eeprom_num,c
  3169                           
  3170                           ;YellowFlash.C: 650: EEPROMRead(&eeprom_addr,&eeprom_num,(CANSdata+1));
  3171  0011CA  0E5E               	movlw	low _eeprom_num
  3172  0011CC  6E01               	movwf	?_EEPROMRead,c
  3173  0011CE  0E4E               	movlw	low (_CANSdata+1)
  3174  0011D0  6E02               	movwf	?_EEPROMRead+1,c
  3175  0011D2  0E55               	movlw	_eeprom_addr& (0+255)
  3176  0011D4  EC3E  F00E         	call	_EEPROMRead
  3177  0011D8  D02D               	goto	L5
  3178  0011DA                     l3085:
  3179                           
  3180                           ;YellowFlash.C: 657: YFlashNewConfigure();
  3181  0011DA  ECFF  F00A         	call	_YFlashNewConfigure	;wreg free
  3182                           
  3183                           ;YellowFlash.C: 659: if(f_r_mod==0x01)
  3184  0011DE  0444               	decf	_f_r_mod,w,c
  3185  0011E0  E10F               	bnz	l3097
  3186                           
  3187                           ;YellowFlash.C: 660: {
  3188                           ;YellowFlash.C: 661: CANSdlc=3;
  3189  0011E2  0E03               	movlw	3
  3190  0011E4  6E5B               	movwf	_CANSdlc,c
  3191                           
  3192                           ;YellowFlash.C: 662: CANSdata[0]=0x03;
  3193  0011E6  6E4D               	movwf	_CANSdata,c
  3194                           
  3195                           ;YellowFlash.C: 663: CANSdata[1]=yflash_CFG[0];
  3196  0011E8  C059  F04E         	movff	_yflash_CFG,_CANSdata+1
  3197                           
  3198                           ;YellowFlash.C: 664: CANSdata[2]=yflash_CFG[1];
  3199  0011EC  C05A  F04F         	movff	_yflash_CFG+1,_CANSdata+2
  3200                           
  3201                           ;YellowFlash.C: 666: CANSend(CANSid,CANSdata,CANSdlc);
  3202  0011F0  0E4D               	movlw	low _CANSdata
  3203  0011F2  6E01               	movwf	?_CANSend,c
  3204  0011F4  C05B  F002         	movff	_CANSdlc,?_CANSend+1
  3205  0011F8  0100               	movlb	0	; () banked
  3206  0011FA  0EEC               	movlw	_CANSid& (0+255)
  3207  0011FC  ECFC  F009         	call	_CANSend
  3208  001200                     l3097:
  3209                           
  3210                           ;YellowFlash.C: 667: }
  3211                           ;YellowFlash.C: 669: Read_YFlash_CFG();
  3212  001200  EC0C  F00D         	call	_Read_YFlash_CFG	;wreg free
  3213                           
  3214                           ;YellowFlash.C: 671: INTCON |= 0xc0;
  3215  001204  0EC0               	movlw	192
  3216  001206  12F2               	iorwf	intcon,f,c	;volatile
  3217                           
  3218                           ;YellowFlash.C: 673: TMR0IE = 1;
  3219  001208  8AF2               	bsf	intcon,5,c	;volatile
  3220                           
  3221                           ;YellowFlash.C: 674: TMR0IF = 0;
  3222  00120A  94F2               	bcf	intcon,2,c	;volatile
  3223                           
  3224                           ;YellowFlash.C: 675: T08BIT = 0;
  3225  00120C  9CD5               	bcf	4053,6,c	;volatile
  3226                           
  3227                           ;YellowFlash.C: 676: T0CS = 0;
  3228  00120E  9AD5               	bcf	4053,5,c	;volatile
  3229                           
  3230                           ;YellowFlash.C: 678: TMR0H = 0xd8;
  3231  001210  0ED8               	movlw	216
  3232  001212  6ED7               	movwf	4055,c	;volatile
  3233                           
  3234                           ;YellowFlash.C: 679: TMR0L = 0xef;
  3235  001214  0EEF               	movlw	239
  3236  001216  6ED6               	movwf	4054,c	;volatile
  3237                           
  3238                           ;YellowFlash.C: 681: TMR0ON = 1;
  3239  001218  8ED5               	bsf	4053,7,c	;volatile
  3240                           
  3241                           ;YellowFlash.C: 683: break;
  3242  00121A  0CEF               	retlw	239
  3243  00121C                     l581:
  3244                           
  3245                           ;YellowFlash.C: 686: yflash_status=CANRdata[1];
  3246  00121C  C0E1  F04C         	movff	_CANRdata+1,_yflash_status
  3247                           
  3248                           ;YellowFlash.C: 687: RD2=1;
  3249  001220  8483               	bsf	3971,2,c	;volatile
  3250                           
  3251                           ;YellowFlash.C: 688: Read_YFlash_CFG();
  3252  001222  EC0C  F00D         	call	_Read_YFlash_CFG	;wreg free
  3253                           
  3254                           ;YellowFlash.C: 689: T1CON |= 0x01;
  3255  001226  80CD               	bsf	4045,0,c	;volatile
  3256                           
  3257                           ;YellowFlash.C: 690: turnoff=0x01;
  3258  001228  0E01               	movlw	1
  3259  00122A  6E5C               	movwf	_turnoff,c
  3260                           
  3261                           ;YellowFlash.C: 691: switchmode=1;
  3262  00122C  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  3263  00122E  805F               	bsf	_switchmode/(0+8),_switchmode& (0+7),c
  3264                           
  3265                           ;YellowFlash.C: 692: force_status=0x01;
  3266  001230  6E45               	movwf	_force_status,c
  3267  001232  D014               	goto	L6
  3268  001234                     L5:
  3269                           
  3270                           ;YellowFlash.C: 699: CANSdata[3]=yflash_status;
  3271  001234  C04C  F050         	movff	_yflash_status,_CANSdata+3
  3272                           
  3273                           ;YellowFlash.C: 700: CANSend(CANSid,CANSdata,CANSdlc);
  3274  001238  0E4D               	movlw	low _CANSdata
  3275  00123A  6E01               	movwf	?_CANSend,c
  3276  00123C  C05B  F002         	movff	_CANSdlc,?_CANSend+1
  3277  001240  0EEC               	movlw	_CANSid& (0+255)
  3278  001242  EFFC  F009         	goto	_CANSend
  3279  001246                     l583:
  3280                           
  3281                           ;YellowFlash.C: 705: yflash_status=0x00;
  3282  001246  6A4C               	clrf	_yflash_status,c
  3283                           
  3284                           ;YellowFlash.C: 706: force_status=0x00;
  3285  001248  6A45               	clrf	_force_status,c
  3286                           
  3287                           ;YellowFlash.C: 707: T1CON |= 0x00;
  3288  00124A  50CD               	movf	4045,w,c	;volatile
  3289                           
  3290                           ;YellowFlash.C: 708: TMR0ON = 1;
  3291  00124C  8ED5               	bsf	4053,7,c	;volatile
  3292                           
  3293                           ;YellowFlash.C: 709: turnoff=0x00;
  3294  00124E  6A5C               	clrf	_turnoff,c
  3295                           
  3296                           ;YellowFlash.C: 710: switchmode=0;
  3297  001250  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  3298  001252  905F               	bcf	_switchmode/(0+8),_switchmode& (0+7),c
  3299                           
  3300                           ;YellowFlash.C: 711: RC6=1;
  3301  001254  8C82               	bsf	3970,6,c	;volatile
  3302                           
  3303                           ;YellowFlash.C: 712: RC4=1;
  3304  001256  8882               	bsf	3970,4,c	;volatile
  3305                           
  3306                           ;YellowFlash.C: 713: RD3=1;
  3307  001258  8683               	bsf	3971,3,c	;volatile
  3308                           
  3309                           ;YellowFlash.C: 714: RD2=0;
  3310  00125A  9483               	bcf	3971,2,c	;volatile
  3311  00125C                     L6:
  3312                           
  3313                           ;YellowFlash.C: 715: if(f_r_mod==0x01)
  3314  00125C  0444               	decf	_f_r_mod,w,c
  3315  00125E  A4D8               	btfss	status,2,c
  3316  001260  0012               	return	
  3317                           
  3318                           ;YellowFlash.C: 716: {
  3319                           ;YellowFlash.C: 717: CANSdlc=4;
  3320  001262  0E04               	movlw	4
  3321  001264  6E5B               	movwf	_CANSdlc,c
  3322                           
  3323                           ;YellowFlash.C: 718: CANSdata[0]=0x02;
  3324  001266  0E02               	movlw	2
  3325  001268  6E4D               	movwf	_CANSdata,c
  3326                           
  3327                           ;YellowFlash.C: 719: CANSdata[1]=yflash_CFG[0];
  3328  00126A  C059  F04E         	movff	_yflash_CFG,_CANSdata+1
  3329                           
  3330                           ;YellowFlash.C: 720: CANSdata[2]=yflash_CFG[1];
  3331  00126E  C05A  F04F         	movff	_yflash_CFG+1,_CANSdata+2
  3332  001272  D7E0               	goto	L5
  3333  001274                     l3167:
  3334  001274  5035               	movf	CANDATAAnalyzing@dat,w,c
  3335  001276  6ED9               	movwf	fsr2l,c
  3336  001278  6ADA               	clrf	fsr2h,c
  3337  00127A  50DF               	movf	indf2,w,c
  3338  00127C  6E37               	movwf	??_CANDATAAnalyzing& (0+255),c
  3339  00127E  0E3F               	movlw	63
  3340  001280  1637               	andwf	??_CANDATAAnalyzing,f,c
  3341  001282  C037  F038         	movff	??_CANDATAAnalyzing,??_CANDATAAnalyzing+1
  3342  001286  6A39               	clrf	(??_CANDATAAnalyzing+2)& (0+255),c
  3343                           
  3344                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3345                           ; Switch size 1, requested type "space"
  3346                           ; Number of cases is 1, Range of values is 0 to 0
  3347                           ; switch strategies available:
  3348                           ; Name         Instructions Cycles
  3349                           ; simple_byte            4     3 (average)
  3350                           ;	Chosen strategy is simple_byte
  3351  001288  5039               	movf	??_CANDATAAnalyzing+2,w,c
  3352  00128A  A4D8               	btfss	status,2,c
  3353  00128C  0012               	return	
  3354                           
  3355                           ; Switch size 1, requested type "space"
  3356                           ; Number of cases is 6, Range of values is 0 to 5
  3357                           ; switch strategies available:
  3358                           ; Name         Instructions Cycles
  3359                           ; simple_byte           19    10 (average)
  3360                           ;	Chosen strategy is simple_byte
  3361  00128E  5038               	movf	??_CANDATAAnalyzing+1,w,c
  3362  001290  E08A               	bz	l3071
  3363  001292  0A01               	xorlw	1	; case 1
  3364  001294  E08E               	bz	l3075
  3365  001296  0A03               	xorlw	3	; case 2
  3366  001298  E08F               	bz	l3077
  3367  00129A  0A01               	xorlw	1	; case 3
  3368  00129C  E09E               	bz	l3085
  3369  00129E  0A07               	xorlw	7	; case 4
  3370  0012A0  E0BD               	bz	l581
  3371  0012A2  0A01               	xorlw	1	; case 5
  3372  0012A4  A4D8               	btfss	status,2,c
  3373  0012A6  0012               	return	
  3374  0012A8  D7CE               	goto	l583
  3375  0012AA                     __end_of_CANDATAAnalyzing:
  3376                           	opt stack 0
  3377                           tblptru	equ	0xFF8
  3378                           tblptrh	equ	0xFF7
  3379                           tblptrl	equ	0xFF6
  3380                           tablat	equ	0xFF5
  3381                           prodh	equ	0xFF4
  3382                           prodl	equ	0xFF3
  3383                           intcon	equ	0xFF2
  3384                           postinc0	equ	0xFEE
  3385                           wreg	equ	0xFE8
  3386                           indf1	equ	0xFE7
  3387                           postdec1	equ	0xFE5
  3388                           fsr1h	equ	0xFE2
  3389                           fsr1l	equ	0xFE1
  3390                           indf2	equ	0xFDF
  3391                           postinc2	equ	0xFDE
  3392                           postdec2	equ	0xFDD
  3393                           fsr2h	equ	0xFDA
  3394                           fsr2l	equ	0xFD9
  3395                           status	equ	0xFD8
  3396                           
  3397 ;; *************** function _CANSendConfirm *****************
  3398 ;; Defined at:
  3399 ;;		line 408 in file "G:\working\YellowFlashingController\YellowFlash.C"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  i               1    2[COMRAM] unsigned char 
  3404 ;; Return value:  Size  Location     Type
  3405 ;;		None               void
  3406 ;; Registers used:
  3407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : F/F
  3411 ;;		Unchanged: FFFFFFF0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3416 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3417 ;;Total ram usage:        1 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    5
  3420 ;; This function calls:
  3421 ;;		_CANSend
  3422 ;; This function is called by:
  3423 ;;		_CANDATAAnalyzing
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           
  3427                           	psect	text13
  3428  001D62                     __ptext13:
  3429                           	opt stack 0
  3430  001D62                     _CANSendConfirm:
  3431                           	opt stack 24
  3432                           
  3433                           ;YellowFlash.C: 409: unsigned char i;
  3434                           ;YellowFlash.C: 411: for(i=0;i<8;i++)
  3435  001D62  6A03               	clrf	CANSendConfirm@i,c
  3436  001D64                     l2897:
  3437                           
  3438                           ;YellowFlash.C: 412: {
  3439                           ;YellowFlash.C: 413: CANSdata[i] = CANRdata[i];
  3440  001D64  5003               	movf	CANSendConfirm@i,w,c
  3441  001D66  0FE0               	addlw	low _CANRdata
  3442  001D68  6ED9               	movwf	fsr2l,c
  3443  001D6A  6ADA               	clrf	fsr2h,c
  3444  001D6C  5003               	movf	CANSendConfirm@i,w,c
  3445  001D6E  0F4D               	addlw	low _CANSdata
  3446  001D70  6EE1               	movwf	fsr1l,c
  3447  001D72  6AE2               	clrf	fsr1h,c
  3448  001D74  CFDF FFE7          	movff	indf2,indf1
  3449                           
  3450                           ; BSR set to: 0
  3451  001D78  2A03               	incf	CANSendConfirm@i,f,c
  3452                           
  3453                           ; BSR set to: 0
  3454  001D7A  0E07               	movlw	7
  3455  001D7C  6403               	cpfsgt	CANSendConfirm@i,c
  3456  001D7E  D7F2               	goto	l2897
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;YellowFlash.C: 414: }
  3460                           ;YellowFlash.C: 415: CANSdlc = CANRdlc;
  3461  001D80  C05D  F05B         	movff	_CANRdlc,_CANSdlc
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;YellowFlash.C: 416: CANSend(CANSid,CANSdata,CANSdlc);
  3465  001D84  0E4D               	movlw	low _CANSdata
  3466  001D86  6E01               	movwf	?_CANSend,c
  3467  001D88  C05B  F002         	movff	_CANSdlc,?_CANSend+1
  3468  001D8C  0EEC               	movlw	_CANSid& (0+255)
  3469  001D8E  EFFC  F009         	goto	_CANSend
  3470  001D92                     __end_of_CANSendConfirm:
  3471                           	opt stack 0
  3472                           tblptru	equ	0xFF8
  3473                           tblptrh	equ	0xFF7
  3474                           tblptrl	equ	0xFF6
  3475                           tablat	equ	0xFF5
  3476                           prodh	equ	0xFF4
  3477                           prodl	equ	0xFF3
  3478                           intcon	equ	0xFF2
  3479                           postinc0	equ	0xFEE
  3480                           wreg	equ	0xFE8
  3481                           indf1	equ	0xFE7
  3482                           postdec1	equ	0xFE5
  3483                           fsr1h	equ	0xFE2
  3484                           fsr1l	equ	0xFE1
  3485                           indf2	equ	0xFDF
  3486                           postinc2	equ	0xFDE
  3487                           postdec2	equ	0xFDD
  3488                           fsr2h	equ	0xFDA
  3489                           fsr2l	equ	0xFD9
  3490                           status	equ	0xFD8
  3491                           
  3492 ;; *************** function _CANWriteID *****************
  3493 ;; Defined at:
  3494 ;;		line 439 in file "G:\working\YellowFlashingController\YellowFlash.C"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  fm              1    wreg     unsigned char 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  fm              1    4[COMRAM] unsigned char 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;		None               void
  3501 ;; Registers used:
  3502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3509 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3511 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3512 ;;Total ram usage:        1 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:    6
  3515 ;; This function calls:
  3516 ;;		_EEPROMWrite
  3517 ;;		_CANSendID
  3518 ;; This function is called by:
  3519 ;;		_CANDATAAnalyzing
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text14
  3524  001D92                     __ptext14:
  3525                           	opt stack 0
  3526  001D92                     _CANWriteID:
  3527                           	opt stack 23
  3528                           
  3529                           ; BSR set to: 15
  3530                           ;CANWriteID@fm stored from wreg
  3531  001D92  CFE8 F005          	movff	wreg,CANWriteID@fm
  3532                           
  3533                           ;YellowFlash.C: 440: eeprom_addr = 0x0000;
  3534  001D96  6A55               	clrf	_eeprom_addr,c
  3535  001D98  6A56               	clrf	_eeprom_addr+1,c
  3536                           
  3537                           ;YellowFlash.C: 441: eeprom_num = 4;
  3538  001D9A  0E04               	movlw	4
  3539  001D9C  6E5E               	movwf	_eeprom_num,c
  3540                           
  3541                           ;YellowFlash.C: 442: EEPROMWrite(&eeprom_addr,&eeprom_num,(CANRdata+1));
  3542  001D9E  0E5E               	movlw	low _eeprom_num
  3543  001DA0  6E01               	movwf	?_EEPROMWrite,c
  3544  001DA2  0100               	movlb	0	; () banked
  3545  001DA4  0E00               	movlw	high (_CANRdata+1)
  3546  001DA6  6E03               	movwf	?_EEPROMWrite+2,c
  3547  001DA8  0EE1               	movlw	low (_CANRdata+1)
  3548  001DAA  6E02               	movwf	?_EEPROMWrite+1,c
  3549  001DAC  0E55               	movlw	_eeprom_addr& (0+255)
  3550  001DAE  EC45  F00D         	call	_EEPROMWrite
  3551                           
  3552                           ;YellowFlash.C: 443: if(fm==0x01)
  3553  001DB2  0405               	decf	CANWriteID@fm,w,c
  3554  001DB4  A4D8               	btfss	status,2,c
  3555  001DB6  0012               	return	
  3556                           
  3557                           ;YellowFlash.C: 444: {
  3558                           ;YellowFlash.C: 445: CANSendID(0X01);
  3559  001DB8  0E01               	movlw	1
  3560  001DBA  EF7A  F00E         	goto	_CANSendID
  3561  001DBE                     __end_of_CANWriteID:
  3562                           	opt stack 0
  3563                           tblptru	equ	0xFF8
  3564                           tblptrh	equ	0xFF7
  3565                           tblptrl	equ	0xFF6
  3566                           tablat	equ	0xFF5
  3567                           prodh	equ	0xFF4
  3568                           prodl	equ	0xFF3
  3569                           intcon	equ	0xFF2
  3570                           postinc0	equ	0xFEE
  3571                           wreg	equ	0xFE8
  3572                           indf1	equ	0xFE7
  3573                           postdec1	equ	0xFE5
  3574                           fsr1h	equ	0xFE2
  3575                           fsr1l	equ	0xFE1
  3576                           indf2	equ	0xFDF
  3577                           postinc2	equ	0xFDE
  3578                           postdec2	equ	0xFDD
  3579                           fsr2h	equ	0xFDA
  3580                           fsr2l	equ	0xFD9
  3581                           status	equ	0xFD8
  3582                           
  3583 ;; *************** function _CANSendID *****************
  3584 ;; Defined at:
  3585 ;;		line 421 in file "G:\working\YellowFlashingController\YellowFlash.C"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  sm              1    wreg     unsigned char 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;  sm              1    3[COMRAM] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;		None               void
  3592 ;; Registers used:
  3593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : F/F
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3602 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3603 ;;Total ram usage:        1 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    5
  3606 ;; This function calls:
  3607 ;;		_EEPROMRead
  3608 ;;		_CANSend
  3609 ;; This function is called by:
  3610 ;;		_CANWriteID
  3611 ;;		_CANDATAAnalyzing
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           	psect	text15
  3616  001CF4                     __ptext15:
  3617                           	opt stack 0
  3618  001CF4                     _CANSendID:
  3619                           	opt stack 23
  3620                           
  3621                           ;CANSendID@sm stored from wreg
  3622  001CF4  CFE8 F004          	movff	wreg,CANSendID@sm
  3623                           
  3624                           ;YellowFlash.C: 423: CANSdlc = 4 + 1;
  3625  001CF8  0E05               	movlw	5
  3626  001CFA  6E5B               	movwf	_CANSdlc,c
  3627                           
  3628                           ;YellowFlash.C: 425: if(sm == 0X00)
  3629  001CFC  6604               	tstfsz	CANSendID@sm,c
  3630  001CFE  D002               	goto	l2911
  3631                           
  3632                           ;YellowFlash.C: 426: CANSdata[0] = 0X00;
  3633  001D00  6A4D               	clrf	_CANSdata,c
  3634  001D02  D002               	goto	l2913
  3635  001D04                     l2911:
  3636                           
  3637                           ;YellowFlash.C: 427: else
  3638                           ;YellowFlash.C: 428: CANSdata[0] = 0X01;
  3639  001D04  0E01               	movlw	1
  3640  001D06  6E4D               	movwf	_CANSdata,c
  3641  001D08                     l2913:
  3642                           
  3643                           ;YellowFlash.C: 431: eeprom_addr = 0x0000;
  3644  001D08  6A55               	clrf	_eeprom_addr,c
  3645  001D0A  6A56               	clrf	_eeprom_addr+1,c
  3646                           
  3647                           ;YellowFlash.C: 432: eeprom_num = 4;
  3648  001D0C  0E04               	movlw	4
  3649  001D0E  6E5E               	movwf	_eeprom_num,c
  3650                           
  3651                           ;YellowFlash.C: 433: EEPROMRead(&eeprom_addr,&eeprom_num,(CANSdata+1));
  3652  001D10  0E5E               	movlw	low _eeprom_num
  3653  001D12  6E01               	movwf	?_EEPROMRead,c
  3654  001D14  0E4E               	movlw	low (_CANSdata+1)
  3655  001D16  6E02               	movwf	?_EEPROMRead+1,c
  3656  001D18  0E55               	movlw	_eeprom_addr& (0+255)
  3657  001D1A  EC3E  F00E         	call	_EEPROMRead
  3658                           
  3659                           ;YellowFlash.C: 434: CANSend(CANSid,CANSdata,CANSdlc);
  3660  001D1E  0E4D               	movlw	low _CANSdata
  3661  001D20  6E01               	movwf	?_CANSend,c
  3662  001D22  C05B  F002         	movff	_CANSdlc,?_CANSend+1
  3663  001D26  0EEC               	movlw	_CANSid& (0+255)
  3664  001D28  EFFC  F009         	goto	_CANSend
  3665  001D2C                     __end_of_CANSendID:
  3666                           	opt stack 0
  3667                           tblptru	equ	0xFF8
  3668                           tblptrh	equ	0xFF7
  3669                           tblptrl	equ	0xFF6
  3670                           tablat	equ	0xFF5
  3671                           prodh	equ	0xFF4
  3672                           prodl	equ	0xFF3
  3673                           intcon	equ	0xFF2
  3674                           postinc0	equ	0xFEE
  3675                           wreg	equ	0xFE8
  3676                           indf1	equ	0xFE7
  3677                           postdec1	equ	0xFE5
  3678                           fsr1h	equ	0xFE2
  3679                           fsr1l	equ	0xFE1
  3680                           indf2	equ	0xFDF
  3681                           postinc2	equ	0xFDE
  3682                           postdec2	equ	0xFDD
  3683                           fsr2h	equ	0xFDA
  3684                           fsr2l	equ	0xFD9
  3685                           status	equ	0xFD8
  3686                           
  3687 ;; *************** function _YFlashNewConfigure *****************
  3688 ;; Defined at:
  3689 ;;		line 505 in file "G:\working\YellowFlashingController\YellowFlash.C"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;		None
  3694 ;; Return value:  Size  Location     Type
  3695 ;;		None               void
  3696 ;; Registers used:
  3697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3707 ;;Total ram usage:        0 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; Hardware stack levels required when called:    7
  3710 ;; This function calls:
  3711 ;;		_EEPROMRead
  3712 ;;		_EEPROMWrite
  3713 ;;		_CalculateTime25msCounter
  3714 ;; This function is called by:
  3715 ;;		_CANDATAAnalyzing
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	text16
  3720  0015FE                     __ptext16:
  3721                           	opt stack 0
  3722  0015FE                     _YFlashNewConfigure:
  3723                           	opt stack 0
  3724                           
  3725                           ;YellowFlash.C: 506: eeprom_addr = 0x0009;
  3726                           
  3727                           ; BSR set to: 15
  3728                           
  3729                           ;YellowFlash.C: 507: eeprom_num = 2;
  3730                           
  3731                           ;YellowFlash.C: 508: EEPROMRead(&eeprom_addr,&eeprom_num,&yflash_CFG);
  3732  0015FE  EC31  F00D         	call	PL3	;call to abstracted procedure
  3733  001602  EC3E  F00E         	call	_EEPROMRead
  3734                           
  3735                           ;YellowFlash.C: 511: if(((yflash_CFG[0]& 0xFF) != (CANRdata[1] & 0xFF)) || ((CANRdata[2]
      +                           & 0x03)!= 0x00))
  3736  001606  5059               	movf	_yflash_CFG,w,c
  3737  001608  0100               	movlb	0	; () banked
  3738  00160A  EE20  F0E1         	lfsr	2,_CANRdata+1
  3739  00160E  62DF               	cpfseq	indf2,c
  3740  001610  D004               	goto	l2963
  3741                           
  3742                           ; BSR set to: 0
  3743  001612  51E2               	movf	(_CANRdata+2)& (0+255),w,b
  3744  001614  0B03               	andlw	3
  3745  001616  B4D8               	btfsc	status,2,c
  3746  001618  0012               	return	
  3747  00161A                     l2963:
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;YellowFlash.C: 512: {
  3751                           ;YellowFlash.C: 513: if((yflash_CFG[0]& 0xFF) != (CANRdata[1] & 0xFF))
  3752  00161A  51E1               	movf	(_CANRdata+1)& (0+255),w,b
  3753  00161C  1859               	xorwf	_yflash_CFG,w,c
  3754  00161E  E00E               	bz	l2969
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;YellowFlash.C: 514: {
  3758                           ;YellowFlash.C: 515: eeprom_addr = 0x0009;
  3759  001620  6A56               	clrf	_eeprom_addr+1,c
  3760  001622  0E09               	movlw	9
  3761  001624  6E55               	movwf	_eeprom_addr,c
  3762                           
  3763                           ;YellowFlash.C: 516: eeprom_num = 1;
  3764  001626  0E01               	movlw	1
  3765  001628  6E5E               	movwf	_eeprom_num,c
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;YellowFlash.C: 517: EEPROMWrite(&eeprom_addr,&eeprom_num,(CANRdata+1));
  3769  00162A  0E5E               	movlw	low _eeprom_num
  3770  00162C  6E01               	movwf	?_EEPROMWrite,c
  3771  00162E  0E00               	movlw	high (_CANRdata+1)
  3772  001630  6E03               	movwf	?_EEPROMWrite+2,c
  3773  001632  0EE1               	movlw	low (_CANRdata+1)
  3774  001634  6E02               	movwf	?_EEPROMWrite+1,c
  3775  001636  0E55               	movlw	_eeprom_addr& (0+255)
  3776  001638  EC45  F00D         	call	_EEPROMWrite
  3777  00163C                     l2969:
  3778                           
  3779                           ;YellowFlash.C: 518: }
  3780                           ;YellowFlash.C: 519: if((CANRdata[2] & 0x03)!= 0x00)
  3781  00163C  0100               	movlb	0	; () banked
  3782  00163E  51E2               	movf	(_CANRdata+2)& (0+255),w,b
  3783  001640  0B03               	andlw	3
  3784  001642  E00E               	bz	l2975
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;YellowFlash.C: 520: {
  3788                           ;YellowFlash.C: 521: eeprom_addr = 0x000a;
  3789  001644  6A56               	clrf	_eeprom_addr+1,c
  3790  001646  0E0A               	movlw	10
  3791  001648  6E55               	movwf	_eeprom_addr,c
  3792                           
  3793                           ;YellowFlash.C: 522: eeprom_num = 1;
  3794  00164A  0E01               	movlw	1
  3795  00164C  6E5E               	movwf	_eeprom_num,c
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;YellowFlash.C: 523: EEPROMWrite(&eeprom_addr,&eeprom_num,(CANRdata+2));
  3799  00164E  0E5E               	movlw	low _eeprom_num
  3800  001650  6E01               	movwf	?_EEPROMWrite,c
  3801  001652  0E00               	movlw	high (_CANRdata+2)
  3802  001654  6E03               	movwf	?_EEPROMWrite+2,c
  3803  001656  0EE2               	movlw	low (_CANRdata+2)
  3804  001658  6E02               	movwf	?_EEPROMWrite+1,c
  3805  00165A  0E55               	movlw	_eeprom_addr& (0+255)
  3806  00165C  EC45  F00D         	call	_EEPROMWrite
  3807  001660                     l2975:
  3808                           
  3809                           ;YellowFlash.C: 524: }
  3810                           ;YellowFlash.C: 526: eeprom_addr = 0x0009;
  3811                           
  3812                           ;YellowFlash.C: 527: eeprom_num = 2;
  3813                           
  3814                           ;YellowFlash.C: 528: EEPROMRead(&eeprom_addr,&eeprom_num,&yflash_CFG);
  3815  001660  EC31  F00D         	call	PL3	;call to abstracted procedure
  3816  001664  EC3E  F00E         	call	_EEPROMRead
  3817                           
  3818                           ;YellowFlash.C: 530: rows=((yflash_CFG[0]&0xF0)>>4);
  3819  001668  3859               	swapf	_yflash_CFG,w,c
  3820  00166A  0B0F               	andlw	15
  3821  00166C  6E49               	movwf	_rows,c
  3822                           
  3823                           ;YellowFlash.C: 531: lines=(yflash_CFG[0]&0x0F);
  3824  00166E  5059               	movf	_yflash_CFG,w,c
  3825  001670  0B0F               	andlw	15
  3826  001672  6E47               	movwf	_lines,c
  3827                           
  3828                           ;YellowFlash.C: 532: CalculateTime25msCounter(rows,lines);
  3829  001674  C047  F029         	movff	_lines,?_CalculateTime25msCounter
  3830  001678  5049               	movf	_rows,w,c
  3831  00167A  EC55  F009         	call	_CalculateTime25msCounter
  3832                           
  3833                           ;YellowFlash.C: 534: time_counters=time_on_counter;
  3834  00167E  C042  F03E         	movff	_time_on_counter,_time_counters
  3835  001682  C043  F03F         	movff	_time_on_counter+1,_time_counters+1
  3836                           
  3837                           ;YellowFlash.C: 535: readwrite[0]=time_counters;
  3838  001686  C03E  F057         	movff	_time_counters,_readwrite
  3839                           
  3840                           ;YellowFlash.C: 536: readwrite[1]=(time_counters>>8);
  3841  00168A  503F               	movf	_time_counters+1,w,c
  3842  00168C  6E58               	movwf	_readwrite+1,c
  3843                           
  3844                           ;YellowFlash.C: 537: eeprom_addr = 0x0005;
  3845  00168E  6A56               	clrf	_eeprom_addr+1,c
  3846  001690  0E05               	movlw	5
  3847  001692  6E55               	movwf	_eeprom_addr,c
  3848                           
  3849                           ;YellowFlash.C: 538: eeprom_num = 2;
  3850                           
  3851                           ;YellowFlash.C: 539: EEPROMWrite(&eeprom_addr,&eeprom_num,&readwrite);
  3852  001694  D810               	call	PL7	;call to abstracted procedure
  3853  001696  EC45  F00D         	call	_EEPROMWrite
  3854                           
  3855                           ;YellowFlash.C: 541: time_counters=time_off_counter;
  3856  00169A  C040  F03E         	movff	_time_off_counter,_time_counters
  3857  00169E  C041  F03F         	movff	_time_off_counter+1,_time_counters+1
  3858                           
  3859                           ;YellowFlash.C: 542: readwrite[0]=time_counters;
  3860  0016A2  C03E  F057         	movff	_time_counters,_readwrite
  3861                           
  3862                           ;YellowFlash.C: 543: readwrite[1]=(time_counters>>8);
  3863  0016A6  503F               	movf	_time_counters+1,w,c
  3864  0016A8  6E58               	movwf	_readwrite+1,c
  3865                           
  3866                           ;YellowFlash.C: 544: eeprom_addr = 0x0007;
  3867  0016AA  6A56               	clrf	_eeprom_addr+1,c
  3868  0016AC  0E07               	movlw	7
  3869  0016AE  6E55               	movwf	_eeprom_addr,c
  3870                           
  3871                           ;YellowFlash.C: 545: eeprom_num = 2;
  3872                           
  3873                           ;YellowFlash.C: 546: EEPROMWrite(&eeprom_addr,&eeprom_num,&readwrite);
  3874  0016B0  D802               	call	PL7	;call to abstracted procedure
  3875  0016B2  EF45  F00D         	goto	_EEPROMWrite
  3876  0016B6                     __end_of_YFlashNewConfigure:
  3877                           	opt stack 0
  3878  0016B6                     PL7:
  3879  0016B6  0E02               	movlw	2
  3880  0016B8  6E5E               	movwf	_eeprom_num,c
  3881  0016BA  0E5E               	movlw	low _eeprom_num
  3882  0016BC  6E01               	movwf	?_EEPROMWrite,c
  3883  0016BE  0E57               	movlw	low _readwrite
  3884  0016C0  6E02               	movwf	?_EEPROMWrite+1,c
  3885  0016C2  0E00               	movlw	high _readwrite
  3886  0016C4  6E03               	movwf	?_EEPROMWrite+2,c
  3887  0016C6  0E0F               	movlw	15
  3888  0016C8  6E03               	movwf	?_EEPROMWrite+2,c
  3889  0016CA  0E5F               	movlw	__accesstop+-1
  3890  0016CC  6402               	cpfsgt	?_EEPROMWrite+1,c
  3891  0016CE  6A03               	clrf	?_EEPROMWrite+2,c
  3892  0016D0  0E55               	movlw	_eeprom_addr& (0+255)
  3893  0016D2  0012               	return	
  3894                           tblptru	equ	0xFF8
  3895                           tblptrh	equ	0xFF7
  3896                           tblptrl	equ	0xFF6
  3897                           tablat	equ	0xFF5
  3898                           prodh	equ	0xFF4
  3899                           prodl	equ	0xFF3
  3900                           intcon	equ	0xFF2
  3901                           postinc0	equ	0xFEE
  3902                           wreg	equ	0xFE8
  3903                           indf1	equ	0xFE7
  3904                           postdec1	equ	0xFE5
  3905                           fsr1h	equ	0xFE2
  3906                           fsr1l	equ	0xFE1
  3907                           indf2	equ	0xFDF
  3908                           postinc2	equ	0xFDE
  3909                           postdec2	equ	0xFDD
  3910                           fsr2h	equ	0xFDA
  3911                           fsr2l	equ	0xFD9
  3912                           status	equ	0xFD8
  3913                           
  3914 ;; *************** function _EEPROMWrite *****************
  3915 ;; Defined at:
  3916 ;;		line 58 in file "G:\working\YellowFlashingController\mcu.h"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  addr            1    wreg     PTR unsigned char 
  3919 ;;		 -> eeprom_addr(2), 
  3920 ;;  num             1    0[COMRAM] PTR unsigned char 
  3921 ;;		 -> eeprom_num(1), 
  3922 ;;  dat             2    1[COMRAM] PTR unsigned char 
  3923 ;;		 -> readwrite(2), CANRdata(8), 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;  addr            1    3[COMRAM] PTR unsigned char 
  3926 ;;		 -> eeprom_addr(2), 
  3927 ;; Return value:  Size  Location     Type
  3928 ;;		None               void
  3929 ;; Registers used:
  3930 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3936 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3939 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3940 ;;Total ram usage:        4 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:    4
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		_CANWriteID
  3947 ;;		_YFlashNewConfigure
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           	psect	text17
  3952  001A8A                     __ptext17:
  3953                           	opt stack 0
  3954  001A8A                     _EEPROMWrite:
  3955                           	opt stack 24
  3956                           
  3957                           ;EEPROMWrite@addr stored from wreg
  3958  001A8A  CFE8 F004          	movff	wreg,EEPROMWrite@addr
  3959                           
  3960                           ;mcu.h: 59: INTCON &= 0x3f;
  3961  001A8E  0E3F               	movlw	63
  3962  001A90  16F2               	andwf	intcon,f,c	;volatile
  3963                           
  3964                           ;mcu.h: 60: while((*num)--)
  3965  001A92  D020               	goto	l2799
  3966  001A94                     l377:
  3967                           
  3968                           ;mcu.h: 61: {
  3969                           ;mcu.h: 62: EEADRH = (*addr)>>8;
  3970  001A94  6A75               	clrf	3957,c	;volatile
  3971                           
  3972                           ;mcu.h: 63: EEADR = (*addr);
  3973  001A96  5004               	movf	EEPROMWrite@addr,w,c
  3974  001A98  6ED9               	movwf	fsr2l,c
  3975  001A9A  6ADA               	clrf	fsr2h,c
  3976  001A9C  50DF               	movf	indf2,w,c
  3977  001A9E  6E74               	movwf	3956,c	;volatile
  3978                           
  3979                           ;mcu.h: 64: (*addr)++;
  3980  001AA0  5004               	movf	EEPROMWrite@addr,w,c
  3981  001AA2  6ED9               	movwf	fsr2l,c
  3982  001AA4  6ADA               	clrf	fsr2h,c
  3983  001AA6  2ADF               	incf	indf2,f,c
  3984                           
  3985                           ;mcu.h: 65: EEDATA = (*dat);
  3986  001AA8  C002  FFD9         	movff	EEPROMWrite@dat,fsr2l
  3987  001AAC  C003  FFDA         	movff	EEPROMWrite@dat+1,fsr2h
  3988  001AB0  50DF               	movf	indf2,w,c
  3989  001AB2  6E73               	movwf	3955,c	;volatile
  3990                           
  3991                           ;mcu.h: 66: dat++;
  3992  001AB4  4A02               	infsnz	EEPROMWrite@dat,f,c
  3993  001AB6  2A03               	incf	EEPROMWrite@dat+1,f,c
  3994                           
  3995                           ;mcu.h: 68: EECON1 &= 0x3f;
  3996  001AB8  0E3F               	movlw	63
  3997  001ABA  167F               	andwf	3967,f,c	;volatile
  3998                           
  3999                           ;mcu.h: 70: EECON1 |= 0x04;
  4000  001ABC  847F               	bsf	3967,2,c	;volatile
  4001                           
  4002                           ;mcu.h: 75: EECON2 = 0x55;
  4003  001ABE  0E55               	movlw	85
  4004  001AC0  6E7E               	movwf	3966,c	;volatile
  4005                           
  4006                           ;mcu.h: 76: EECON2 = 0xaa;
  4007  001AC2  0EAA               	movlw	170
  4008  001AC4  6E7E               	movwf	3966,c	;volatile
  4009                           
  4010                           ;mcu.h: 78: EECON1 |= 0x02;
  4011  001AC6  827F               	bsf	3967,1,c	;volatile
  4012  001AC8  F000               	nop		;# 
  4013  001ACA                     l378:
  4014  001ACA  B27F               	btfsc	3967,1,c	;volatile
  4015  001ACC  D7FE               	goto	l378
  4016  001ACE  F000               	nop		;# 
  4017                           
  4018                           ;mcu.h: 83: EECON1 &= 0x04;
  4019  001AD0  0E04               	movlw	4
  4020  001AD2  167F               	andwf	3967,f,c	;volatile
  4021  001AD4                     l2799:
  4022  001AD4  5001               	movf	EEPROMWrite@num,w,c
  4023  001AD6  6ED9               	movwf	fsr2l,c
  4024  001AD8  6ADA               	clrf	fsr2h,c
  4025  001ADA  06DF               	decf	indf2,f,c
  4026  001ADC  0EFF               	movlw	255
  4027  001ADE  62DF               	cpfseq	indf2,c
  4028  001AE0  D7D9               	goto	l377
  4029                           
  4030                           ;mcu.h: 85: }
  4031                           ;mcu.h: 87: INTCON &= 0xc0;
  4032  001AE2  0EC0               	movlw	192
  4033  001AE4  16F2               	andwf	intcon,f,c	;volatile
  4034  001AE6  0CC0               	retlw	192
  4035  001AE8                     __end_of_EEPROMWrite:
  4036                           	opt stack 0
  4037                           tblptru	equ	0xFF8
  4038                           tblptrh	equ	0xFF7
  4039                           tblptrl	equ	0xFF6
  4040                           tablat	equ	0xFF5
  4041                           prodh	equ	0xFF4
  4042                           prodl	equ	0xFF3
  4043                           intcon	equ	0xFF2
  4044                           postinc0	equ	0xFEE
  4045                           wreg	equ	0xFE8
  4046                           indf1	equ	0xFE7
  4047                           postdec1	equ	0xFE5
  4048                           fsr1h	equ	0xFE2
  4049                           fsr1l	equ	0xFE1
  4050                           indf2	equ	0xFDF
  4051                           postinc2	equ	0xFDE
  4052                           postdec2	equ	0xFDD
  4053                           fsr2h	equ	0xFDA
  4054                           fsr2l	equ	0xFD9
  4055                           status	equ	0xFD8
  4056                           
  4057 ;; *************** function _CalculateTime25msCounter *****************
  4058 ;; Defined at:
  4059 ;;		line 163 in file "G:\working\YellowFlashingController\YellowFlash.C"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  row             1    wreg     unsigned char 
  4062 ;;  line            1   40[COMRAM] unsigned char 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  row             1   47[COMRAM] unsigned char 
  4065 ;;  j               2   50[COMRAM] int 
  4066 ;;  i               2   48[COMRAM] int 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;		None               void
  4069 ;; Registers used:
  4070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: FFFFFFF0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4076 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4077 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4078 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4079 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4080 ;;Total ram usage:       12 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; Hardware stack levels required when called:    6
  4083 ;; This function calls:
  4084 ;;		___ftmul
  4085 ;;		___fttol
  4086 ;;		___lwdiv
  4087 ;; This function is called by:
  4088 ;;		_YFlashNewConfigure
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text18
  4093  0012AA                     __ptext18:
  4094                           	opt stack 0
  4095  0012AA                     _CalculateTime25msCounter:
  4096                           	opt stack 22
  4097                           
  4098                           ;CalculateTime25msCounter@row stored from wreg
  4099  0012AA  CFE8 F030          	movff	wreg,CalculateTime25msCounter@row
  4100                           
  4101                           ;YellowFlash.C: 164: int i,j;
  4102                           ;YellowFlash.C: 165: for(i=0;i<10;i++)
  4103  0012AE  6A31               	clrf	CalculateTime25msCounter@i,c
  4104  0012B0  6A32               	clrf	CalculateTime25msCounter@i+1,c
  4105  0012B2                     l477:
  4106                           
  4107                           ;YellowFlash.C: 166: {
  4108                           ;YellowFlash.C: 167: for(j=0;j<16;j++)
  4109  0012B2  6A33               	clrf	CalculateTime25msCounter@j,c
  4110  0012B4  6A34               	clrf	CalculateTime25msCounter@j+1,c
  4111  0012B6                     l2829:
  4112                           
  4113                           ;YellowFlash.C: 168: {
  4114                           ;YellowFlash.C: 169: time_on[i][j]=period[i]*cycledutyon[j];
  4115  0012B6  5033               	movf	CalculateTime25msCounter@j,w,c
  4116  0012B8  0D03               	mullw	3
  4117  0012BA  50F3               	movf	prodl,w,c
  4118  0012BC  0100               	movlb	0	; () banked
  4119  0012BE  0F90               	addlw	low _cycledutyon
  4120  0012C0  D85D               	call	PL2	;call to abstracted procedure
  4121  0012C2  EC85  F00A         	call	___ftmul	;wreg free
  4122  0012C6  C009  F01A         	movff	?___ftmul,?___fttol
  4123  0012CA  C00A  F01B         	movff	?___ftmul+1,?___fttol+1
  4124  0012CE  C00B  F01C         	movff	?___ftmul+2,?___fttol+2
  4125  0012D2  EC6A  F00B         	call	___fttol	;wreg free
  4126  0012D6  D886               	call	PL15	;call to abstracted procedure
  4127  0012D8                     u1035:
  4128  0012D8  90D8               	bcf	status,0,c
  4129  0012DA  362C               	rlcf	??_CalculateTime25msCounter+2,f,c
  4130  0012DC  362D               	rlcf	??_CalculateTime25msCounter+3,f,c
  4131  0012DE  2EE8               	decfsz	wreg,f,c
  4132  0012E0  D7FB               	goto	u1035
  4133  0012E2  0E01               	movlw	low _time_on
  4134  0012E4  242C               	addwf	??_CalculateTime25msCounter+2,w,c
  4135  0012E6  6E2E               	movwf	(??_CalculateTime25msCounter+4)& (0+255),c
  4136  0012E8  0E0D               	movlw	high _time_on
  4137  0012EA  D86F               	call	PL8	;call to abstracted procedure
  4138                           
  4139                           ;YellowFlash.C: 170: time_off[i][j]=period[i]*cycledutyoff[j];
  4140  0012EC  5033               	movf	CalculateTime25msCounter@j,w,c
  4141  0012EE  0D03               	mullw	3
  4142  0012F0  50F3               	movf	prodl,w,c
  4143  0012F2  0100               	movlb	0	; () banked
  4144  0012F4  0F60               	addlw	low _cycledutyoff
  4145  0012F6  D842               	call	PL2	;call to abstracted procedure
  4146  0012F8  EC85  F00A         	call	___ftmul	;wreg free
  4147  0012FC  C009  F01A         	movff	?___ftmul,?___fttol
  4148  001300  C00A  F01B         	movff	?___ftmul+1,?___fttol+1
  4149  001304  C00B  F01C         	movff	?___ftmul+2,?___fttol+2
  4150  001308  EC6A  F00B         	call	___fttol	;wreg free
  4151  00130C  D86B               	call	PL15	;call to abstracted procedure
  4152  00130E                     u1045:
  4153  00130E  90D8               	bcf	status,0,c
  4154  001310  362C               	rlcf	??_CalculateTime25msCounter+2,f,c
  4155  001312  362D               	rlcf	??_CalculateTime25msCounter+3,f,c
  4156  001314  2EE8               	decfsz	wreg,f,c
  4157  001316  D7FB               	goto	u1045
  4158  001318  0EC1               	movlw	low _time_off
  4159  00131A  242C               	addwf	??_CalculateTime25msCounter+2,w,c
  4160  00131C  6E2E               	movwf	(??_CalculateTime25msCounter+4)& (0+255),c
  4161  00131E  0E0B               	movlw	high _time_off
  4162  001320  D854               	call	PL8	;call to abstracted procedure
  4163  001322  4A33               	infsnz	CalculateTime25msCounter@j,f,c
  4164  001324  2A34               	incf	CalculateTime25msCounter@j+1,f,c
  4165  001326  5034               	movf	CalculateTime25msCounter@j+1,w,c
  4166  001328  0A80               	xorlw	128
  4167  00132A  0F80               	addlw	-128
  4168  00132C  0E10               	movlw	16
  4169  00132E  B4D8               	btfsc	status,2,c
  4170  001330  5C33               	subwf	CalculateTime25msCounter@j,w,c
  4171  001332  E3C1               	bnc	l2829
  4172  001334  4A31               	infsnz	CalculateTime25msCounter@i,f,c
  4173  001336  2A32               	incf	CalculateTime25msCounter@i+1,f,c
  4174  001338  5032               	movf	CalculateTime25msCounter@i+1,w,c
  4175  00133A  0A80               	xorlw	128
  4176  00133C  0F80               	addlw	-128
  4177  00133E  0E0A               	movlw	10
  4178  001340  B4D8               	btfsc	status,2,c
  4179  001342  5C31               	subwf	CalculateTime25msCounter@i,w,c
  4180  001344  E3B6               	bnc	l477
  4181                           
  4182                           ;YellowFlash.C: 171: }
  4183                           ;YellowFlash.C: 172: }
  4184                           ;YellowFlash.C: 173: time_on_counter=time_on[line][row]/25;
  4185  001346  5029               	movf	CalculateTime25msCounter@line,w,c
  4186  001348  0D20               	mullw	32
  4187  00134A  0E01               	movlw	low _time_on
  4188  00134C  24F3               	addwf	prodl,w,c
  4189  00134E  6E2A               	movwf	??_CalculateTime25msCounter& (0+255),c
  4190  001350  0E0D               	movlw	high _time_on
  4191  001352  D829               	call	PL4	;call to abstracted procedure
  4192  001354  EC19  F00E         	call	___lwdiv	;wreg free
  4193  001358  C001  F042         	movff	?___lwdiv,_time_on_counter
  4194  00135C  C002  F043         	movff	?___lwdiv+1,_time_on_counter+1
  4195                           
  4196                           ;YellowFlash.C: 174: time_off_counter=time_off[line][row]/25;
  4197  001360  5029               	movf	CalculateTime25msCounter@line,w,c
  4198  001362  0D20               	mullw	32
  4199  001364  0EC1               	movlw	low _time_off
  4200  001366  24F3               	addwf	prodl,w,c
  4201  001368  6E2A               	movwf	??_CalculateTime25msCounter& (0+255),c
  4202  00136A  0E0B               	movlw	high _time_off
  4203  00136C  D81C               	call	PL4	;call to abstracted procedure
  4204  00136E  EC19  F00E         	call	___lwdiv	;wreg free
  4205  001372  C001  F040         	movff	?___lwdiv,_time_off_counter
  4206  001376  C002  F041         	movff	?___lwdiv+1,_time_off_counter+1
  4207  00137A  0012               	return	
  4208  00137C                     __end_of_CalculateTime25msCounter:
  4209                           	opt stack 0
  4210  00137C                     PL2:
  4211  00137C  6ED9               	movwf	fsr2l,c
  4212  00137E  6ADA               	clrf	fsr2h,c
  4213  001380  CFDE F00C          	movff	postinc2,?___ftmul+3
  4214  001384  CFDE F00D          	movff	postinc2,?___ftmul+4
  4215  001388  CFDD F00E          	movff	postdec2,?___ftmul+5
  4216  00138C  5031               	movf	CalculateTime25msCounter@i,w,c
  4217  00138E  0D03               	mullw	3
  4218  001390  50F3               	movf	prodl,w,c
  4219  001392  0FC0               	addlw	low _period
  4220  001394  6ED9               	movwf	fsr2l,c
  4221  001396  6ADA               	clrf	fsr2h,c
  4222  001398  CFDE F009          	movff	postinc2,?___ftmul
  4223  00139C  CFDE F00A          	movff	postinc2,?___ftmul+1
  4224  0013A0  CFDD F00B          	movff	postdec2,?___ftmul+2
  4225  0013A4  0012               	return	
  4226  0013A6                     PL4:
  4227  0013A6  20F4               	addwfc	prodh,w,c
  4228  0013A8  6E2B               	movwf	(??_CalculateTime25msCounter+1)& (0+255),c
  4229  0013AA  5030               	movf	CalculateTime25msCounter@row,w,c
  4230  0013AC  0D02               	mullw	2
  4231  0013AE  50F3               	movf	prodl,w,c
  4232  0013B0  242A               	addwf	??_CalculateTime25msCounter,w,c
  4233  0013B2  6ED9               	movwf	fsr2l,c
  4234  0013B4  50F4               	movf	prodh,w,c
  4235  0013B6  202B               	addwfc	??_CalculateTime25msCounter+1,w,c
  4236  0013B8  6EDA               	movwf	fsr2h,c
  4237  0013BA  CFDE F001          	movff	postinc2,?___lwdiv
  4238  0013BE  CFDD F002          	movff	postdec2,?___lwdiv+1
  4239  0013C2  6A04               	clrf	?___lwdiv+3,c
  4240  0013C4  0E19               	movlw	25
  4241  0013C6  6E03               	movwf	?___lwdiv+2,c
  4242  0013C8  0C19               	retlw	25
  4243  0013CA                     PL8:
  4244  0013CA  202D               	addwfc	??_CalculateTime25msCounter+3,w,c
  4245  0013CC  6E2F               	movwf	(??_CalculateTime25msCounter+5)& (0+255),c
  4246  0013CE  502A               	movf	??_CalculateTime25msCounter,w,c
  4247  0013D0  242E               	addwf	??_CalculateTime25msCounter+4,w,c
  4248  0013D2  6ED9               	movwf	fsr2l,c
  4249  0013D4  502B               	movf	??_CalculateTime25msCounter+1,w,c
  4250  0013D6  202F               	addwfc	??_CalculateTime25msCounter+5,w,c
  4251  0013D8  6EDA               	movwf	fsr2h,c
  4252  0013DA  C01A  FFDE         	movff	?___fttol,postinc2
  4253  0013DE  C01B  FFDD         	movff	?___fttol+1,postdec2
  4254  0013E2  0012               	return	
  4255  0013E4                     PL15:
  4256  0013E4  90D8               	bcf	status,0,c
  4257  0013E6  3433               	rlcf	CalculateTime25msCounter@j,w,c
  4258  0013E8  6E2A               	movwf	??_CalculateTime25msCounter& (0+255),c
  4259  0013EA  3434               	rlcf	CalculateTime25msCounter@j+1,w,c
  4260  0013EC  6E2B               	movwf	(??_CalculateTime25msCounter+1)& (0+255),c
  4261  0013EE  C031  F02C         	movff	CalculateTime25msCounter@i,??_CalculateTime25msCounter+2
  4262  0013F2  C032  F02D         	movff	CalculateTime25msCounter@i+1,??_CalculateTime25msCounter+3
  4263  0013F6  0C05               	retlw	5
  4264                           tblptru	equ	0xFF8
  4265                           tblptrh	equ	0xFF7
  4266                           tblptrl	equ	0xFF6
  4267                           tablat	equ	0xFF5
  4268                           prodh	equ	0xFF4
  4269                           prodl	equ	0xFF3
  4270                           intcon	equ	0xFF2
  4271                           postinc0	equ	0xFEE
  4272                           wreg	equ	0xFE8
  4273                           indf1	equ	0xFE7
  4274                           postdec1	equ	0xFE5
  4275                           fsr1h	equ	0xFE2
  4276                           fsr1l	equ	0xFE1
  4277                           indf2	equ	0xFDF
  4278                           postinc2	equ	0xFDE
  4279                           postdec2	equ	0xFDD
  4280                           fsr2h	equ	0xFDA
  4281                           fsr2l	equ	0xFD9
  4282                           status	equ	0xFD8
  4283                           
  4284 ;; *************** function _CANReadVersion *****************
  4285 ;; Defined at:
  4286 ;;		line 556 in file "G:\working\YellowFlashingController\YellowFlash.C"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;		None
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;		None
  4291 ;; Return value:  Size  Location     Type
  4292 ;;		None               void
  4293 ;; Registers used:
  4294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4295 ;; Tracked objects:
  4296 ;;		On entry : F/0
  4297 ;;		On exit  : F/F
  4298 ;;		Unchanged: FFFFFFF0/0
  4299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4302 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4303 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4304 ;;Total ram usage:        1 bytes
  4305 ;; Hardware stack levels used:    1
  4306 ;; Hardware stack levels required when called:    5
  4307 ;; This function calls:
  4308 ;;		_CANSend
  4309 ;; This function is called by:
  4310 ;;		_CANDATAAnalyzing
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           	psect	text19
  4315  001928                     __ptext19:
  4316                           	opt stack 0
  4317  001928                     _CANReadVersion:
  4318                           	opt stack 24
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;YellowFlash.C: 558: CANSdlc = 6;
  4322  001928  0E06               	movlw	6
  4323  00192A  6E5B               	movwf	_CANSdlc,c
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;YellowFlash.C: 559: CANSdata[0] =0xff;
  4327  00192C  684D               	setf	_CANSdata,c
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;YellowFlash.C: 560: CANSdata[1]=board_version[0];
  4331  00192E  0E00               	movlw	low _board_version
  4332  001930  6EF6               	movwf	tblptrl,c
  4333  001932  0E0F               	movlw	high _board_version
  4334  001934  6EF7               	movwf	tblptrh,c
  4335  001936  0008               	tblrd		*
  4336  001938  CFF5 F04E          	movff	tablat,_CANSdata+1
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;YellowFlash.C: 561: CANSdata[2]=board_version[1];
  4340  00193C  0E00               	movlw	_board_version& (0+255)
  4341  00193E  6E03               	movwf	??_CANReadVersion& (0+255),c
  4342  001940  2A03               	incf	??_CANReadVersion,f,c
  4343  001942  C003  FFF6         	movff	??_CANReadVersion,tblptrl
  4344  001946  0E0F               	movlw	high __smallconst
  4345  001948  6EF7               	movwf	tblptrh,c
  4346  00194A  0008               	tblrd		*
  4347  00194C  CFF5 F04F          	movff	tablat,_CANSdata+2
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;YellowFlash.C: 562: CANSdata[3]=board_version[2];
  4351  001950  0E00               	movlw	_board_version& (0+255)
  4352  001952  6E03               	movwf	??_CANReadVersion& (0+255),c
  4353  001954  0E02               	movlw	2
  4354  001956  2603               	addwf	??_CANReadVersion,f,c
  4355  001958  C003  FFF6         	movff	??_CANReadVersion,tblptrl
  4356  00195C  0E0F               	movlw	high __smallconst
  4357  00195E  6EF7               	movwf	tblptrh,c
  4358  001960  0008               	tblrd		*
  4359  001962  CFF5 F050          	movff	tablat,_CANSdata+3
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;YellowFlash.C: 563: CANSdata[4]=board_version[3];
  4363  001966  0E00               	movlw	_board_version& (0+255)
  4364  001968  6E03               	movwf	??_CANReadVersion& (0+255),c
  4365  00196A  0E03               	movlw	3
  4366  00196C  2603               	addwf	??_CANReadVersion,f,c
  4367  00196E  C003  FFF6         	movff	??_CANReadVersion,tblptrl
  4368  001972  0E0F               	movlw	high __smallconst
  4369  001974  6EF7               	movwf	tblptrh,c
  4370  001976  0008               	tblrd		*
  4371  001978  CFF5 F051          	movff	tablat,_CANSdata+4
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;YellowFlash.C: 564: CANSdata[5]=board_version[4];
  4375  00197C  0E00               	movlw	_board_version& (0+255)
  4376  00197E  6E03               	movwf	??_CANReadVersion& (0+255),c
  4377  001980  0E04               	movlw	4
  4378  001982  2603               	addwf	??_CANReadVersion,f,c
  4379  001984  C003  FFF6         	movff	??_CANReadVersion,tblptrl
  4380  001988  0E0F               	movlw	high __smallconst
  4381  00198A  6EF7               	movwf	tblptrh,c
  4382  00198C  0008               	tblrd		*
  4383  00198E  CFF5 F052          	movff	tablat,_CANSdata+5
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;YellowFlash.C: 566: CANSend(CANSid,CANSdata,CANSdlc);
  4387  001992  0E4D               	movlw	low _CANSdata
  4388  001994  6E01               	movwf	?_CANSend,c
  4389  001996  C05B  F002         	movff	_CANSdlc,?_CANSend+1
  4390  00199A  0EEC               	movlw	_CANSid& (0+255)
  4391  00199C  EFFC  F009         	goto	_CANSend
  4392  0019A0                     __end_of_CANReadVersion:
  4393                           	opt stack 0
  4394                           tblptru	equ	0xFF8
  4395                           tblptrh	equ	0xFF7
  4396                           tblptrl	equ	0xFF6
  4397                           tablat	equ	0xFF5
  4398                           prodh	equ	0xFF4
  4399                           prodl	equ	0xFF3
  4400                           intcon	equ	0xFF2
  4401                           postinc0	equ	0xFEE
  4402                           wreg	equ	0xFE8
  4403                           indf1	equ	0xFE7
  4404                           postdec1	equ	0xFE5
  4405                           fsr1h	equ	0xFE2
  4406                           fsr1l	equ	0xFE1
  4407                           indf2	equ	0xFDF
  4408                           postinc2	equ	0xFDE
  4409                           postdec2	equ	0xFDD
  4410                           fsr2h	equ	0xFDA
  4411                           fsr2l	equ	0xFD9
  4412                           status	equ	0xFD8
  4413                           
  4414 ;; *************** function _CANSend *****************
  4415 ;; Defined at:
  4416 ;;		line 163 in file "G:\working\YellowFlashingController\CAN.H"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  id              1    wreg     PTR unsigned char 
  4419 ;;		 -> CANSid(4), 
  4420 ;;  dat             1    0[COMRAM] PTR unsigned char 
  4421 ;;		 -> CANSdata(8), 
  4422 ;;  dlc             1    1[COMRAM] unsigned char 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  id              1    0[COMRAM] PTR unsigned char 
  4425 ;;		 -> CANSid(4), 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      unsigned char 
  4428 ;; Registers used:
  4429 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4430 ;; Tracked objects:
  4431 ;;		On entry : F/0
  4432 ;;		On exit  : F/F
  4433 ;;		Unchanged: FFFFFFF0/0
  4434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4439 ;;Total ram usage:        2 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    4
  4442 ;; This function calls:
  4443 ;;		Nothing
  4444 ;; This function is called by:
  4445 ;;		_CANSendConfirm
  4446 ;;		_CANSendID
  4447 ;;		_CANReadVersion
  4448 ;;		_CANDATAAnalyzing
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text20
  4453  0013F8                     __ptext20:
  4454                           	opt stack 0
  4455  0013F8                     _CANSend:
  4456                           	opt stack 25
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;CAN.H: 165: if(!(TXB0CON & 0x80))
  4460                           
  4461                           ; BSR set to: 15
  4462  0013F8  010F               	movlb	15	; () banked
  4463  0013FA  BF20               	btfsc	32,7,b	;volatile
  4464  0013FC  D019               	goto	l347
  4465                           
  4466                           ; BSR set to: 15
  4467                           ;CAN.H: 166: {
  4468                           ;CAN.H: 176: TXB0DLC = dlc;
  4469  0013FE  C002  FF25         	movff	CANSend@dlc,3877	;volatile
  4470                           
  4471                           ; BSR set to: 15
  4472                           ;CAN.H: 179: TXB0D0 = dat[0];
  4473  001402  5001               	movf	CANSend@dat,w,c
  4474  001404  6ED9               	movwf	fsr2l,c
  4475  001406  6ADA               	clrf	fsr2h,c
  4476  001408  50DF               	movf	indf2,w,c
  4477  00140A  6F26               	movwf	38,b	;volatile
  4478                           
  4479                           ; BSR set to: 15
  4480                           ;CAN.H: 180: TXB0D1 = dat[1];
  4481  00140C  D877               	call	PL23	;call to abstracted procedure
  4482  00140E  6F27               	movwf	39,b	;volatile
  4483                           
  4484                           ; BSR set to: 15
  4485                           ;CAN.H: 181: TXB0D2 = dat[2];
  4486  001410  D845               	call	PL9	;call to abstracted procedure
  4487  001412  6F28               	movwf	40,b	;volatile
  4488                           
  4489                           ; BSR set to: 15
  4490                           ;CAN.H: 182: TXB0D3 = dat[3];
  4491  001414  D84B               	call	PL10	;call to abstracted procedure
  4492  001416  6F29               	movwf	41,b	;volatile
  4493                           
  4494                           ; BSR set to: 15
  4495                           ;CAN.H: 183: TXB0D4 = dat[4];
  4496  001418  D859               	call	PL12	;call to abstracted procedure
  4497  00141A  6F2A               	movwf	42,b	;volatile
  4498                           
  4499                           ; BSR set to: 15
  4500                           ;CAN.H: 184: TXB0D5 = dat[5];
  4501  00141C  D84F               	call	PL11	;call to abstracted procedure
  4502  00141E  6F2B               	movwf	43,b	;volatile
  4503                           
  4504                           ; BSR set to: 15
  4505                           ;CAN.H: 185: TXB0D6 = dat[6];
  4506  001420  D85D               	call	PL13	;call to abstracted procedure
  4507  001422  6F2C               	movwf	44,b	;volatile
  4508                           
  4509                           ; BSR set to: 15
  4510                           ;CAN.H: 186: TXB0D7 = dat[7];
  4511  001424  D863               	call	PL14	;call to abstracted procedure
  4512  001426  6F2D               	movwf	45,b	;volatile
  4513                           
  4514                           ; BSR set to: 15
  4515                           ;CAN.H: 189: TXB0CON |= 0x08;
  4516  001428  8720               	bsf	32,3,b	;volatile
  4517  00142A                     l348:
  4518                           
  4519                           ; BSR set to: 15
  4520  00142A  A720               	btfss	32,3,b	;volatile
  4521  00142C  0012               	return	
  4522  00142E  D7FD               	goto	l348
  4523  001430                     l347:
  4524                           
  4525                           ; BSR set to: 15
  4526                           ;CAN.H: 192: }
  4527                           ;CAN.H: 194: if(!(TXB1CON & 0x80))
  4528  001430  BF10               	btfsc	16,7,b	;volatile
  4529  001432  D019               	goto	l352
  4530                           
  4531                           ; BSR set to: 15
  4532                           ;CAN.H: 195: {
  4533                           ;CAN.H: 205: TXB1DLC = dlc;
  4534  001434  C002  FF15         	movff	CANSend@dlc,3861	;volatile
  4535                           
  4536                           ; BSR set to: 15
  4537                           ;CAN.H: 208: TXB1D0 = dat[0];
  4538  001438  5001               	movf	CANSend@dat,w,c
  4539  00143A  6ED9               	movwf	fsr2l,c
  4540  00143C  6ADA               	clrf	fsr2h,c
  4541  00143E  50DF               	movf	indf2,w,c
  4542  001440  6F16               	movwf	22,b	;volatile
  4543                           
  4544                           ; BSR set to: 15
  4545                           ;CAN.H: 209: TXB1D1 = dat[1];
  4546  001442  D85C               	call	PL23	;call to abstracted procedure
  4547  001444  6F17               	movwf	23,b	;volatile
  4548                           
  4549                           ; BSR set to: 15
  4550                           ;CAN.H: 210: TXB1D2 = dat[2];
  4551  001446  D82A               	call	PL9	;call to abstracted procedure
  4552  001448  6F18               	movwf	24,b	;volatile
  4553                           
  4554                           ; BSR set to: 15
  4555                           ;CAN.H: 211: TXB1D3 = dat[3];
  4556  00144A  D830               	call	PL10	;call to abstracted procedure
  4557  00144C  6F19               	movwf	25,b	;volatile
  4558                           
  4559                           ; BSR set to: 15
  4560                           ;CAN.H: 212: TXB1D4 = dat[4];
  4561  00144E  D83E               	call	PL12	;call to abstracted procedure
  4562  001450  6F1A               	movwf	26,b	;volatile
  4563                           
  4564                           ; BSR set to: 15
  4565                           ;CAN.H: 213: TXB1D5 = dat[5];
  4566  001452  D834               	call	PL11	;call to abstracted procedure
  4567  001454  6F1B               	movwf	27,b	;volatile
  4568                           
  4569                           ; BSR set to: 15
  4570                           ;CAN.H: 214: TXB1D6 = dat[6];
  4571  001456  D842               	call	PL13	;call to abstracted procedure
  4572  001458  6F1C               	movwf	28,b	;volatile
  4573                           
  4574                           ; BSR set to: 15
  4575                           ;CAN.H: 215: TXB1D7 = dat[7];
  4576  00145A  D848               	call	PL14	;call to abstracted procedure
  4577  00145C  6F1D               	movwf	29,b	;volatile
  4578                           
  4579                           ; BSR set to: 15
  4580                           ;CAN.H: 218: TXB0CON |= 0x08;
  4581  00145E  8720               	bsf	32,3,b	;volatile
  4582  001460                     l353:
  4583                           
  4584                           ; BSR set to: 15
  4585  001460  A720               	btfss	32,3,b	;volatile
  4586  001462  0012               	return	
  4587  001464  D7FD               	goto	l353
  4588  001466                     l352:
  4589                           
  4590                           ; BSR set to: 15
  4591                           ;CAN.H: 221: }
  4592                           ;CAN.H: 223: if(!(TXB2CON & 0x80))
  4593  001466  BF00               	btfsc	0,7,b	;volatile
  4594  001468  0012               	return	
  4595                           
  4596                           ; BSR set to: 15
  4597                           ;CAN.H: 224: {
  4598                           ;CAN.H: 234: TXB2DLC = dlc;
  4599  00146A  C002  FF05         	movff	CANSend@dlc,3845	;volatile
  4600                           
  4601                           ; BSR set to: 15
  4602                           ;CAN.H: 237: TXB2D0 = dat[0];
  4603  00146E  5001               	movf	CANSend@dat,w,c
  4604  001470  6ED9               	movwf	fsr2l,c
  4605  001472  6ADA               	clrf	fsr2h,c
  4606  001474  50DF               	movf	indf2,w,c
  4607  001476  6F06               	movwf	6,b	;volatile
  4608                           
  4609                           ; BSR set to: 15
  4610                           ;CAN.H: 238: TXB2D1 = dat[1];
  4611  001478  D841               	call	PL23	;call to abstracted procedure
  4612  00147A  6F07               	movwf	7,b	;volatile
  4613                           
  4614                           ; BSR set to: 15
  4615                           ;CAN.H: 239: TXB2D2 = dat[2];
  4616  00147C  D80F               	call	PL9	;call to abstracted procedure
  4617  00147E  6F08               	movwf	8,b	;volatile
  4618                           
  4619                           ; BSR set to: 15
  4620                           ;CAN.H: 240: TXB2D3 = dat[3];
  4621  001480  D815               	call	PL10	;call to abstracted procedure
  4622  001482  6F09               	movwf	9,b	;volatile
  4623                           
  4624                           ; BSR set to: 15
  4625                           ;CAN.H: 241: TXB2D4 = dat[4];
  4626  001484  D823               	call	PL12	;call to abstracted procedure
  4627  001486  6F0A               	movwf	10,b	;volatile
  4628                           
  4629                           ; BSR set to: 15
  4630                           ;CAN.H: 242: TXB2D5 = dat[5];
  4631  001488  D819               	call	PL11	;call to abstracted procedure
  4632  00148A  6F0B               	movwf	11,b	;volatile
  4633                           
  4634                           ; BSR set to: 15
  4635                           ;CAN.H: 243: TXB2D6 = dat[6];
  4636  00148C  D827               	call	PL13	;call to abstracted procedure
  4637  00148E  6F0C               	movwf	12,b	;volatile
  4638                           
  4639                           ; BSR set to: 15
  4640                           ;CAN.H: 244: TXB2D7 = dat[7];
  4641  001490  D82D               	call	PL14	;call to abstracted procedure
  4642  001492  6F0D               	movwf	13,b	;volatile
  4643                           
  4644                           ; BSR set to: 15
  4645                           ;CAN.H: 247: TXB2CON |= 0x08;
  4646  001494  8700               	bsf	0,3,b	;volatile
  4647  001496                     l357:
  4648                           
  4649                           ; BSR set to: 15
  4650  001496  A700               	btfss	0,3,b	;volatile
  4651                           
  4652                           ; BSR set to: 15
  4653  001498  0012               	return	
  4654  00149A  D7FD               	goto	l357
  4655  00149C                     __end_of_CANSend:
  4656                           	opt stack 0
  4657  00149C                     PL9:
  4658  00149C  5001               	movf	CANSend@dat,w,c
  4659  00149E  6ED9               	movwf	fsr2l,c
  4660  0014A0  6ADA               	clrf	fsr2h,c
  4661  0014A2  0E02               	movlw	2
  4662  0014A4  26D9               	addwf	fsr2l,f,c
  4663  0014A6  6ADA               	clrf	fsr2h,c
  4664  0014A8  50DF               	movf	indf2,w,c
  4665  0014AA  0012               	return	
  4666  0014AC                     PL10:
  4667  0014AC  5001               	movf	CANSend@dat,w,c
  4668  0014AE  6ED9               	movwf	fsr2l,c
  4669  0014B0  6ADA               	clrf	fsr2h,c
  4670  0014B2  0E03               	movlw	3
  4671  0014B4  26D9               	addwf	fsr2l,f,c
  4672  0014B6  6ADA               	clrf	fsr2h,c
  4673  0014B8  50DF               	movf	indf2,w,c
  4674  0014BA  0012               	return	
  4675  0014BC                     PL11:
  4676  0014BC  5001               	movf	CANSend@dat,w,c
  4677  0014BE  6ED9               	movwf	fsr2l,c
  4678  0014C0  6ADA               	clrf	fsr2h,c
  4679  0014C2  0E05               	movlw	5
  4680  0014C4  26D9               	addwf	fsr2l,f,c
  4681  0014C6  6ADA               	clrf	fsr2h,c
  4682  0014C8  50DF               	movf	indf2,w,c
  4683  0014CA  0012               	return	
  4684  0014CC                     PL12:
  4685  0014CC  5001               	movf	CANSend@dat,w,c
  4686  0014CE  6ED9               	movwf	fsr2l,c
  4687  0014D0  6ADA               	clrf	fsr2h,c
  4688  0014D2  0E04               	movlw	4
  4689  0014D4  26D9               	addwf	fsr2l,f,c
  4690  0014D6  6ADA               	clrf	fsr2h,c
  4691  0014D8  50DF               	movf	indf2,w,c
  4692  0014DA  0012               	return	
  4693  0014DC                     PL13:
  4694  0014DC  5001               	movf	CANSend@dat,w,c
  4695  0014DE  6ED9               	movwf	fsr2l,c
  4696  0014E0  6ADA               	clrf	fsr2h,c
  4697  0014E2  0E06               	movlw	6
  4698  0014E4  26D9               	addwf	fsr2l,f,c
  4699  0014E6  6ADA               	clrf	fsr2h,c
  4700  0014E8  50DF               	movf	indf2,w,c
  4701  0014EA  0012               	return	
  4702  0014EC                     PL14:
  4703  0014EC  5001               	movf	CANSend@dat,w,c
  4704  0014EE  6ED9               	movwf	fsr2l,c
  4705  0014F0  6ADA               	clrf	fsr2h,c
  4706  0014F2  0E07               	movlw	7
  4707  0014F4  26D9               	addwf	fsr2l,f,c
  4708  0014F6  6ADA               	clrf	fsr2h,c
  4709  0014F8  50DF               	movf	indf2,w,c
  4710  0014FA  0012               	return	
  4711  0014FC                     PL23:
  4712  0014FC  5001               	movf	CANSend@dat,w,c
  4713  0014FE  6ED9               	movwf	fsr2l,c
  4714  001500  6ADA               	clrf	fsr2h,c
  4715  001502  2AD9               	incf	fsr2l,f,c
  4716  001504  6ADA               	clrf	fsr2h,c
  4717  001506  50DF               	movf	indf2,w,c
  4718  001508  0012               	return	
  4719                           tblptru	equ	0xFF8
  4720                           tblptrh	equ	0xFF7
  4721                           tblptrl	equ	0xFF6
  4722                           tablat	equ	0xFF5
  4723                           prodh	equ	0xFF4
  4724                           prodl	equ	0xFF3
  4725                           intcon	equ	0xFF2
  4726                           postinc0	equ	0xFEE
  4727                           wreg	equ	0xFE8
  4728                           indf1	equ	0xFE7
  4729                           postdec1	equ	0xFE5
  4730                           fsr1h	equ	0xFE2
  4731                           fsr1l	equ	0xFE1
  4732                           indf2	equ	0xFDF
  4733                           postinc2	equ	0xFDE
  4734                           postdec2	equ	0xFDD
  4735                           fsr2h	equ	0xFDA
  4736                           fsr2l	equ	0xFD9
  4737                           status	equ	0xFD8
  4738                           
  4739 ;; *************** function _HeartbeatTest *****************
  4740 ;; Defined at:
  4741 ;;		line 775 in file "G:\working\YellowFlashingController\YellowFlash.C"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;		None               void
  4748 ;; Registers used:
  4749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/F
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4759 ;;Total ram usage:        0 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    6
  4762 ;; This function calls:
  4763 ;;		_Read_YFlash_CFG
  4764 ;; This function is called by:
  4765 ;;		_main
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text21
  4770  001D2C                     __ptext21:
  4771                           	opt stack 0
  4772  001D2C                     _HeartbeatTest:
  4773                           	opt stack 24
  4774                           
  4775                           ;YellowFlash.C: 777: if(time5ms == 1)
  4776                           
  4777                           ; BSR set to: 15
  4778  001D2C  0100               	movlb	(_time5ms/(0+8)) shr (0+8)
  4779  001D2E  A25F               	btfss	_time5ms/(0+8),_time5ms& (0+7),c
  4780  001D30  0012               	return	
  4781                           
  4782                           ;YellowFlash.C: 778: {
  4783                           ;YellowFlash.C: 779: time5ms = 0;
  4784  001D32  925F               	bcf	_time5ms/(0+8),_time5ms& (0+7),c
  4785                           
  4786                           ;YellowFlash.C: 780: t500ms_count++;
  4787  001D34  2A4B               	incf	_t500ms_count,f,c
  4788                           
  4789                           ;YellowFlash.C: 781: if(t500ms_count>=100)
  4790  001D36  0E63               	movlw	99
  4791  001D38  644B               	cpfsgt	_t500ms_count,c
  4792  001D3A  0C63               	retlw	99
  4793                           
  4794                           ;YellowFlash.C: 782: {
  4795                           ;YellowFlash.C: 783: t500ms_count=0;
  4796  001D3C  6A4B               	clrf	_t500ms_count,c
  4797                           
  4798                           ;YellowFlash.C: 784: heartbeat++;
  4799  001D3E  2A46               	incf	_heartbeat,f,c
  4800                           
  4801                           ;YellowFlash.C: 786: if(heartbeat>=4)
  4802  001D40  0E03               	movlw	3
  4803  001D42  6446               	cpfsgt	_heartbeat,c
  4804  001D44  0C03               	retlw	3
  4805                           
  4806                           ;YellowFlash.C: 787: {
  4807                           ;YellowFlash.C: 788: heartbeat=0;
  4808  001D46  6A46               	clrf	_heartbeat,c
  4809                           
  4810                           ;YellowFlash.C: 789: RD2=1;
  4811  001D48  8483               	bsf	3971,2,c	;volatile
  4812                           
  4813                           ;YellowFlash.C: 790: TMR0ON = 0;
  4814  001D4A  9ED5               	bcf	4053,7,c	;volatile
  4815                           
  4816                           ;YellowFlash.C: 791: TMR0IF = 0;
  4817  001D4C  94F2               	bcf	intcon,2,c	;volatile
  4818                           
  4819                           ;YellowFlash.C: 792: yflash_status=0x06;
  4820  001D4E  0E06               	movlw	6
  4821  001D50  6E4C               	movwf	_yflash_status,c
  4822                           
  4823                           ;YellowFlash.C: 793: Read_YFlash_CFG();
  4824  001D52  EC0C  F00D         	call	_Read_YFlash_CFG	;wreg free
  4825                           
  4826                           ;YellowFlash.C: 794: T1CON |= 0x01;
  4827  001D56  80CD               	bsf	4045,0,c	;volatile
  4828                           
  4829                           ;YellowFlash.C: 795: turnoff=0x01;
  4830  001D58  0E01               	movlw	1
  4831  001D5A  6E5C               	movwf	_turnoff,c
  4832                           
  4833                           ;YellowFlash.C: 796: switchmode=1;
  4834  001D5C  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  4835  001D5E  805F               	bsf	_switchmode/(0+8),_switchmode& (0+7),c
  4836  001D60  0C01               	retlw	1
  4837  001D62                     __end_of_HeartbeatTest:
  4838                           	opt stack 0
  4839                           tblptru	equ	0xFF8
  4840                           tblptrh	equ	0xFF7
  4841                           tblptrl	equ	0xFF6
  4842                           tablat	equ	0xFF5
  4843                           prodh	equ	0xFF4
  4844                           prodl	equ	0xFF3
  4845                           intcon	equ	0xFF2
  4846                           postinc0	equ	0xFEE
  4847                           wreg	equ	0xFE8
  4848                           indf1	equ	0xFE7
  4849                           postdec1	equ	0xFE5
  4850                           fsr1h	equ	0xFE2
  4851                           fsr1l	equ	0xFE1
  4852                           indf2	equ	0xFDF
  4853                           postinc2	equ	0xFDE
  4854                           postdec2	equ	0xFDD
  4855                           fsr2h	equ	0xFDA
  4856                           fsr2l	equ	0xFD9
  4857                           status	equ	0xFD8
  4858                           
  4859 ;; *************** function _Read_YFlash_CFG *****************
  4860 ;; Defined at:
  4861 ;;		line 453 in file "G:\working\YellowFlashingController\YellowFlash.C"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;		None
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;		None
  4866 ;; Return value:  Size  Location     Type
  4867 ;;		None               void
  4868 ;; Registers used:
  4869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4879 ;;Total ram usage:        0 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; Hardware stack levels required when called:    5
  4882 ;; This function calls:
  4883 ;;		_EEPROMRead
  4884 ;; This function is called by:
  4885 ;;		_CANDATAAnalyzing
  4886 ;;		_HeartbeatTest
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text22
  4891  001A18                     __ptext22:
  4892                           	opt stack 0
  4893  001A18                     _Read_YFlash_CFG:
  4894                           	opt stack 24
  4895                           
  4896                           ;YellowFlash.C: 454: eeprom_addr = 0x0005;
  4897  001A18  6A56               	clrf	_eeprom_addr+1,c
  4898  001A1A  0E05               	movlw	5
  4899                           
  4900                           ;YellowFlash.C: 455: eeprom_num = 2;
  4901                           
  4902                           ;YellowFlash.C: 456: EEPROMRead(&eeprom_addr,&eeprom_num,&readwrite);
  4903  001A1C  D82D               	call	PL25	;call to abstracted procedure
  4904  001A1E  EC3E  F00E         	call	_EEPROMRead
  4905                           
  4906                           ;YellowFlash.C: 457: time_on_counter=readwrite[0];
  4907  001A22  C057  F042         	movff	_readwrite,_time_on_counter
  4908  001A26  6A43               	clrf	_time_on_counter+1,c
  4909                           
  4910                           ;YellowFlash.C: 458: time_counters=readwrite[1];
  4911  001A28  C058  F03E         	movff	_readwrite+1,_time_counters
  4912  001A2C  6A3F               	clrf	_time_counters+1,c
  4913                           
  4914                           ;YellowFlash.C: 460: time_on_counter|=time_counters;
  4915  001A2E  503E               	movf	_time_counters,w,c
  4916  001A30  1242               	iorwf	_time_on_counter,f,c
  4917  001A32  503F               	movf	_time_counters+1,w,c
  4918  001A34  1243               	iorwf	_time_on_counter+1,f,c
  4919                           
  4920                           ;YellowFlash.C: 463: eeprom_addr = 0x0007;
  4921  001A36  6A56               	clrf	_eeprom_addr+1,c
  4922  001A38  0E07               	movlw	7
  4923                           
  4924                           ;YellowFlash.C: 464: eeprom_num = 2;
  4925                           
  4926                           ;YellowFlash.C: 465: EEPROMRead(&eeprom_addr,&eeprom_num,&readwrite);
  4927  001A3A  D81E               	call	PL25	;call to abstracted procedure
  4928  001A3C  EC3E  F00E         	call	_EEPROMRead
  4929                           
  4930                           ;YellowFlash.C: 466: time_off_counter=readwrite[0];
  4931  001A40  C057  F040         	movff	_readwrite,_time_off_counter
  4932  001A44  6A41               	clrf	_time_off_counter+1,c
  4933                           
  4934                           ;YellowFlash.C: 467: time_counters=readwrite[1];
  4935  001A46  C058  F03E         	movff	_readwrite+1,_time_counters
  4936  001A4A  6A3F               	clrf	_time_counters+1,c
  4937                           
  4938                           ;YellowFlash.C: 469: time_off_counter|=time_counters;
  4939  001A4C  503E               	movf	_time_counters,w,c
  4940  001A4E  1240               	iorwf	_time_off_counter,f,c
  4941  001A50  503F               	movf	_time_counters+1,w,c
  4942  001A52  1241               	iorwf	_time_off_counter+1,f,c
  4943                           
  4944                           ;YellowFlash.C: 472: eeprom_addr = 0x0009;
  4945                           
  4946                           ;YellowFlash.C: 473: eeprom_num = 2;
  4947                           
  4948                           ;YellowFlash.C: 474: EEPROMRead(&eeprom_addr,&eeprom_num,&yflash_CFG);
  4949  001A54  D806               	call	PL3	;call to abstracted procedure
  4950  001A56  EC3E  F00E         	call	_EEPROMRead
  4951                           
  4952                           ;YellowFlash.C: 475: run_mode=(yflash_CFG[1]&0x03);
  4953  001A5A  505A               	movf	_yflash_CFG+1,w,c
  4954  001A5C  0B03               	andlw	3
  4955  001A5E  6E4A               	movwf	_run_mode,c
  4956  001A60  0012               	return	
  4957  001A62                     __end_of_Read_YFlash_CFG:
  4958                           	opt stack 0
  4959  001A62                     PL3:
  4960  001A62  6A56               	clrf	_eeprom_addr+1,c
  4961  001A64  0E09               	movlw	9
  4962  001A66  6E55               	movwf	_eeprom_addr,c
  4963  001A68  0E02               	movlw	2
  4964  001A6A  6E5E               	movwf	_eeprom_num,c
  4965  001A6C  0E5E               	movlw	low _eeprom_num
  4966  001A6E  6E01               	movwf	?_EEPROMRead,c
  4967  001A70  0E59               	movlw	low _yflash_CFG
  4968  001A72  6E02               	movwf	?_EEPROMRead+1,c
  4969  001A74  0E55               	movlw	_eeprom_addr& (0+255)
  4970  001A76  0012               	return	
  4971  001A78                     PL25:
  4972  001A78  6E55               	movwf	_eeprom_addr,c
  4973  001A7A  0E02               	movlw	2
  4974  001A7C  6E5E               	movwf	_eeprom_num,c
  4975  001A7E  0E5E               	movlw	low _eeprom_num
  4976  001A80  6E01               	movwf	?_EEPROMRead,c
  4977  001A82  0E57               	movlw	low _readwrite
  4978  001A84  6E02               	movwf	?_EEPROMRead+1,c
  4979  001A86  0E55               	movlw	_eeprom_addr& (0+255)
  4980  001A88  0012               	return	
  4981                           tblptru	equ	0xFF8
  4982                           tblptrh	equ	0xFF7
  4983                           tblptrl	equ	0xFF6
  4984                           tablat	equ	0xFF5
  4985                           prodh	equ	0xFF4
  4986                           prodl	equ	0xFF3
  4987                           intcon	equ	0xFF2
  4988                           postinc0	equ	0xFEE
  4989                           wreg	equ	0xFE8
  4990                           indf1	equ	0xFE7
  4991                           postdec1	equ	0xFE5
  4992                           fsr1h	equ	0xFE2
  4993                           fsr1l	equ	0xFE1
  4994                           indf2	equ	0xFDF
  4995                           postinc2	equ	0xFDE
  4996                           postdec2	equ	0xFDD
  4997                           fsr2h	equ	0xFDA
  4998                           fsr2l	equ	0xFD9
  4999                           status	equ	0xFD8
  5000                           
  5001 ;; *************** function _EEPROMRead *****************
  5002 ;; Defined at:
  5003 ;;		line 33 in file "G:\working\YellowFlashingController\mcu.h"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;  addr            1    wreg     PTR unsigned char 
  5006 ;;		 -> eeprom_addr(2), 
  5007 ;;  num             1    0[COMRAM] PTR unsigned char 
  5008 ;;		 -> eeprom_num(1), 
  5009 ;;  dat             1    1[COMRAM] PTR unsigned char 
  5010 ;;		 -> yflash_CFG(2), readwrite(2), CANSdata(8), 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  addr            1    2[COMRAM] PTR unsigned char 
  5013 ;;		 -> eeprom_addr(2), 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;		None               void
  5016 ;; Registers used:
  5017 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5026 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5027 ;;Total ram usage:        3 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    4
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_CANSendID
  5034 ;;		_Read_YFlash_CFG
  5035 ;;		_YFlashNewConfigure
  5036 ;;		_CANDATAAnalyzing
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           	psect	text23
  5041  001C7C                     __ptext23:
  5042                           	opt stack 0
  5043  001C7C                     _EEPROMRead:
  5044                           	opt stack 24
  5045                           
  5046                           ;EEPROMRead@addr stored from wreg
  5047  001C7C  CFE8 F003          	movff	wreg,EEPROMRead@addr
  5048  001C80                     l371:
  5049                           
  5050                           ;mcu.h: 35: {
  5051                           ;mcu.h: 36: EEADRH = (*addr)>>8;
  5052  001C80  6A75               	clrf	3957,c	;volatile
  5053                           
  5054                           ;mcu.h: 37: EEADR = (*addr);
  5055  001C82  5003               	movf	EEPROMRead@addr,w,c
  5056  001C84  6ED9               	movwf	fsr2l,c
  5057  001C86  6ADA               	clrf	fsr2h,c
  5058  001C88  50DF               	movf	indf2,w,c
  5059  001C8A  6E74               	movwf	3956,c	;volatile
  5060                           
  5061                           ;mcu.h: 38: (*addr)++;
  5062  001C8C  5003               	movf	EEPROMRead@addr,w,c
  5063  001C8E  6ED9               	movwf	fsr2l,c
  5064  001C90  6ADA               	clrf	fsr2h,c
  5065  001C92  2ADF               	incf	indf2,f,c
  5066                           
  5067                           ;mcu.h: 40: EEDATA = 0;
  5068  001C94  6A73               	clrf	3955,c	;volatile
  5069                           
  5070                           ;mcu.h: 42: EECON1 &= 0x3f;
  5071  001C96  0E3F               	movlw	63
  5072  001C98  167F               	andwf	3967,f,c	;volatile
  5073                           
  5074                           ;mcu.h: 45: EECON1 |= 0x01;
  5075  001C9A  807F               	bsf	3967,0,c	;volatile
  5076  001C9C  F000               	nop		;# 
  5077                           
  5078                           ;mcu.h: 48: (*dat) = EEDATA;
  5079  001C9E  5002               	movf	EEPROMRead@dat,w,c
  5080  001CA0  6ED9               	movwf	fsr2l,c
  5081  001CA2  6ADA               	clrf	fsr2h,c
  5082  001CA4  CF73 FFDF          	movff	3955,indf2	;volatile
  5083                           
  5084                           ;mcu.h: 49: dat++;
  5085  001CA8  2A02               	incf	EEPROMRead@dat,f,c
  5086                           
  5087                           ;mcu.h: 50: }
  5088                           ;mcu.h: 51: while((*num)--);
  5089  001CAA  5001               	movf	EEPROMRead@num,w,c
  5090  001CAC  6ED9               	movwf	fsr2l,c
  5091  001CAE  6ADA               	clrf	fsr2h,c
  5092  001CB0  06DF               	decf	indf2,f,c
  5093  001CB2  0EFF               	movlw	255
  5094  001CB4  62DF               	cpfseq	indf2,c
  5095  001CB6  D7E4               	goto	l371
  5096  001CB8  0CFF               	retlw	255
  5097  001CBA                     __end_of_EEPROMRead:
  5098                           	opt stack 0
  5099                           tblptru	equ	0xFF8
  5100                           tblptrh	equ	0xFF7
  5101                           tblptrl	equ	0xFF6
  5102                           tablat	equ	0xFF5
  5103                           prodh	equ	0xFF4
  5104                           prodl	equ	0xFF3
  5105                           intcon	equ	0xFF2
  5106                           postinc0	equ	0xFEE
  5107                           wreg	equ	0xFE8
  5108                           indf1	equ	0xFE7
  5109                           postdec1	equ	0xFE5
  5110                           fsr1h	equ	0xFE2
  5111                           fsr1l	equ	0xFE1
  5112                           indf2	equ	0xFDF
  5113                           postinc2	equ	0xFDE
  5114                           postdec2	equ	0xFDD
  5115                           fsr2h	equ	0xFDA
  5116                           fsr2l	equ	0xFD9
  5117                           status	equ	0xFD8
  5118                           
  5119 ;; *************** function ___ftmul *****************
  5120 ;; Defined at:
  5121 ;;		line 52 in file "D:\HI-TECH Software\PICC-18\9.80\sources\ftmul.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;  f1              3    8[COMRAM] float 
  5124 ;;  f2              3   11[COMRAM] float 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  f3_as_produc    3   20[COMRAM] unsigned um
  5127 ;;  sign            1   24[COMRAM] unsigned char 
  5128 ;;  cntr            1   23[COMRAM] unsigned char 
  5129 ;;  exp             1   19[COMRAM] unsigned char 
  5130 ;; Return value:  Size  Location     Type
  5131 ;;                  3    8[COMRAM] float 
  5132 ;; Registers used:
  5133 ;;		wreg, status,2, status,0, cstack
  5134 ;; Tracked objects:
  5135 ;;		On entry : F/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: FFFFFFF0/0
  5138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5139 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5140 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5141 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5142 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5143 ;;Total ram usage:       17 bytes
  5144 ;; Hardware stack levels used:    1
  5145 ;; Hardware stack levels required when called:    5
  5146 ;; This function calls:
  5147 ;;		___ftpack
  5148 ;; This function is called by:
  5149 ;;		_CalculateTime25msCounter
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           	psect	text24
  5154  00150A                     __ptext24:
  5155                           	opt stack 0
  5156  00150A                     ___ftmul:
  5157                           	opt stack 22
  5158                           
  5159                           ; BSR set to: 0
  5160  00150A  0E0F               	movlw	15
  5161  00150C  6E0F               	movwf	??___ftmul& (0+255),c
  5162  00150E  C009  F010         	movff	___ftmul@f1,??___ftmul+1
  5163  001512  C00A  F011         	movff	___ftmul@f1+1,??___ftmul+2
  5164  001516  C00B  F012         	movff	___ftmul@f1+2,??___ftmul+3
  5165  00151A  280F               	incf	??___ftmul,w,c
  5166  00151C  6E13               	movwf	(??___ftmul+4)& (0+255),c
  5167  00151E  D001               	goto	u1370
  5168  001520                     u1375:
  5169  001520  D869               	call	PL28	;call to abstracted procedure
  5170  001522                     u1370:
  5171  001522  2E13               	decfsz	(??___ftmul+4)& (0+255),f,c
  5172  001524  D7FD               	goto	u1375
  5173  001526  5010               	movf	??___ftmul+1,w,c
  5174  001528  6E14               	movwf	___ftmul@exp,c
  5175  00152A  6614               	tstfsz	___ftmul@exp& (0+255),c
  5176  00152C  D004               	goto	l3263
  5177  00152E  6A09               	clrf	?___ftmul,c
  5178  001530  6A0A               	clrf	?___ftmul+1,c
  5179  001532  6A0B               	clrf	?___ftmul+2,c
  5180  001534  0012               	return	
  5181  001536                     l3263:
  5182  001536  0E0F               	movlw	15
  5183  001538  6E0F               	movwf	??___ftmul& (0+255),c
  5184  00153A  C00C  F010         	movff	___ftmul@f2,??___ftmul+1
  5185  00153E  C00D  F011         	movff	___ftmul@f2+1,??___ftmul+2
  5186  001542  C00E  F012         	movff	___ftmul@f2+2,??___ftmul+3
  5187  001546  280F               	incf	??___ftmul,w,c
  5188  001548  6E13               	movwf	(??___ftmul+4)& (0+255),c
  5189  00154A  D001               	goto	u1390
  5190  00154C                     u1395:
  5191  00154C  D853               	call	PL28	;call to abstracted procedure
  5192  00154E                     u1390:
  5193  00154E  2E13               	decfsz	(??___ftmul+4)& (0+255),f,c
  5194  001550  D7FD               	goto	u1395
  5195  001552  5010               	movf	??___ftmul+1,w,c
  5196  001554  6E19               	movwf	___ftmul@sign,c
  5197  001556  6619               	tstfsz	___ftmul@sign& (0+255),c
  5198  001558  D004               	goto	l3267
  5199  00155A  6A09               	clrf	?___ftmul,c
  5200  00155C  6A0A               	clrf	?___ftmul+1,c
  5201  00155E  6A0B               	clrf	?___ftmul+2,c
  5202  001560  0012               	return	
  5203  001562                     l3267:
  5204  001562  5019               	movf	___ftmul@sign,w,c
  5205  001564  0F7B               	addlw	123
  5206  001566  2614               	addwf	___ftmul@exp,f,c
  5207  001568  C00B  F019         	movff	___ftmul@f1+2,___ftmul@sign
  5208  00156C  500E               	movf	(___ftmul@f2+2)& (0+255),w,c
  5209  00156E  1A19               	xorwf	___ftmul@sign,f,c
  5210  001570  0E80               	movlw	128
  5211  001572  1619               	andwf	___ftmul@sign,f,c
  5212  001574  8E0A               	bsf	___ftmul@f1+1,7,c
  5213  001576  8E0D               	bsf	___ftmul@f2+1,7,c
  5214  001578  0E00               	movlw	0
  5215  00157A  160E               	andwf	___ftmul@f2+2,f,c
  5216  00157C  6A15               	clrf	___ftmul@f3_as_product,c
  5217  00157E  6A16               	clrf	___ftmul@f3_as_product+1,c
  5218  001580  6A17               	clrf	___ftmul@f3_as_product+2,c
  5219  001582  0E07               	movlw	7
  5220  001584  6E18               	movwf	___ftmul@cntr,c
  5221  001586                     l3281:
  5222  001586  A009               	btfss	___ftmul@f1,0,c
  5223  001588  D002               	goto	l3285
  5224  00158A  500C               	movf	___ftmul@f2,w,c
  5225  00158C  D82D               	call	PL26	;call to abstracted procedure
  5226  00158E                     l3285:
  5227  00158E  90D8               	bcf	status,0,c
  5228  001590  320B               	rrcf	___ftmul@f1+2,f,c
  5229  001592  320A               	rrcf	___ftmul@f1+1,f,c
  5230  001594  3209               	rrcf	___ftmul@f1,f,c
  5231  001596  90D8               	bcf	status,0,c
  5232  001598  360C               	rlcf	___ftmul@f2,f,c
  5233  00159A  360D               	rlcf	___ftmul@f2+1,f,c
  5234  00159C  360E               	rlcf	___ftmul@f2+2,f,c
  5235  00159E  2E18               	decfsz	___ftmul@cntr,f,c
  5236  0015A0  D7F2               	goto	l3281
  5237  0015A2  0E09               	movlw	9
  5238  0015A4  6E18               	movwf	___ftmul@cntr,c
  5239  0015A6                     l3291:
  5240  0015A6  A009               	btfss	___ftmul@f1,0,c
  5241  0015A8  D002               	goto	l3295
  5242  0015AA  500C               	movf	___ftmul@f2,w,c
  5243  0015AC  D81D               	call	PL26	;call to abstracted procedure
  5244  0015AE                     l3295:
  5245  0015AE  90D8               	bcf	status,0,c
  5246  0015B0  320B               	rrcf	___ftmul@f1+2,f,c
  5247  0015B2  320A               	rrcf	___ftmul@f1+1,f,c
  5248  0015B4  3209               	rrcf	___ftmul@f1,f,c
  5249  0015B6  90D8               	bcf	status,0,c
  5250  0015B8  3217               	rrcf	___ftmul@f3_as_product+2,f,c
  5251  0015BA  3216               	rrcf	___ftmul@f3_as_product+1,f,c
  5252  0015BC  3215               	rrcf	___ftmul@f3_as_product,f,c
  5253  0015BE  2E18               	decfsz	___ftmul@cntr,f,c
  5254  0015C0  D7F2               	goto	l3291
  5255  0015C2  C015  F001         	movff	___ftmul@f3_as_product,?___ftpack
  5256  0015C6  C016  F002         	movff	___ftmul@f3_as_product+1,?___ftpack+1
  5257  0015CA  C017  F003         	movff	___ftmul@f3_as_product+2,?___ftpack+2
  5258  0015CE  C014  F004         	movff	___ftmul@exp,?___ftpack+3
  5259  0015D2  C019  F005         	movff	___ftmul@sign,?___ftpack+4
  5260  0015D6  EC0C  F00C         	call	___ftpack	;wreg free
  5261  0015DA  C001  F009         	movff	?___ftpack,?___ftmul
  5262  0015DE  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  5263  0015E2  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  5264  0015E6  0012               	return	
  5265  0015E8                     __end_of___ftmul:
  5266                           	opt stack 0
  5267  0015E8                     PL26:
  5268  0015E8  2615               	addwf	___ftmul@f3_as_product,f,c
  5269  0015EA  500D               	movf	___ftmul@f2+1,w,c
  5270  0015EC  2216               	addwfc	___ftmul@f3_as_product+1,f,c
  5271  0015EE  500E               	movf	___ftmul@f2+2,w,c
  5272  0015F0  2217               	addwfc	___ftmul@f3_as_product+2,f,c
  5273  0015F2  0012               	return	
  5274  0015F4                     PL28:
  5275  0015F4  90D8               	bcf	status,0,c
  5276  0015F6  3212               	rrcf	??___ftmul+3,f,c
  5277  0015F8  3211               	rrcf	??___ftmul+2,f,c
  5278  0015FA  3210               	rrcf	??___ftmul+1,f,c
  5279  0015FC  0012               	return	
  5280                           tblptru	equ	0xFF8
  5281                           tblptrh	equ	0xFF7
  5282                           tblptrl	equ	0xFF6
  5283                           tablat	equ	0xFF5
  5284                           prodh	equ	0xFF4
  5285                           prodl	equ	0xFF3
  5286                           intcon	equ	0xFF2
  5287                           postinc0	equ	0xFEE
  5288                           wreg	equ	0xFE8
  5289                           indf1	equ	0xFE7
  5290                           postdec1	equ	0xFE5
  5291                           fsr1h	equ	0xFE2
  5292                           fsr1l	equ	0xFE1
  5293                           indf2	equ	0xFDF
  5294                           postinc2	equ	0xFDE
  5295                           postdec2	equ	0xFDD
  5296                           fsr2h	equ	0xFDA
  5297                           fsr2l	equ	0xFD9
  5298                           status	equ	0xFD8
  5299                           
  5300 ;; *************** function ___ftpack *****************
  5301 ;; Defined at:
  5302 ;;		line 63 in file "D:\HI-TECH Software\PICC-18\9.80\sources\float.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  arg             3    0[COMRAM] unsigned um
  5305 ;;  exp             1    3[COMRAM] unsigned char 
  5306 ;;  sign            1    4[COMRAM] unsigned char 
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  3    0[COMRAM] float 
  5311 ;; Registers used:
  5312 ;;		wreg, status,2, status,0
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: FFFFFFFF/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5318 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5320 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5321 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5322 ;;Total ram usage:        8 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    4
  5325 ;; This function calls:
  5326 ;;		Nothing
  5327 ;; This function is called by:
  5328 ;;		___ftmul
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text25
  5333  001818                     __ptext25:
  5334                           	opt stack 0
  5335  001818                     ___ftpack:
  5336                           	opt stack 22
  5337  001818  5004               	movf	___ftpack@exp,w,c
  5338  00181A  E004               	bz	l854
  5339  00181C  5001               	movf	___ftpack@arg,w,c
  5340  00181E  1002               	iorwf	___ftpack@arg+1,w,c
  5341  001820  1003               	iorwf	___ftpack@arg+2,w,c
  5342  001822  E106               	bnz	l3233
  5343  001824                     l854:
  5344  001824  6A01               	clrf	?___ftpack,c
  5345  001826  6A02               	clrf	?___ftpack+1,c
  5346  001828  6A03               	clrf	?___ftpack+2,c
  5347  00182A  0012               	return	
  5348  00182C                     l3231:
  5349  00182C  2A04               	incf	___ftpack@exp,f,c
  5350  00182E  D838               	call	PL27	;call to abstracted procedure
  5351  001830                     l3233:
  5352  001830  6A06               	clrf	??___ftpack& (0+255),c
  5353  001832  6A07               	clrf	(??___ftpack+1)& (0+255),c
  5354  001834  0EFE               	movlw	254
  5355  001836  1403               	andwf	___ftpack@arg+2,w,c
  5356  001838  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5357  00183A  5006               	movf	??___ftpack,w,c
  5358  00183C  1007               	iorwf	??___ftpack+1,w,c
  5359  00183E  1008               	iorwf	??___ftpack+2,w,c
  5360  001840  E007               	bz	l3239
  5361  001842  D7F4               	goto	l3231
  5362  001844                     l3235:
  5363  001844  2A04               	incf	___ftpack@exp,f,c
  5364  001846  2A01               	incf	___ftpack@arg,f,c
  5365  001848  0E00               	movlw	0
  5366  00184A  2202               	addwfc	___ftpack@arg+1,f,c
  5367  00184C  2203               	addwfc	___ftpack@arg+2,f,c
  5368  00184E  D828               	call	PL27	;call to abstracted procedure
  5369  001850                     l3239:
  5370  001850  6A06               	clrf	??___ftpack& (0+255),c
  5371  001852  6A07               	clrf	(??___ftpack+1)& (0+255),c
  5372  001854  5003               	movf	___ftpack@arg+2,w,c
  5373  001856  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5374  001858  5006               	movf	??___ftpack,w,c
  5375  00185A  1007               	iorwf	??___ftpack+1,w,c
  5376  00185C  1008               	iorwf	??___ftpack+2,w,c
  5377  00185E  E006               	bz	l3243
  5378  001860  D7F1               	goto	l3235
  5379  001862                     l3241:
  5380  001862  0604               	decf	___ftpack@exp,f,c
  5381  001864  90D8               	bcf	status,0,c
  5382  001866  3601               	rlcf	___ftpack@arg,f,c
  5383  001868  3602               	rlcf	___ftpack@arg+1,f,c
  5384  00186A  3603               	rlcf	___ftpack@arg+2,f,c
  5385  00186C                     l3243:
  5386  00186C  AE02               	btfss	___ftpack@arg+1,7,c
  5387  00186E  D7F9               	goto	l3241
  5388  001870  A004               	btfss	___ftpack@exp,0,c
  5389  001872  9E02               	bcf	___ftpack@arg+1,7,c
  5390  001874  90D8               	bcf	status,0,c
  5391  001876  3204               	rrcf	___ftpack@exp,f,c
  5392  001878  5004               	movf	___ftpack@exp,w,c
  5393  00187A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5394  00187C  6A07               	clrf	(??___ftpack+1)& (0+255),c
  5395  00187E  6A06               	clrf	??___ftpack& (0+255),c
  5396  001880  5006               	movf	??___ftpack,w,c
  5397  001882  1201               	iorwf	___ftpack@arg,f,c
  5398  001884  5007               	movf	??___ftpack+1,w,c
  5399  001886  1202               	iorwf	___ftpack@arg+1,f,c
  5400  001888  5008               	movf	??___ftpack+2,w,c
  5401  00188A  1203               	iorwf	___ftpack@arg+2,f,c
  5402  00188C  5005               	movf	___ftpack@sign,w,c
  5403  00188E  A4D8               	btfss	status,2,c
  5404  001890  8E03               	bsf	___ftpack@arg+2,7,c
  5405  001892  C001  F001         	movff	___ftpack@arg,?___ftpack
  5406  001896  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5407  00189A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5408  00189E  0012               	return	
  5409  0018A0                     __end_of___ftpack:
  5410                           	opt stack 0
  5411  0018A0                     PL27:
  5412  0018A0  90D8               	bcf	status,0,c
  5413  0018A2  3203               	rrcf	___ftpack@arg+2,f,c
  5414  0018A4  3202               	rrcf	___ftpack@arg+1,f,c
  5415  0018A6  3201               	rrcf	___ftpack@arg,f,c
  5416  0018A8  0012               	return	
  5417                           tblptru	equ	0xFF8
  5418                           tblptrh	equ	0xFF7
  5419                           tblptrl	equ	0xFF6
  5420                           tablat	equ	0xFF5
  5421                           prodh	equ	0xFF4
  5422                           prodl	equ	0xFF3
  5423                           intcon	equ	0xFF2
  5424                           postinc0	equ	0xFEE
  5425                           wreg	equ	0xFE8
  5426                           indf1	equ	0xFE7
  5427                           postdec1	equ	0xFE5
  5428                           fsr1h	equ	0xFE2
  5429                           fsr1l	equ	0xFE1
  5430                           indf2	equ	0xFDF
  5431                           postinc2	equ	0xFDE
  5432                           postdec2	equ	0xFDD
  5433                           fsr2h	equ	0xFDA
  5434                           fsr2l	equ	0xFD9
  5435                           status	equ	0xFD8
  5436                           
  5437 ;; *************** function ___fttol *****************
  5438 ;; Defined at:
  5439 ;;		line 45 in file "D:\HI-TECH Software\PICC-18\9.80\sources\fttol.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;  f1              3   25[COMRAM] float 
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;  lval            4   35[COMRAM] unsigned long 
  5444 ;;  exp1            1   39[COMRAM] unsigned char 
  5445 ;;  sign1           1   34[COMRAM] unsigned char 
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  4   25[COMRAM] long 
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: FFFFFFF0/0
  5454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5455 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5456 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5457 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5458 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5459 ;;Total ram usage:       15 bytes
  5460 ;; Hardware stack levels used:    1
  5461 ;; Hardware stack levels required when called:    4
  5462 ;; This function calls:
  5463 ;;		Nothing
  5464 ;; This function is called by:
  5465 ;;		_CalculateTime25msCounter
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           	psect	text26
  5470  0016D4                     __ptext26:
  5471                           	opt stack 0
  5472  0016D4                     ___fttol:
  5473                           	opt stack 23
  5474  0016D4  0E0F               	movlw	15
  5475  0016D6  D843               	call	PL5	;call to abstracted procedure
  5476  0016D8  6E28               	movwf	___fttol@exp1,c
  5477  0016DA  6628               	tstfsz	___fttol@exp1& (0+255),c
  5478  0016DC  D005               	goto	l3307
  5479  0016DE                     l3305:
  5480  0016DE  6A1A               	clrf	?___fttol,c
  5481  0016E0  6A1B               	clrf	?___fttol+1,c
  5482  0016E2  6A1C               	clrf	?___fttol+2,c
  5483  0016E4  6A1D               	clrf	?___fttol+3,c
  5484  0016E6  0012               	return	
  5485  0016E8                     l3307:
  5486  0016E8  0E17               	movlw	23
  5487  0016EA  D839               	call	PL5	;call to abstracted procedure
  5488  0016EC  6E23               	movwf	___fttol@sign1,c
  5489  0016EE  8E1B               	bsf	___fttol@f1+1,7,c
  5490  0016F0  6A1C               	clrf	___fttol@f1+2,c
  5491  0016F2  501A               	movf	___fttol@f1,w,c
  5492  0016F4  6E24               	movwf	___fttol@lval,c
  5493  0016F6  501B               	movf	___fttol@f1+1,w,c
  5494  0016F8  6E25               	movwf	___fttol@lval+1,c
  5495  0016FA  501C               	movf	___fttol@f1+2,w,c
  5496  0016FC  6E26               	movwf	___fttol@lval+2,c
  5497  0016FE  6A27               	clrf	___fttol@lval+3,c
  5498  001700  0E8E               	movlw	142
  5499  001702  5E28               	subwf	___fttol@exp1,f,c
  5500  001704  AE28               	btfss	___fttol@exp1,7,c
  5501  001706  D00C               	goto	l3327
  5502  001708  5028               	movf	___fttol@exp1,w,c
  5503  00170A  0A80               	xorlw	128
  5504  00170C  0F8F               	addlw	143
  5505  00170E  E3E7               	bnc	l3305
  5506  001710                     l3323:
  5507  001710  90D8               	bcf	status,0,c
  5508  001712  3227               	rrcf	___fttol@lval+3,f,c
  5509  001714  3226               	rrcf	___fttol@lval+2,f,c
  5510  001716  3225               	rrcf	___fttol@lval+1,f,c
  5511  001718  3224               	rrcf	___fttol@lval,f,c
  5512  00171A  3E28               	incfsz	___fttol@exp1,f,c
  5513  00171C  D7F9               	goto	l3323
  5514  00171E  D00C               	goto	l3335
  5515  001720                     l3327:
  5516  001720  0E17               	movlw	23
  5517  001722  6428               	cpfsgt	___fttol@exp1,c
  5518  001724  D007               	goto	l3333
  5519  001726  D7DB               	goto	l3305
  5520  001728                     l3331:
  5521  001728  90D8               	bcf	status,0,c
  5522  00172A  3624               	rlcf	___fttol@lval,f,c
  5523  00172C  3625               	rlcf	___fttol@lval+1,f,c
  5524  00172E  3626               	rlcf	___fttol@lval+2,f,c
  5525  001730  3627               	rlcf	___fttol@lval+3,f,c
  5526  001732  0628               	decf	___fttol@exp1,f,c
  5527  001734                     l3333:
  5528  001734  6628               	tstfsz	___fttol@exp1,c
  5529  001736  D7F8               	goto	l3331
  5530  001738                     l3335:
  5531  001738  5023               	movf	___fttol@sign1,w,c
  5532  00173A  E008               	bz	l3339
  5533  00173C  1E27               	comf	___fttol@lval+3,f,c
  5534  00173E  1E26               	comf	___fttol@lval+2,f,c
  5535  001740  1E25               	comf	___fttol@lval+1,f,c
  5536  001742  6C24               	negf	___fttol@lval,c
  5537  001744  0E00               	movlw	0
  5538  001746  2225               	addwfc	___fttol@lval+1,f,c
  5539  001748  2226               	addwfc	___fttol@lval+2,f,c
  5540  00174A  2227               	addwfc	___fttol@lval+3,f,c
  5541  00174C                     l3339:
  5542  00174C  C024  F01A         	movff	___fttol@lval,?___fttol
  5543  001750  C025  F01B         	movff	___fttol@lval+1,?___fttol+1
  5544  001754  C026  F01C         	movff	___fttol@lval+2,?___fttol+2
  5545  001758  C027  F01D         	movff	___fttol@lval+3,?___fttol+3
  5546  00175C  0012               	return	
  5547  00175E                     __end_of___fttol:
  5548                           	opt stack 0
  5549  00175E                     PL5:
  5550  00175E  6E1E               	movwf	??___fttol& (0+255),c
  5551  001760  C01A  F01F         	movff	___fttol@f1,??___fttol+1
  5552  001764  C01B  F020         	movff	___fttol@f1+1,??___fttol+2
  5553  001768  C01C  F021         	movff	___fttol@f1+2,??___fttol+3
  5554  00176C  281E               	incf	??___fttol,w,c
  5555  00176E  6E22               	movwf	(??___fttol+4)& (0+255),c
  5556  001770  D004               	goto	u1430
  5557  001772                     u1435:
  5558  001772  90D8               	bcf	status,0,c
  5559  001774  3221               	rrcf	??___fttol+3,f,c
  5560  001776  3220               	rrcf	??___fttol+2,f,c
  5561  001778  321F               	rrcf	??___fttol+1,f,c
  5562  00177A                     u1430:
  5563  00177A  2E22               	decfsz	(??___fttol+4)& (0+255),f,c
  5564  00177C  D7FA               	goto	u1435
  5565  00177E  501F               	movf	??___fttol+1,w,c
  5566  001780  0012               	return	
  5567                           tblptru	equ	0xFF8
  5568                           tblptrh	equ	0xFF7
  5569                           tblptrl	equ	0xFF6
  5570                           tablat	equ	0xFF5
  5571                           prodh	equ	0xFF4
  5572                           prodl	equ	0xFF3
  5573                           intcon	equ	0xFF2
  5574                           postinc0	equ	0xFEE
  5575                           wreg	equ	0xFE8
  5576                           indf1	equ	0xFE7
  5577                           postdec1	equ	0xFE5
  5578                           fsr1h	equ	0xFE2
  5579                           fsr1l	equ	0xFE1
  5580                           indf2	equ	0xFDF
  5581                           postinc2	equ	0xFDE
  5582                           postdec2	equ	0xFDD
  5583                           fsr2h	equ	0xFDA
  5584                           fsr2l	equ	0xFD9
  5585                           status	equ	0xFD8
  5586                           
  5587 ;; *************** function ___lwdiv *****************
  5588 ;; Defined at:
  5589 ;;		line 10 in file "D:\HI-TECH Software\PICC-18\9.80\sources\lwdiv.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;  dividend        2    0[COMRAM] unsigned int 
  5592 ;;  divisor         2    2[COMRAM] unsigned int 
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;  quotient        2    4[COMRAM] unsigned int 
  5595 ;;  counter         1    6[COMRAM] unsigned char 
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  2    0[COMRAM] unsigned int 
  5598 ;; Registers used:
  5599 ;;		wreg, status,2, status,0
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: FFFFFFFF/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5605 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5606 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5608 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5609 ;;Total ram usage:        7 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    4
  5612 ;; This function calls:
  5613 ;;		Nothing
  5614 ;; This function is called by:
  5615 ;;		_CalculateTime25msCounter
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           	psect	text27
  5620  001C32                     __ptext27:
  5621                           	opt stack 0
  5622  001C32                     ___lwdiv:
  5623                           	opt stack 23
  5624  001C32  6A05               	clrf	___lwdiv@quotient,c
  5625  001C34  6A06               	clrf	___lwdiv@quotient+1,c
  5626  001C36  5004               	movf	___lwdiv@divisor+1,w,c
  5627  001C38  1003               	iorwf	___lwdiv@divisor,w,c
  5628  001C3A  E01B               	bz	l1067
  5629  001C3C  0E01               	movlw	1
  5630  001C3E  6E07               	movwf	___lwdiv@counter,c
  5631  001C40  D004               	goto	l3351
  5632  001C42                     l3349:
  5633  001C42  90D8               	bcf	status,0,c
  5634  001C44  3603               	rlcf	___lwdiv@divisor,f,c
  5635  001C46  3604               	rlcf	___lwdiv@divisor+1,f,c
  5636  001C48  2A07               	incf	___lwdiv@counter,f,c
  5637  001C4A                     l3351:
  5638  001C4A  AE04               	btfss	___lwdiv@divisor+1,7,c
  5639  001C4C  D7FA               	goto	l3349
  5640  001C4E                     l3353:
  5641  001C4E  90D8               	bcf	status,0,c
  5642  001C50  3605               	rlcf	___lwdiv@quotient,f,c
  5643  001C52  3606               	rlcf	___lwdiv@quotient+1,f,c
  5644  001C54  5003               	movf	___lwdiv@divisor,w,c
  5645  001C56  5C01               	subwf	___lwdiv@dividend,w,c
  5646  001C58  5004               	movf	___lwdiv@divisor+1,w,c
  5647  001C5A  5802               	subwfb	___lwdiv@dividend+1,w,c
  5648  001C5C  E305               	bnc	l3361
  5649  001C5E  5003               	movf	___lwdiv@divisor,w,c
  5650  001C60  5E01               	subwf	___lwdiv@dividend,f,c
  5651  001C62  5004               	movf	___lwdiv@divisor+1,w,c
  5652  001C64  5A02               	subwfb	___lwdiv@dividend+1,f,c
  5653  001C66  8005               	bsf	___lwdiv@quotient,0,c
  5654  001C68                     l3361:
  5655  001C68  90D8               	bcf	status,0,c
  5656  001C6A  3204               	rrcf	___lwdiv@divisor+1,f,c
  5657  001C6C  3203               	rrcf	___lwdiv@divisor,f,c
  5658  001C6E  2E07               	decfsz	___lwdiv@counter,f,c
  5659  001C70  D7EE               	goto	l3353
  5660  001C72                     l1067:
  5661  001C72  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5662  001C76  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5663  001C7A  0012               	return	
  5664  001C7C                     __end_of___lwdiv:
  5665                           	opt stack 0
  5666                           tblptru	equ	0xFF8
  5667                           tblptrh	equ	0xFF7
  5668                           tblptrl	equ	0xFF6
  5669                           tablat	equ	0xFF5
  5670                           prodh	equ	0xFF4
  5671                           prodl	equ	0xFF3
  5672                           intcon	equ	0xFF2
  5673                           postinc0	equ	0xFEE
  5674                           wreg	equ	0xFE8
  5675                           indf1	equ	0xFE7
  5676                           postdec1	equ	0xFE5
  5677                           fsr1h	equ	0xFE2
  5678                           fsr1l	equ	0xFE1
  5679                           indf2	equ	0xFDF
  5680                           postinc2	equ	0xFDE
  5681                           postdec2	equ	0xFDD
  5682                           fsr2h	equ	0xFDA
  5683                           fsr2l	equ	0xFD9
  5684                           status	equ	0xFD8
  5685                           
  5686 ;; *************** function _IntServer *****************
  5687 ;; Defined at:
  5688 ;;		line 292 in file "G:\working\YellowFlashingController\YellowFlash.C"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;		None
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;		None
  5693 ;; Return value:  Size  Location     Type
  5694 ;;		None               void
  5695 ;; Registers used:
  5696 ;;		wreg, status,2, status,0, cstack
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: FFFFFFF0/0
  5701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5706 ;;Total ram usage:        0 bytes
  5707 ;; Hardware stack levels used:    1
  5708 ;; Hardware stack levels required when called:    3
  5709 ;; This function calls:
  5710 ;;		_TMR0IntServer
  5711 ;;		_TMR1IntServer
  5712 ;;		_ADIntServer
  5713 ;; This function is called by:
  5714 ;;		Interrupt level 2
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           	psect	intcode
  5719  000008                     __pintcode:
  5720                           	opt stack 0
  5721  000008                     _IntServer:
  5722                           	opt stack 22
  5723  000008                     
  5724                           ;YellowFlash.C: 295: if(TMR0IE && TMR0IF)
  5725  000008  AAF2               	btfss	intcon,5,c	;volatile
  5726  00000A  D001               	goto	i2u157_41
  5727  00000C  D001               	goto	i2u157_40
  5728  00000E                     i2u157_41:
  5729  00000E  D007               	goto	i2l3391
  5730  000010                     i2u157_40:
  5731  000010  A4F2               	btfss	intcon,2,c	;volatile
  5732  000012  D001               	goto	i2u158_41
  5733  000014  D001               	goto	i2u158_40
  5734  000016                     i2u158_41:
  5735  000016  D003               	goto	i2l3391
  5736  000018                     i2u158_40:
  5737  000018                     
  5738                           ;YellowFlash.C: 296: {
  5739                           ;YellowFlash.C: 298: TMR0IF = 0;
  5740  000018  94F2               	bcf	intcon,2,c	;volatile
  5741  00001A                     
  5742                           ;YellowFlash.C: 299: TMR0IntServer();
  5743  00001A  EC62  F00F         	call	_TMR0IntServer	;wreg free
  5744  00001E                     i2l3391:
  5745                           
  5746                           ;YellowFlash.C: 300: }
  5747                           ;YellowFlash.C: 302: if(TMR1IE && TMR1IF)
  5748  00001E  A09D               	btfss	3997,0,c	;volatile
  5749  000020  D001               	goto	i2u159_41
  5750  000022  D001               	goto	i2u159_40
  5751  000024                     i2u159_41:
  5752  000024  D007               	goto	i2l3399
  5753  000026                     i2u159_40:
  5754  000026  A09E               	btfss	3998,0,c	;volatile
  5755  000028  D001               	goto	i2u160_41
  5756  00002A  D001               	goto	i2u160_40
  5757  00002C                     i2u160_41:
  5758  00002C  D003               	goto	i2l3399
  5759  00002E                     i2u160_40:
  5760  00002E                     
  5761                           ;YellowFlash.C: 303: {
  5762                           ;YellowFlash.C: 305: TMR1IF = 0;
  5763  00002E  909E               	bcf	3998,0,c	;volatile
  5764  000030                     
  5765                           ;YellowFlash.C: 306: TMR1IntServer();
  5766  000030  EC2C  F00F         	call	_TMR1IntServer	;wreg free
  5767  000034                     i2l3399:
  5768                           
  5769                           ;YellowFlash.C: 311: {
  5770                           ;YellowFlash.C: 312: CANInt=1;
  5771  000034  506E               	movf	3950,w,c	;volatile
  5772  000036                     
  5773                           ;YellowFlash.C: 313: }
  5774                           ;YellowFlash.C: 314: if(ADIE && ADIF)
  5775  000036  AC9D               	btfss	3997,6,c	;volatile
  5776  000038  D001               	goto	i2u161_41
  5777  00003A  D001               	goto	i2u161_40
  5778  00003C                     i2u161_41:
  5779  00003C  D007               	goto	i2l520
  5780  00003E                     i2u161_40:
  5781  00003E  AC9E               	btfss	3998,6,c	;volatile
  5782  000040  D001               	goto	i2u162_41
  5783  000042  D001               	goto	i2u162_40
  5784  000044                     i2u162_41:
  5785  000044  D003               	goto	i2l520
  5786  000046                     i2u162_40:
  5787  000046                     
  5788                           ;YellowFlash.C: 315: {
  5789                           ;YellowFlash.C: 316: ADIF = 0;
  5790  000046  9C9E               	bcf	3998,6,c	;volatile
  5791  000048                     
  5792                           ;YellowFlash.C: 317: ADIntServer();
  5793  000048  EC69  F00F         	call	_ADIntServer	;wreg free
  5794  00004C                     i2l520:
  5795  00004C  0011               	retfie		f
  5796  00004E                     __end_of_IntServer:
  5797                           	opt stack 0
  5798                           tblptru	equ	0xFF8
  5799                           tblptrh	equ	0xFF7
  5800                           tblptrl	equ	0xFF6
  5801                           tablat	equ	0xFF5
  5802                           prodh	equ	0xFF4
  5803                           prodl	equ	0xFF3
  5804                           intcon	equ	0xFF2
  5805                           postinc0	equ	0xFEE
  5806                           wreg	equ	0xFE8
  5807                           indf1	equ	0xFE7
  5808                           postdec1	equ	0xFE5
  5809                           fsr1h	equ	0xFE2
  5810                           fsr1l	equ	0xFE1
  5811                           indf2	equ	0xFDF
  5812                           postinc2	equ	0xFDE
  5813                           postdec2	equ	0xFDD
  5814                           fsr2h	equ	0xFDA
  5815                           fsr2l	equ	0xFD9
  5816                           status	equ	0xFD8
  5817                           
  5818 ;; *************** function _TMR0IntServer *****************
  5819 ;; Defined at:
  5820 ;;		line 246 in file "G:\working\YellowFlashingController\YellowFlash.C"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;		None
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;		None
  5825 ;; Return value:  Size  Location     Type
  5826 ;;		None               void
  5827 ;; Registers used:
  5828 ;;		wreg, status,2
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: FFFFFFF0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5838 ;;Total ram usage:        0 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; This function calls:
  5841 ;;		Nothing
  5842 ;; This function is called by:
  5843 ;;		_IntServer
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           	psect	text29
  5848  001EC4                     __ptext29:
  5849                           	opt stack 0
  5850  001EC4                     _TMR0IntServer:
  5851                           	opt stack 24
  5852                           
  5853                           ;YellowFlash.C: 248: TMR0H = 0xd8;
  5854  001EC4  0ED8               	movlw	216
  5855  001EC6  6ED7               	movwf	4055,c	;volatile
  5856                           
  5857                           ;YellowFlash.C: 249: TMR0L = 0xef;
  5858  001EC8  0EEF               	movlw	239
  5859  001ECA  6ED6               	movwf	4054,c	;volatile
  5860                           
  5861                           ;YellowFlash.C: 253: time5ms = 1;
  5862  001ECC  0100               	movlb	(_time5ms/(0+8)) shr (0+8)
  5863  001ECE  825F               	bsf	_time5ms/(0+8),_time5ms& (0+7),c
  5864  001ED0  0CEF               	retlw	239
  5865  001ED2                     __end_of_TMR0IntServer:
  5866                           	opt stack 0
  5867                           tblptru	equ	0xFF8
  5868                           tblptrh	equ	0xFF7
  5869                           tblptrl	equ	0xFF6
  5870                           tablat	equ	0xFF5
  5871                           prodh	equ	0xFF4
  5872                           prodl	equ	0xFF3
  5873                           intcon	equ	0xFF2
  5874                           postinc0	equ	0xFEE
  5875                           wreg	equ	0xFE8
  5876                           indf1	equ	0xFE7
  5877                           postdec1	equ	0xFE5
  5878                           fsr1h	equ	0xFE2
  5879                           fsr1l	equ	0xFE1
  5880                           indf2	equ	0xFDF
  5881                           postinc2	equ	0xFDE
  5882                           postdec2	equ	0xFDD
  5883                           fsr2h	equ	0xFDA
  5884                           fsr2l	equ	0xFD9
  5885                           status	equ	0xFD8
  5886                           
  5887 ;; *************** function _TMR1IntServer *****************
  5888 ;; Defined at:
  5889 ;;		line 258 in file "G:\working\YellowFlashingController\YellowFlash.C"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;		None
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;		None
  5894 ;; Return value:  Size  Location     Type
  5895 ;;		None               void
  5896 ;; Registers used:
  5897 ;;		wreg, status,2, status,0, cstack
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: FFFFFFF0/0
  5902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5907 ;;Total ram usage:        0 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; Hardware stack levels required when called:    2
  5910 ;; This function calls:
  5911 ;;		_YellowFlash
  5912 ;; This function is called by:
  5913 ;;		_IntServer
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           	psect	text30
  5918  001E58                     __ptext30:
  5919                           	opt stack 0
  5920  001E58                     _TMR1IntServer:
  5921                           	opt stack 22
  5922                           
  5923                           ;YellowFlash.C: 260: TMR1H = 0x3c;
  5924  001E58  0E3C               	movlw	60
  5925  001E5A  6ECF               	movwf	4047,c	;volatile
  5926                           
  5927                           ;YellowFlash.C: 261: TMR1L = 0xaf;
  5928  001E5C  0EAF               	movlw	175
  5929  001E5E  6ECE               	movwf	4046,c	;volatile
  5930                           
  5931                           ;YellowFlash.C: 264: t1_cont++;
  5932  001E60  0100               	movlb	0	; () banked
  5933  001E62  4BDE               	infsnz	_t1_cont& (0+255),f,b
  5934  001E64  2BDF               	incf	(_t1_cont+1)& (0+255),f,b
  5935                           
  5936                           ; BSR set to: 0
  5937                           ;YellowFlash.C: 273: if(t1_cont>=time_counter)
  5938  001E66  503C               	movf	_time_counter,w,c
  5939  001E68  5DDE               	subwf	_t1_cont& (0+255),w,b
  5940  001E6A  503D               	movf	_time_counter+1,w,c
  5941  001E6C  59DF               	subwfb	(_t1_cont+1)& (0+255),w,b
  5942  001E6E  A0D8               	btfss	status,0,c
  5943  001E70  0012               	return	
  5944                           
  5945                           ; BSR set to: 0
  5946                           ;YellowFlash.C: 274: {
  5947                           ;YellowFlash.C: 275: t1_cont=0;
  5948  001E72  6BDE               	clrf	_t1_cont& (0+255),b
  5949  001E74  6BDF               	clrf	(_t1_cont+1)& (0+255),b
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;YellowFlash.C: 276: YellowFlash();
  5953  001E76  EF5A  F00F         	goto	_YellowFlash	;wreg free
  5954  001E7A                     __end_of_TMR1IntServer:
  5955                           	opt stack 0
  5956                           tblptru	equ	0xFF8
  5957                           tblptrh	equ	0xFF7
  5958                           tblptrl	equ	0xFF6
  5959                           tablat	equ	0xFF5
  5960                           prodh	equ	0xFF4
  5961                           prodl	equ	0xFF3
  5962                           intcon	equ	0xFF2
  5963                           postinc0	equ	0xFEE
  5964                           wreg	equ	0xFE8
  5965                           indf1	equ	0xFE7
  5966                           postdec1	equ	0xFE5
  5967                           fsr1h	equ	0xFE2
  5968                           fsr1l	equ	0xFE1
  5969                           indf2	equ	0xFDF
  5970                           postinc2	equ	0xFDE
  5971                           postdec2	equ	0xFDD
  5972                           fsr2h	equ	0xFDA
  5973                           fsr2l	equ	0xFD9
  5974                           status	equ	0xFD8
  5975                           
  5976 ;; *************** function _YellowFlash *****************
  5977 ;; Defined at:
  5978 ;;		line 229 in file "G:\working\YellowFlashingController\YellowFlash.C"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;		None
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;		None
  5983 ;; Return value:  Size  Location     Type
  5984 ;;		None               void
  5985 ;; Registers used:
  5986 ;;		wreg, status,2, status,0, cstack
  5987 ;; Tracked objects:
  5988 ;;		On entry : F/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: FFFFFFF0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5996 ;;Total ram usage:        0 bytes
  5997 ;; Hardware stack levels used:    1
  5998 ;; Hardware stack levels required when called:    1
  5999 ;; This function calls:
  6000 ;;		_LED_On_Disp
  6001 ;;		_LED_Off_Disp
  6002 ;; This function is called by:
  6003 ;;		_TMR1IntServer
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text31
  6008  001EB4                     __ptext31:
  6009                           	opt stack 0
  6010  001EB4                     _YellowFlash:
  6011                           	opt stack 22
  6012                           
  6013                           ; BSR set to: 0
  6014                           ;YellowFlash.C: 230: if(turnoff)
  6015  001EB4  505C               	movf	_turnoff,w,c
  6016  001EB6  B4D8               	btfsc	status,2,c
  6017  001EB8  0012               	return	
  6018                           
  6019                           ; BSR set to: 0
  6020                           ;YellowFlash.C: 231: {
  6021                           ;YellowFlash.C: 232: if(switchmode)
  6022  001EBA  B05F               	btfsc	_switchmode/(0+8),_switchmode& (0+7),c
  6023                           
  6024                           ;YellowFlash.C: 233: {
  6025                           ;YellowFlash.C: 234: LED_On_Disp();
  6026  001EBC  EFFB  F00E         	goto	i2l2845	;wreg free
  6027                           
  6028                           ;YellowFlash.C: 236: else
  6029                           ;YellowFlash.C: 237: {
  6030                           ;YellowFlash.C: 238: LED_Off_Disp();
  6031                           
  6032                           ;YellowFlash.C: 235: }
  6033  001EC0  EFE7  F00E         	goto	i2l2851	;wreg free
  6034  001EC4                     __end_of_YellowFlash:
  6035                           	opt stack 0
  6036                           tblptru	equ	0xFF8
  6037                           tblptrh	equ	0xFF7
  6038                           tblptrl	equ	0xFF6
  6039                           tablat	equ	0xFF5
  6040                           prodh	equ	0xFF4
  6041                           prodl	equ	0xFF3
  6042                           intcon	equ	0xFF2
  6043                           postinc0	equ	0xFEE
  6044                           wreg	equ	0xFE8
  6045                           indf1	equ	0xFE7
  6046                           postdec1	equ	0xFE5
  6047                           fsr1h	equ	0xFE2
  6048                           fsr1l	equ	0xFE1
  6049                           indf2	equ	0xFDF
  6050                           postinc2	equ	0xFDE
  6051                           postdec2	equ	0xFDD
  6052                           fsr2h	equ	0xFDA
  6053                           fsr2l	equ	0xFD9
  6054                           status	equ	0xFD8
  6055                           
  6056 ;; *************** function _LED_On_Disp *****************
  6057 ;; Defined at:
  6058 ;;		line 179 in file "G:\working\YellowFlashingController\YellowFlash.C"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;		None
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;		None
  6063 ;; Return value:  Size  Location     Type
  6064 ;;		None               void
  6065 ;; Registers used:
  6066 ;;		wreg, status,2, status,0
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: FFFFFFF0/0
  6071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6076 ;;Total ram usage:        0 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; This function calls:
  6079 ;;		Nothing
  6080 ;; This function is called by:
  6081 ;;		_YellowFlash
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084                           
  6085                           	psect	text32
  6086  001DE6                     __ptext32:
  6087                           	opt stack 0
  6088  001DE6                     _LED_On_Disp:
  6089                           	opt stack 22
  6090                           
  6091                           ;YellowFlash.C: 180: switch(run_mode)
  6092  001DE6  D007               	goto	i2l2845
  6093  001DE8                     i2l485:
  6094                           
  6095                           ;YellowFlash.C: 186: RC6=0;
  6096  001DE8  9C82               	bcf	3970,6,c	;volatile
  6097                           
  6098                           ;YellowFlash.C: 187: RC4=0;
  6099  001DEA  9882               	bcf	3970,4,c	;volatile
  6100  001DEC  D002               	goto	L7
  6101  001DEE                     i2l487:
  6102                           
  6103                           ;YellowFlash.C: 192: RC6=1;
  6104  001DEE  8C82               	bsf	3970,6,c	;volatile
  6105                           
  6106                           ;YellowFlash.C: 193: RC4=1;
  6107  001DF0  8882               	bsf	3970,4,c	;volatile
  6108  001DF2                     L7:
  6109                           
  6110                           ;YellowFlash.C: 194: RD3=0;
  6111  001DF2  9683               	bcf	3971,3,c	;volatile
  6112                           
  6113                           ;YellowFlash.C: 195: break;
  6114  001DF4  D005               	goto	i2l486
  6115  001DF6                     i2l2845:
  6116  001DF6  504A               	movf	_run_mode,w,c
  6117                           
  6118                           ; Switch size 1, requested type "space"
  6119                           ; Number of cases is 2, Range of values is 1 to 2
  6120                           ; switch strategies available:
  6121                           ; Name         Instructions Cycles
  6122                           ; simple_byte            7     4 (average)
  6123                           ;	Chosen strategy is simple_byte
  6124  001DF8  0A01               	xorlw	1	; case 1
  6125  001DFA  E0F6               	bz	i2l485
  6126  001DFC  0A03               	xorlw	3	; case 2
  6127  001DFE  E0F7               	bz	i2l487
  6128  001E00                     i2l486:
  6129                           
  6130                           ;YellowFlash.C: 200: time_counter=time_on_counter;
  6131  001E00  C042  F03C         	movff	_time_on_counter,_time_counter
  6132  001E04  C043  F03D         	movff	_time_on_counter+1,_time_counter+1
  6133                           
  6134                           ;YellowFlash.C: 201: switchmode=0;
  6135  001E08  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  6136  001E0A  905F               	bcf	_switchmode/(0+8),_switchmode& (0+7),c
  6137  001E0C  0012               	return	
  6138  001E0E                     __end_of_LED_On_Disp:
  6139                           	opt stack 0
  6140                           tblptru	equ	0xFF8
  6141                           tblptrh	equ	0xFF7
  6142                           tblptrl	equ	0xFF6
  6143                           tablat	equ	0xFF5
  6144                           prodh	equ	0xFF4
  6145                           prodl	equ	0xFF3
  6146                           intcon	equ	0xFF2
  6147                           postinc0	equ	0xFEE
  6148                           wreg	equ	0xFE8
  6149                           indf1	equ	0xFE7
  6150                           postdec1	equ	0xFE5
  6151                           fsr1h	equ	0xFE2
  6152                           fsr1l	equ	0xFE1
  6153                           indf2	equ	0xFDF
  6154                           postinc2	equ	0xFDE
  6155                           postdec2	equ	0xFDD
  6156                           fsr2h	equ	0xFDA
  6157                           fsr2l	equ	0xFD9
  6158                           status	equ	0xFD8
  6159                           
  6160 ;; *************** function _LED_Off_Disp *****************
  6161 ;; Defined at:
  6162 ;;		line 204 in file "G:\working\YellowFlashingController\YellowFlash.C"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;		None
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;		None
  6167 ;; Return value:  Size  Location     Type
  6168 ;;		None               void
  6169 ;; Registers used:
  6170 ;;		wreg, status,2, status,0
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: FFFFFFF0/0
  6175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6180 ;;Total ram usage:        0 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; This function calls:
  6183 ;;		Nothing
  6184 ;; This function is called by:
  6185 ;;		_YellowFlash
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188                           
  6189                           	psect	text33
  6190  001DBE                     __ptext33:
  6191                           	opt stack 0
  6192  001DBE                     _LED_Off_Disp:
  6193                           	opt stack 22
  6194                           
  6195                           ;YellowFlash.C: 205: switch(run_mode)
  6196  001DBE  D007               	goto	i2l2851
  6197  001DC0                     i2l493:
  6198                           
  6199                           ;YellowFlash.C: 210: RC6=1;
  6200  001DC0  8C82               	bsf	3970,6,c	;volatile
  6201                           
  6202                           ;YellowFlash.C: 211: RC4=1;
  6203  001DC2  8882               	bsf	3970,4,c	;volatile
  6204  001DC4  D002               	goto	L8
  6205  001DC6                     i2l495:
  6206                           
  6207                           ;YellowFlash.C: 215: RC6=0;
  6208  001DC6  9C82               	bcf	3970,6,c	;volatile
  6209                           
  6210                           ;YellowFlash.C: 216: RC4=0;
  6211  001DC8  9882               	bcf	3970,4,c	;volatile
  6212  001DCA                     L8:
  6213                           
  6214                           ;YellowFlash.C: 217: RD3=1;
  6215  001DCA  8683               	bsf	3971,3,c	;volatile
  6216                           
  6217                           ;YellowFlash.C: 218: break;
  6218  001DCC  D005               	goto	i2l494
  6219  001DCE                     i2l2851:
  6220  001DCE  504A               	movf	_run_mode,w,c
  6221                           
  6222                           ; Switch size 1, requested type "space"
  6223                           ; Number of cases is 2, Range of values is 1 to 2
  6224                           ; switch strategies available:
  6225                           ; Name         Instructions Cycles
  6226                           ; simple_byte            7     4 (average)
  6227                           ;	Chosen strategy is simple_byte
  6228  001DD0  0A01               	xorlw	1	; case 1
  6229  001DD2  E0F6               	bz	i2l493
  6230  001DD4  0A03               	xorlw	3	; case 2
  6231  001DD6  E0F7               	bz	i2l495
  6232  001DD8                     i2l494:
  6233                           
  6234                           ;YellowFlash.C: 222: time_counter=time_off_counter;
  6235  001DD8  C040  F03C         	movff	_time_off_counter,_time_counter
  6236  001DDC  C041  F03D         	movff	_time_off_counter+1,_time_counter+1
  6237                           
  6238                           ;YellowFlash.C: 223: switchmode=1;
  6239  001DE0  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  6240  001DE2  805F               	bsf	_switchmode/(0+8),_switchmode& (0+7),c
  6241  001DE4  0012               	return	
  6242  001DE6                     __end_of_LED_Off_Disp:
  6243                           	opt stack 0
  6244                           tblptru	equ	0xFF8
  6245                           tblptrh	equ	0xFF7
  6246                           tblptrl	equ	0xFF6
  6247                           tablat	equ	0xFF5
  6248                           prodh	equ	0xFF4
  6249                           prodl	equ	0xFF3
  6250                           intcon	equ	0xFF2
  6251                           postinc0	equ	0xFEE
  6252                           wreg	equ	0xFE8
  6253                           indf1	equ	0xFE7
  6254                           postdec1	equ	0xFE5
  6255                           fsr1h	equ	0xFE2
  6256                           fsr1l	equ	0xFE1
  6257                           indf2	equ	0xFDF
  6258                           postinc2	equ	0xFDE
  6259                           postdec2	equ	0xFDD
  6260                           fsr2h	equ	0xFDA
  6261                           fsr2l	equ	0xFD9
  6262                           status	equ	0xFD8
  6263                           
  6264 ;; *************** function _ADIntServer *****************
  6265 ;; Defined at:
  6266 ;;		line 283 in file "G:\working\YellowFlashingController\YellowFlash.C"
  6267 ;; Parameters:    Size  Location     Type
  6268 ;;		None
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;  adrel           2    0        unsigned int 
  6271 ;; Return value:  Size  Location     Type
  6272 ;;		None               void
  6273 ;; Registers used:
  6274 ;;		wreg
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: FFFFFFFF/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6284 ;;Total ram usage:        0 bytes
  6285 ;; Hardware stack levels used:    1
  6286 ;; This function calls:
  6287 ;;		Nothing
  6288 ;; This function is called by:
  6289 ;;		_IntServer
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text34
  6294  001ED2                     __ptext34:
  6295                           	opt stack 0
  6296  001ED2                     _ADIntServer:
  6297                           	opt stack 24
  6298                           
  6299                           ;YellowFlash.C: 286: adrel = (ADRESH<<8)|ADRESL;
  6300  001ED2  50C4               	movf	4036,w,c	;volatile
  6301  001ED4  50C3               	movf	4035,w,c	;volatile
  6302  001ED6  0012               	return	
  6303  001ED8                     __end_of_ADIntServer:
  6304                           	opt stack 0
  6305                           tblptru	equ	0xFF8
  6306                           tblptrh	equ	0xFF7
  6307                           tblptrl	equ	0xFF6
  6308                           tablat	equ	0xFF5
  6309                           prodh	equ	0xFF4
  6310                           prodl	equ	0xFF3
  6311                           intcon	equ	0xFF2
  6312                           postinc0	equ	0xFEE
  6313                           wreg	equ	0xFE8
  6314                           indf1	equ	0xFE7
  6315                           postdec1	equ	0xFE5
  6316                           fsr1h	equ	0xFE2
  6317                           fsr1l	equ	0xFE1
  6318                           indf2	equ	0xFDF
  6319                           postinc2	equ	0xFDE
  6320                           postdec2	equ	0xFDD
  6321                           fsr2h	equ	0xFDA
  6322                           fsr2l	equ	0xFD9
  6323                           status	equ	0xFD8
  6324                           tblptru	equ	0xFF8
  6325                           tblptrh	equ	0xFF7
  6326                           tblptrl	equ	0xFF6
  6327                           tablat	equ	0xFF5
  6328                           prodh	equ	0xFF4
  6329                           prodl	equ	0xFF3
  6330                           intcon	equ	0xFF2
  6331                           postinc0	equ	0xFEE
  6332                           wreg	equ	0xFE8
  6333                           indf1	equ	0xFE7
  6334                           postdec1	equ	0xFE5
  6335                           fsr1h	equ	0xFE2
  6336                           fsr1l	equ	0xFE1
  6337                           indf2	equ	0xFDF
  6338                           postinc2	equ	0xFDE
  6339                           postdec2	equ	0xFDD
  6340                           fsr2h	equ	0xFDA
  6341                           fsr2l	equ	0xFD9
  6342                           status	equ	0xFD8
  6343                           
  6344                           	psect	rparam
  6345  0000                     tblptru	equ	0xFF8
  6346                           tblptrh	equ	0xFF7
  6347                           tblptrl	equ	0xFF6
  6348                           tablat	equ	0xFF5
  6349                           prodh	equ	0xFF4
  6350                           prodl	equ	0xFF3
  6351                           intcon	equ	0xFF2
  6352                           postinc0	equ	0xFEE
  6353                           wreg	equ	0xFE8
  6354                           indf1	equ	0xFE7
  6355                           postdec1	equ	0xFE5
  6356                           fsr1h	equ	0xFE2
  6357                           fsr1l	equ	0xFE1
  6358                           indf2	equ	0xFDF
  6359                           postinc2	equ	0xFDE
  6360                           postdec2	equ	0xFDD
  6361                           fsr2h	equ	0xFDA
  6362                           fsr2l	equ	0xFD9
  6363                           status	equ	0xFD8
  6364                           tblptru	equ	0xFF8
  6365                           tblptrh	equ	0xFF7
  6366                           tblptrl	equ	0xFF6
  6367                           tablat	equ	0xFF5
  6368                           prodh	equ	0xFF4
  6369                           prodl	equ	0xFF3
  6370                           intcon	equ	0xFF2
  6371                           postinc0	equ	0xFEE
  6372                           wreg	equ	0xFE8
  6373                           indf1	equ	0xFE7
  6374                           postdec1	equ	0xFE5
  6375                           fsr1h	equ	0xFE2
  6376                           fsr1l	equ	0xFE1
  6377                           indf2	equ	0xFDF
  6378                           postinc2	equ	0xFDE
  6379                           postdec2	equ	0xFDD
  6380                           fsr2h	equ	0xFDA
  6381                           fsr2l	equ	0xFD9
  6382                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    5
    Data        130
    BSS         689
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     59      95
    BANK0           160      0     144
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ?___ftpack	float  size(1) Largest target is 0

    CANSend@id	PTR unsigned char  size(1) Largest target is 4
		 -> CANSid(BANK0[4]), 

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 0

    ?___ftmul	float  size(1) Largest target is 0

    CANDATAAnalyzing@id	PTR unsigned char  size(1) Largest target is 4
		 -> CANRid(BANK0[4]), 

    CANDATAAnalyzing@dat	PTR unsigned char  size(1) Largest target is 8
		 -> CANRdata(BANK0[8]), 

    EEPROMWrite@num	PTR unsigned char  size(1) Largest target is 1
		 -> eeprom_num(COMRAM[1]), 

    EEPROMWrite@dat	PTR unsigned char  size(2) Largest target is 8
		 -> readwrite(COMRAM[2]), CANRdata(BANK0[8]), 

    EEPROMWrite@addr	PTR unsigned char  size(1) Largest target is 2
		 -> eeprom_addr(COMRAM[2]), 

    EEPROMRead@num	PTR unsigned char  size(1) Largest target is 1
		 -> eeprom_num(COMRAM[1]), 

    EEPROMRead@dat	PTR unsigned char  size(1) Largest target is 8
		 -> yflash_CFG(COMRAM[2]), readwrite(COMRAM[2]), CANSdata(COMRAM[8]), 

    EEPROMRead@addr	PTR unsigned char  size(1) Largest target is 2
		 -> eeprom_addr(COMRAM[2]), 

    CANRecv@dat	PTR unsigned char  size(1) Largest target is 8
		 -> CANRdata(BANK0[8]), 

    CANRecv@dlc	PTR unsigned char  size(1) Largest target is 1
		 -> CANRdlc(COMRAM[1]), 

    CANRecv@id	PTR unsigned char  size(1) Largest target is 4
		 -> CANRid(BANK0[4]), 

    CANSend@dat	PTR unsigned char  size(1) Largest target is 8
		 -> CANSdata(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_CANDATAAnalyzing
    _CANRecv->_GetAddr
    _GetAddr->_GetLampBoardAddr
    _CANInit->_CANSetID
    _delayms->_delayus
    _CANSendConfirm->_CANSend
    _CANWriteID->_EEPROMWrite
    _CANWriteID->_CANSendID
    _CANSendID->_EEPROMRead
    _YFlashNewConfigure->_CalculateTime25msCounter
    _CalculateTime25msCounter->___fttol
    _CANReadVersion->_CANSend
    _Read_YFlash_CFG->_EEPROMRead
    ___ftmul->___ftpack
    ___fttol->___ftmul

Critical Paths under _IntServer in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _IntServer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _IntServer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _IntServer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IntServer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _IntServer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _IntServer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _IntServer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _IntServer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _IntServer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _IntServer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _IntServer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _IntServer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _IntServer in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _IntServer in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _IntServer in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6838
                            _delayms
                           _PORTInit
                         _IntManager
                            _GetAddr
                            _CANInit
                            _CANRecv
                   _CANDATAAnalyzing
                      _HeartbeatTest
 ---------------------------------------------------------------------------------
 (1) _CANRecv                                              3     1      2    1175
                                              5 COMRAM     3     1      2
                            _GetAddr
                            _CANInit
 ---------------------------------------------------------------------------------
 (2) _GetAddr                                              2     2      0     141
                                              3 COMRAM     2     2      0
                   _GetLampBoardAddr
 ---------------------------------------------------------------------------------
 (3) _GetLampBoardAddr                                     3     3      0      93
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _CANInit                                              1     1      0     176
                                              3 COMRAM     1     1      0
                           _CANSetID
                       _CANFilterSet
                          _CANErrClr
 ---------------------------------------------------------------------------------
 (3) _CANFilterSet                                         2     1      1      66
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _CANErrClr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CANSetID                                             3     2      1      66
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _delayms                                              4     2      2      93
                                              4 COMRAM     4     2      2
                            _delayus
 ---------------------------------------------------------------------------------
 (2) _delayus                                              4     2      2      47
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PORTInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IntManager                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANDATAAnalyzing                                     7     5      2    5164
                                             52 COMRAM     7     5      2
                     _CANReadVersion
                     _CANSendConfirm
                          _CANSendID
                         _CANWriteID
                         _EEPROMRead
                            _CANSend
                 _YFlashNewConfigure
                    _Read_YFlash_CFG
 ---------------------------------------------------------------------------------
 (2) _CANSendConfirm                                       1     1      0     684
                                              2 COMRAM     1     1      0
                            _CANSend
 ---------------------------------------------------------------------------------
 (2) _CANWriteID                                           1     1      0     816
                                              4 COMRAM     1     1      0
                        _EEPROMWrite
                          _CANSendID
 ---------------------------------------------------------------------------------
 (3) _CANSendID                                            1     1      0     705
                                              3 COMRAM     1     1      0
                         _EEPROMRead
                            _CANSend
 ---------------------------------------------------------------------------------
 (2) _YFlashNewConfigure                                   0     0      0    1483
                         _EEPROMRead
                        _EEPROMWrite
           _CalculateTime25msCounter
 ---------------------------------------------------------------------------------
 (3) _EEPROMWrite                                          4     1      3      89
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _CalculateTime25msCounter                            12    11      1    1305
                                             40 COMRAM    12    11      1
                            ___ftmul
                            ___fttol
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) _CANReadVersion                                       1     1      0     594
                                              2 COMRAM     1     1      0
                            _CANSend
 ---------------------------------------------------------------------------------
 (2) _CANSend                                              3     1      2     594
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _HeartbeatTest                                        0     0      0      89
                    _Read_YFlash_CFG
 ---------------------------------------------------------------------------------
 (2) _Read_YFlash_CFG                                      0     0      0      89
                         _EEPROMRead
 ---------------------------------------------------------------------------------
 (3) _EEPROMRead                                           3     1      2      89
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             17    11      6     535
                                              8 COMRAM    17    11      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5     209
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     252
                                             25 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     162
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _IntServer                                            0     0      0       0
                      _TMR0IntServer
                      _TMR1IntServer
                        _ADIntServer
 ---------------------------------------------------------------------------------
 (7) _TMR0IntServer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1IntServer                                        0     0      0       0
                        _YellowFlash
 ---------------------------------------------------------------------------------
 (8) _YellowFlash                                          0     0      0       0
                        _LED_On_Disp
                       _LED_Off_Disp
 ---------------------------------------------------------------------------------
 (9) _LED_On_Disp                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _LED_Off_Disp                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADIntServer                                          2     2      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delayms
     _delayus
   _PORTInit
   _IntManager
   _GetAddr
     _GetLampBoardAddr
   _CANInit
     _CANSetID
     _CANFilterSet
     _CANErrClr
   _CANRecv
     _GetAddr
       _GetLampBoardAddr
     _CANInit
       _CANSetID
       _CANFilterSet
       _CANErrClr
   _CANDATAAnalyzing
     _CANReadVersion
       _CANSend
     _CANSendConfirm
       _CANSend
     _CANSendID
       _EEPROMRead
       _CANSend
     _CANWriteID
       _EEPROMWrite
       _CANSendID
         _EEPROMRead
         _CANSend
     _EEPROMRead
     _CANSend
     _YFlashNewConfigure
       _EEPROMRead
       _EEPROMWrite
       _CalculateTime25msCounter
         ___ftmul
           ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
         ___lwdiv
     _Read_YFlash_CFG
       _EEPROMRead
   _HeartbeatTest
     _Read_YFlash_CFG
       _EEPROMRead

 _IntServer (ROOT)
   _TMR0IntServer
   _TMR1IntServer
     _YellowFlash
       _LED_On_Disp
       _LED_Off_Disp
   _ADIntServer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     280      35       17.5%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      90       5       90.0%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     3B      5F       1      100.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       D       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EF       6        0.0%
DATA                 0      0     37C       3        0.0%
CODE                 0      0       0       0        0.0%


HI-TECH Software PICC-18 Macro Assembler V9.80 build 11162 
Symbol Table                                                                                   Sat Aug 02 11:41:54 2014

         __size_of_Read_YFlash_CFG 004A                 __size_of_CANErrClr 0002  
                              l341 1BDE                                l325 1CD0  
                              l352 1466                                l353 1460  
                              l338 1BA0                                l362 0F80  
                              l371 1C80                                l347 1430  
                              l348 142A                                l364 0FF6  
                              l357 1496                                l377 1A94  
                              l561 10F4                                l378 1ACA  
                              l477 12B2                                l581 121C  
                              l583 1246                                l854 1824  
                              _RD2 007C1A                                _RC4 007C14  
                              _RD3 007C1B                                _RC5 007C15  
                              _RC6 007C16                 __size_of_CANSendID 0038  
           __end_of_CANSendConfirm 1D92                                prod 000FF3  
                              wreg 000FE8                    __end_of_CANInit 1BE4  
                     ?_LED_On_Disp 0001                    __end_of_CANRecv 1070  
                  __end_of_CANSend 149C                    ?_CANReadVersion 0001  
                             l1067 1C72                               l3031 10FC  
                             l3033 1100                               l3043 114C  
                             l2411 1B14                               l3029 10F8  
                             l3037 1106                               l2405 1B12  
                             l3231 182C                               l3071 11A6  
                             l3039 113C                               l2423 1B18  
                             l3215 1B68                               l3305 16DE  
                             l3241 1862                               l3233 1830  
                             l3065 118C                               l2441 1B1E  
                             l2417 1B16                               l3331 1728  
                             l3323 1710                               l3307 16E8  
                             l3243 186C                               l3235 1844  
                             l3075 11B2                               l2435 1B1C  
                             l3219 1B8A                               l3333 1734  
                             l3085 11DA                               l3077 11B8  
                             l2429 1B1A                               l3351 1C4A  
                             l3335 1738                               l3327 1720  
                             l3239 1850                               l3263 1536  
                             l3167 1274                               l2455 1B20  
                             l2463 1CC0                               l2471 1CD4  
                             l3361 1C68                               l3353 1C4E  
                             l3281 1586                               l3097 1200  
                             l2465 1CC4                               l2473 1CF0  
                             l3339 174C                               l3291 15A6  
                             l3267 1562                               l2467 1CCA  
                             l3349 1C42                               l3285 158E  
                             l2813 1E3A                               l2397 1AF8  
                             l3295 15AE                               l2911 1D04  
                             l2807 1E88                               l2913 1D08  
                             l2809 1E8C                               l2817 1E4A  
                             l2675 0F7C                               l2829 12B6  
                             l2749 106C                               l2963 161A  
                             l2799 1AD4                               l2975 1660  
                             l2969 163C                               l2897 1D64  
                             _ADIE 007CEE                               _ADIF 007CF6  
                   EEPROMWrite@dat 0002                               _T0CS 007EAD  
                             u1035 12D8                               u1045 130E  
                             u1145 1114                               u1165 115E  
                             u1430 177A                               u1370 1522  
                             u1435 1772                               u1390 154E  
                             u1375 1520                               u1395 154C  
                   EEPROMWrite@num 0001                               _main 1B44  
                     ___ftpack@arg 0001                       ___ftpack@exp 0004  
                             fsr1h 000FE2                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             _rows 0049                               prodh 000FF4  
                             prodl 000FF3                               start 004E  
                    ?_LED_Off_Disp 0001                __size_of_CANWriteID 002C  
                    __CFG_FOSC$HS1 000000                   __end_of_CANSetID 1C32  
                  __end_of_GetAddr 1CF4                __size_of_EEPROMRead 003E  
                     ___ftmul@cntr 0018                       ___ftmul@sign 0019  
                     ___fttol@exp1 0028                       ___fttol@lval 0024  
                            ?_main 0001                      _yflash_status 004C  
                            _EEADR 000F74               GetLampBoardAddr@addr 0003  
                  EEPROMWrite@addr 0004                    __end_of___ftmul 15E8  
                            _T1CON 000FCD                    __end_of___fttol 175E  
                  __end_of___lwdiv 1C7C                              _ERRIF 007BBD  
                    __CFG_WDTEN$ON 000000                              i2l520 004C  
                            i2l518 0036                              i2l493 1DC0  
                            i2l485 1DE8                              i2l494 1DD8  
                            i2l486 1E00                              i2l495 1DC6  
                            i2l487 1DEE                              _TMR0H 000FD7  
                            _TMR1H 000FCF                              _TMR0L 000FD6  
                            _TMR1L 000FCE                              _PORTB 000F81  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                    ?_CANSendConfirm 0001  
                  __end_of_delayms 1E58                    __end_of_delayus 1E9A  
                    __CFG_WRTD$OFF 000000                   __end_of_PORTInit 1EB4  
                            _lines 0047                      ___ftpack@sign 0005  
                   __pbitbssCOMRAM 02F8                              tablat 000FF5  
                            status 000FD8           __end_of_CANDATAAnalyzing 12AA  
                __end_of_CANErrClr 1EDE                     ??_LED_Off_Disp 0001  
                __end_of_CANSendID 1D2C                         _IntManager 1E0E  
             __size_of_EEPROMWrite 005E               __size_of_ADIntServer 0006  
                     __end_of_main 0F06                      CANInit@b_addr 0004  
                        ??_CANInit 0004                          ??_CANRecv 0008  
                        ??_CANSend 0003                             ??_main 003C  
                    ___fttol@sign1 0023                  ??_Read_YFlash_CFG 0004  
                    __activetblptr 000002              __size_of_CANFilterSet 0096  
                           _CANCON 000F6F                             _ADRESH 000FC4  
                           _EEADRH 000F75                             _ADRESL 000FC3  
                           _EEDATA 000F73                             _EECON1 000F7F  
                           _EECON2 000F7E                             _ANCON1 000F5C  
                           _T08BIT 007EAE                             _CANRid 00E8  
                           _CIOCON 000F70                             _CANSid 00EC  
                 __end_of___ftpack 18A0                             i2l3401 003E  
                           i2l3403 0046                             i2l3405 0048  
                           i2l3391 001E                             i2l3383 0008  
                           i2l3393 0026                             i2l3385 0010  
                           i2l2851 1DCE                             i2l3395 002E  
                           i2l3387 0018                             i2l2845 1DF6  
                           i2l3397 0030                             i2l3389 001A  
                           i2l3399 0034                             _INTCON 000FF2  
                        ??_GetAddr 0004                             _RXB0D0 000F66  
                           _RXB0D1 000F67                             _RXB0D2 000F68  
                           _RXB0D3 000F69                             _RXB1D0 000F36  
                           _RXB0D4 000F6A                             _RXB1D1 000F37  
                           _RXB0D5 000F6B                             _RXB1D2 000F38  
                           _RXB0D6 000F6C                             _RXB1D3 000F39  
                           _RXB0D7 000F6D                             _RXB1D4 000F3A  
                           _RXB1D5 000F3B                             _RXB1D6 000F3C  
                           _RXB1D7 000F3D                             _RXB0IF 007BB8  
                           _RXB1IF 007BB9                             _TMR0IE 007F95  
                           _TMR0IF 007F92                             _TMR1IE 007CE8  
                           _TMR1IF 007CF0                     __CFG_WDTPS$256 000000  
                           _TXB0D0 000F26                             _TXB0D1 000F27  
                           _TXB0D2 000F28                             _TXB0D3 000F29  
                           _TMR0ON 007EAF                             _TXB1D0 000F16  
                           _TXB0D4 000F2A                             _TXB1D1 000F17  
                           _TXB0D5 000F2B                             _TXB1D2 000F18  
                           _TXB0D6 000F2C                             _TXB1D3 000F19  
                           _TXB0D7 000F2D                             _TXB2D0 000F06  
                           _TXB1D4 000F1A                             _TXB2D1 000F07  
                           _TXB1D5 000F1B                             _TXB2D2 000F08  
                           _TXB1D6 000F1C                             _TXB2D3 000F09  
                           _TXB1D7 000F1D                             _TXB2D4 000F0A  
                           _TXB2D5 000F0B                             _TXB2D6 000F0C  
                           _TXB2D7 000F0D                             _TXB0IF 007BBA  
                           _TXB1IF 007BBB                             _TXB2IF 007BBC  
                           _SWDTEN 007E88                 __size_of_IntServer 0046  
        __size_of_GetLampBoardAddr 005C                     __CFG_XINST$OFF 000000  
                        CANRecv@id 0008                          CANSend@id 0001  
            __end_of_HeartbeatTest 1D62                          ??___ftmul 000F  
                        ??___fttol 001E                       _CANFilterSet 1782  
                        ??___lwdiv 0005                             clear_0 19A8  
                           clear_1 19BA                             clear_2 19C8  
                           _period 00C0                          ??_delayms 0007  
                        ??_delayus 0003                       ??_CANWriteID 0005  
            ___ftmul@f3_as_product 0015                       ??_EEPROMRead 0003  
                     __pdataCOMRAM 005B        __size_of_YFlashNewConfigure 00B8  
                     __mediumconst 0000  __size_of_CalculateTime25msCounter 00D2  
                           tblptrh 000FF7          ?_CalculateTime25msCounter 0029  
                           tblptrl 000FF6                             tblptru 000FF8  
                        ?_CANSetID 0001               __size_of_LED_On_Disp 0028  
            __end_of_TMR0IntServer 1ED2                         __accesstop 0060  
            __end_of_TMR1IntServer 1E7A                        ?_IntManager 0001  
               __end_of_CANWriteID 1DBE                         ___ftmul@f1 0009  
                       ___ftmul@f2 000C                 __end_of_EEPROMRead 1CBA  
                       ___fttol@f1 001A                     __pcstackCOMRAM 0001  
                     __pidataBANK0 18AA                          ?_PORTInit 0001  
                    ??_YellowFlash 0001                  __end_of_IntServer 004E  
                 ??_CANReadVersion 0003               __end_of_LED_Off_Disp 1DE6  
                       ??_CANSetID 0002                         __pbssBANK0 00DE  
                  __CFG_PLLCFG$OFF 000000          CalculateTime25msCounter@i 0031  
        CalculateTime25msCounter@j 0033                       _t500ms_count 004B  
                  _time_on_counter 0042                         ??_PORTInit 0001  
                 ??_CANSendConfirm 0003                            _ECANCON 000F72  
                          _CANSTAT 000F6E                          ?___ftpack 0001  
                          _CANInit 1B96                            _CANRdlc 005D  
                          _CANRecv 0F06                            _CANSdlc 005B  
                          _CANSend 13F8                            _BRGCON1 000E43  
                          _BRGCON2 000E44                            _BRGCON3 000E45  
                   CANSetID@f_type 0001                         _eeprom_num 005E  
              __size_of_IntManager 0026                            _RXB0DLC 000F65  
                          _RXB1DLC 000F35                            _RXB0CON 000F60  
                          _RXB1CON 000F30                            _TXB0DLC 000F25  
                          _TXB1DLC 000F15                            _TXB0CON 000F20  
                          _TXB2DLC 000F05                            _TXB1CON 000F10  
                          _TXB2CON 000F00                __end_of_YellowFlash 1EC4  
                          _GetAddr 1CBA                  ?_CANDATAAnalyzing 0035  
                 _GetLampBoardAddr 1AE8                            __Hparam 0000  
                          __Lparam 0000                 ??_CANDATAAnalyzing 0037  
                  _Read_YFlash_CFG 1A18                         CANRecv@dat 0006  
                       CANRecv@dlc 0007                          _CANErrClr 1EDC  
                          _t1_cont 00DE                         CANSend@dat 0001  
                       CANSend@dlc 0002                          _CANSendID 1CF4  
                          ___ftmul 150A                            ___fttol 16D4  
                          ___lwdiv 1C32                       __psmallconst 0F00  
                          __pcinit 19A0                         ??___ftpack 0006  
                          _f_r_mod 0044                            __ramtop 0F00  
                          _delayms 1E34                            _delayus 1E7A  
                          __ptext0 1B44                            __ptext1 0F06  
                          __ptext2 1CBA                            __ptext3 1AE8  
                          __ptext4 1B96                            __ptext5 1782  
                          __ptext6 1EDC                            __ptext7 1BE4  
                          __ptext8 1E34                            __ptext9 1E7A  
               CANFilterSet@f_type 0001                            _my_addr 0048  
                          _time5ms 02F9                            _time_on 0D01  
             end_of_initialization 1A0E                            _turnoff 005C  
                    __Lmediumconst 0000                      ??_EEPROMWrite 0004  
                    ??_ADIntServer 0001                CANDATAAnalyzing@dat 0035  
              CANDATAAnalyzing@dlc 0036                         ?_CANErrClr 0001  
                       ?_CANSendID 0001                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE   __end_of_CalculateTime25msCounter 137C  
            __size_of_LED_Off_Disp 0028                      EEPROMRead@dat 0002  
                    EEPROMRead@num 0001                        _YellowFlash 1EB4  
                       _yflash_CFG 0059                  __size_of_CANSetID 004E  
          __end_of_Read_YFlash_CFG 1A62                       ??_IntManager 0001  
                     _LED_Off_Disp 1DBE                        ___ftmul@exp 0014  
                       _switchmode 02F8                __end_of_EEPROMWrite 1AE8  
              __end_of_ADIntServer 1ED8                      __pidataCOMRAM 1ED8  
       __end_of_YFlashNewConfigure 16B6                  __size_of_PORTInit 001A  
              start_initialization 19A0                      ??_LED_On_Disp 0001  
               __end_of_IntManager 1E34                          _IntServer 0008  
                     _cycledutyoff 0060             __size_of_HeartbeatTest 0036  
                     _force_status 0045                        ??_CANErrClr 0001  
                      ??_CANSendID 0004                   _time_off_counter 0040  
                      __pdataBANK0 0060                           ?_CANInit 0001  
                         ?_CANRecv 0006                           ?_CANSend 0001  
           __size_of_TMR0IntServer 000E           _CalculateTime25msCounter 12AA  
                __size_of___ftpack 0088           __end_of_GetLampBoardAddr 1B44  
                      __pbssBIGRAM 0BC1             __size_of_TMR1IntServer 0022  
                      __pbssCOMRAM 003C                         ?_IntServer 0001  
              __end_of_LED_On_Disp 1E0E                           ?_GetAddr 0001  
                 ?_Read_YFlash_CFG 0001                        _EEPROMWrite 1A8A  
                      _ADIntServer 1ED2                   ___lwdiv@dividend 0001  
                        __pintcode 0008                           ?___ftmul 0009  
                         ?___fttol 001A                           ?___lwdiv 0001  
                        _heartbeat 0046                      _HeartbeatTest 1D2C  
                         ?_delayms 0005                           ?_delayus 0001  
                GetAddr@board_type 0004          __size_of_CANDATAAnalyzing 01BC  
           CANFilterSet@board_addr 0002                        __smallconst 0F00  
                         _CANSetID 1BE4                           _CANRdata 00E0  
                         _CANSdata 004D                   ___lwdiv@quotient 0005  
                     CANWriteID@fm 0005                          _readwrite 0057  
          __size_of_CANReadVersion 0078                      _TMR0IntServer 1EC4  
                      _eeprom_addr 0055                          delayms@ms 0005  
                        delayus@us 0001                      _TMR1IntServer 1E58  
                    _board_version 0F00                           i2u160_40 002E  
                         i2u160_41 002C                           i2u161_40 003E  
                         i2u161_41 003C                           i2u162_40 0046  
                         i2u162_41 0044                           i2u157_40 0010  
                         i2u157_41 000E                           i2u158_40 0018  
                         i2u158_41 0016                           i2u159_40 0026  
                         i2u159_41 0024                 CANDATAAnalyzing@id 003B  
                         _RXB0EIDH 000F63                           _RXB0EIDL 000F64  
                         _RXB1EIDH 000F33                           _RXB1EIDL 000F34  
                         _RXB0SIDH 000F61                           _RXB0SIDL 000F62  
                         _RXF0EIDH 000EE2                           _RXB1SIDH 000F31  
                         _RXF0EIDL 000EE3                           _RXB1SIDL 000F32  
                         _RXF1EIDH 000EE6                           _RXF1EIDL 000EE7  
                         _RXF2EIDH 000EEA                           _RXF2EIDL 000EEB  
                         _RXF3EIDH 000EEE                           _RXF3EIDL 000EEF  
                         _RXF4EIDH 000EF2                           _RXF4EIDL 000EF3  
                         _RXF5EIDH 000EF6                           _RXF5EIDL 000EF7  
                         _RXF0SIDH 000EE0                           _RXF0SIDL 000EE1  
                         _TXB0EIDH 000F23                           _RXF1SIDH 000EE4  
                         _TXB0EIDL 000F24                           _RXF1SIDL 000EE5  
                         _TXB1EIDH 000F13                           _RXF2SIDH 000EE8  
                         _TXB1EIDL 000F14                           _RXF2SIDL 000EE9  
                         _TXB2EIDH 000F03                           _RXF3SIDH 000EEC  
                         _TXB2EIDL 000F04                           _RXF3SIDL 000EED  
                         _RXF4SIDH 000EF0                           _RXF4SIDL 000EF1  
                         _RXF5SIDH 000EF4                           _RXF5SIDL 000EF5  
                    ?_CANFilterSet 0001                           _RXM0EIDH 000EFA  
                         _RXM0EIDL 000EFB                           _TXB0SIDH 000F21  
                         _RXM1EIDH 000EFE                           _TXB0SIDL 000F22  
                         _RXM1EIDL 000EFF                     ?_HeartbeatTest 0001  
                         _TXB1SIDH 000F11                           _TXB1SIDL 000F12  
                         _TXB2SIDH 000F01                           _TXB2SIDL 000F02  
                         _RXM0SIDH 000EF8                           _RXM0SIDL 000EF9  
                         _RXM1SIDH 000EFC                           _RXM1SIDL 000EFD  
                         _PORTInit 1E9A                   __CFG_SOSCSEL$DIG 000000  
                 __size_of_CANInit 004E                       ?_YellowFlash 0001  
                 __size_of_CANRecv 016A                   __size_of_CANSend 00A4  
     CalculateTime25msCounter@line 0029                 CANSetID@board_addr 0003  
                      _LED_On_Disp 1DE6                        ??_IntServer 0001  
          __size_of_CANSendConfirm 0030                          copy_data0 19E2  
                        copy_data1 1A02                     ?_TMR0IntServer 0001  
                      _cycledutyon 0090                   __size_of_GetAddr 003A  
                   ?_TMR1IntServer 0001                           __Hrparam 0000  
                         __Lrparam 0000                        CANSendID@sm 0004  
                   ??_CANFilterSet 0002                   __size_of___ftmul 00DE  
                 __size_of___fttol 008A                   __size_of___lwdiv 004A  
                         ___ftpack 1818                   __size_of_delayms 0024  
                 __size_of_delayus 0020                         _CANWriteID 1D92  
                    _time_counters 003E                         _EEPROMRead 1C7C  
                  ___lwdiv@divisor 0003                    ___lwdiv@counter 0007  
                         __ptext10 1E9A                           __ptext11 1E0E  
                         __ptext20 13F8                           __ptext12 10EE  
                         __ptext21 1D2C                           __ptext13 1D62  
                         __ptext30 1E58                           __ptext22 1A18  
                         __ptext14 1D92                           __ptext31 1EB4  
                         __ptext23 1C7C                           __ptext15 1CF4  
                         __ptext32 1DE6                           __ptext24 150A  
                         __ptext16 15FE                           __ptext33 1DBE  
                         __ptext25 1818                           __ptext17 1A8A  
                         __ptext34 1ED2                           __ptext26 16D4  
                         __ptext18 12AA                           __ptext27 1C32  
                         __ptext19 1928                           __ptext29 1EC4  
               _YFlashNewConfigure 15FE                      __size_of_main F3C2  
              ?_YFlashNewConfigure 0001                           delayms@i 0007  
                         delayus@i 0003         ??_CalculateTime25msCounter 002A  
                  ??_HeartbeatTest 0004                           _time_off 0BC1  
                         _run_mode 004A        CalculateTime25msCounter@row 0030  
                GetLampBoardAddr@i 0001                   _CANDATAAnalyzing 10EE  
             ??_YFlashNewConfigure 0035                  ?_GetLampBoardAddr 0001  
                       GetAddr@rel 0005                 ??_GetLampBoardAddr 0001  
                  ??_TMR0IntServer 0001                       _time_counter 003C  
                         intlevel2 0000                     _CANReadVersion 1928  
                  ??_TMR1IntServer 0001                       ?_EEPROMWrite 0001  
                     ?_ADIntServer 0001                    CANSendConfirm@i 0003  
                      ?_CANWriteID 0001                        ?_EEPROMRead 0001  
             __size_of_YellowFlash 0010                     _CANSendConfirm 1D62  
           __end_of_CANReadVersion 19A0                     EEPROMRead@addr 0003  
             __end_of_CANFilterSet 1818  
