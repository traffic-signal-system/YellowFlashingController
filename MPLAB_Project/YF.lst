

HI-TECH Software PIC18 PRO Macro Assembler V9.80 build 11162 
                                                                                               Thu May 29 15:42:24 2014

HI-TECH Software Omniscient Code Generator (PRO mode) build 11162
     1                           	processor	18F45K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52                           	psect	pa_nodes,global,class=CODE,delta=1
    53  0000                     prodh	equ	0xFF4
    54                           prodl	equ	0xFF3
    55                           intcon	equ	0xFF2
    56                           wreg	equ	0xFE8
    57                           indf1	equ	0xFE7
    58                           fsr1h	equ	0xFE2
    59                           fsr1l	equ	0xFE1
    60                           indf2	equ	0xFDF
    61                           postinc2	equ	0xFDE
    62                           postdec2	equ	0xFDD
    63                           fsr2h	equ	0xFDA
    64                           fsr2l	equ	0xFD9
    65                           status	equ	0xFD8
    66                           
    67                           	psect	idataCOMRAM
    68  000FCC                     __pidataCOMRAM:
    69                           	opt stack 0
    70                           
    71                           ;initializer for _CANSdlc
    72  000FCC  08                 	db	8
    73                           
    74                           ;initializer for _turnoff
    75  000FCD  01                 	db	1
    76                           
    77                           ;initializer for _CANRdlc
    78  000FCE  08                 	db	8
    79                           
    80                           ;initializer for _eeprom_num
    81  000FCF  04                 	db	4
    82                           prodh	equ	0xFF4
    83                           prodl	equ	0xFF3
    84                           intcon	equ	0xFF2
    85                           wreg	equ	0xFE8
    86                           indf1	equ	0xFE7
    87                           fsr1h	equ	0xFE2
    88                           fsr1l	equ	0xFE1
    89                           indf2	equ	0xFDF
    90                           postinc2	equ	0xFDE
    91                           postdec2	equ	0xFDD
    92                           fsr2h	equ	0xFDA
    93                           fsr2l	equ	0xFD9
    94                           status	equ	0xFD8
    95                           
    96                           	psect	idataBANK0
    97  000A82                     __pidataBANK0:
    98                           	opt stack 0
    99                           
   100                           ;initializer for _cycledutyoff
   101  000A82  00                 	db	0
   102  000A83  80                 	db	128
   103  000A84  3F                 	db	63
   104  000A85  00                 	db	0
   105  000A86  70                 	db	112
   106  000A87  3F                 	db	63
   107  000A88  00                 	db	0
   108  000A89  60                 	db	96
   109  000A8A  3F                 	db	63
   110  000A8B  00                 	db	0
   111  000A8C  50                 	db	80
   112  000A8D  3F                 	db	63
   113  000A8E  00                 	db	0
   114  000A8F  40                 	db	64
   115  000A90  3F                 	db	63
   116  000A91  00                 	db	0
   117  000A92  30                 	db	48
   118  000A93  3F                 	db	63
   119  000A94  00                 	db	0
   120  000A95  20                 	db	32
   121  000A96  3F                 	db	63
   122  000A97  00                 	db	0
   123  000A98  10                 	db	16
   124  000A99  3F                 	db	63
   125  000A9A  00                 	db	0
   126  000A9B  00                 	db	0
   127  000A9C  3F                 	db	63
   128  000A9D  00                 	db	0
   129  000A9E  E0                 	db	224
   130  000A9F  3E                 	db	62
   131  000AA0  00                 	db	0
   132  000AA1  C0                 	db	192
   133  000AA2  3E                 	db	62
   134  000AA3  00                 	db	0
   135  000AA4  A0                 	db	160
   136  000AA5  3E                 	db	62
   137  000AA6  00                 	db	0
   138  000AA7  80                 	db	128
   139  000AA8  3E                 	db	62
   140  000AA9  00                 	db	0
   141  000AAA  40                 	db	64
   142  000AAB  3E                 	db	62
   143  000AAC  00                 	db	0
   144  000AAD  00                 	db	0
   145  000AAE  3E                 	db	62
   146  000AAF  00                 	db	0
   147  000AB0  00                 	db	0
   148  000AB1  00                 	db	0
   149                           
   150                           ;initializer for _cycledutyon
   151  000AB2  00                 	db	0
   152  000AB3  00                 	db	0
   153  000AB4  00                 	db	0
   154  000AB5  00                 	db	0
   155  000AB6  80                 	db	128
   156  000AB7  3D                 	db	61
   157  000AB8  00                 	db	0
   158  000AB9  00                 	db	0
   159  000ABA  3E                 	db	62
   160  000ABB  00                 	db	0
   161  000ABC  40                 	db	64
   162  000ABD  3E                 	db	62
   163  000ABE  00                 	db	0
   164  000ABF  80                 	db	128
   165  000AC0  3E                 	db	62
   166  000AC1  00                 	db	0
   167  000AC2  A0                 	db	160
   168  000AC3  3E                 	db	62
   169  000AC4  00                 	db	0
   170  000AC5  C0                 	db	192
   171  000AC6  3E                 	db	62
   172  000AC7  00                 	db	0
   173  000AC8  E0                 	db	224
   174  000AC9  3E                 	db	62
   175  000ACA  00                 	db	0
   176  000ACB  00                 	db	0
   177  000ACC  3F                 	db	63
   178  000ACD  00                 	db	0
   179  000ACE  10                 	db	16
   180  000ACF  3F                 	db	63
   181  000AD0  00                 	db	0
   182  000AD1  20                 	db	32
   183  000AD2  3F                 	db	63
   184  000AD3  00                 	db	0
   185  000AD4  30                 	db	48
   186  000AD5  3F                 	db	63
   187  000AD6  00                 	db	0
   188  000AD7  40                 	db	64
   189  000AD8  3F                 	db	63
   190  000AD9  00                 	db	0
   191  000ADA  50                 	db	80
   192  000ADB  3F                 	db	63
   193  000ADC  00                 	db	0
   194  000ADD  60                 	db	96
   195  000ADE  3F                 	db	63
   196  000ADF  00                 	db	0
   197  000AE0  80                 	db	128
   198  000AE1  3F                 	db	63
   199                           
   200                           ;initializer for _period
   201  000AE2  40                 	db	64
   202  000AE3  9C                 	db	156
   203  000AE4  45                 	db	69
   204  000AE5  50                 	db	80
   205  000AE6  50                 	db	80
   206  000AE7  45                 	db	69
   207  000AE8  40                 	db	64
   208  000AE9  1C                 	db	28
   209  000AEA  45                 	db	69
   210  000AEB  00                 	db	0
   211  000AEC  FA                 	db	250
   212  000AED  44                 	db	68
   213  000AEE  00                 	db	0
   214  000AEF  7A                 	db	122
   215  000AF0  44                 	db	68
   216  000AF1  AD                 	db	173
   217  000AF2  26                 	db	38
   218  000AF3  44                 	db	68
   219  000AF4  00                 	db	0
   220  000AF5  FA                 	db	250
   221  000AF6  43                 	db	67
   222  000AF7  00                 	db	0
   223  000AF8  C8                 	db	200
   224  000AF9  43                 	db	67
   225  000AFA  A6                 	db	166
   226  000AFB  A6                 	db	166
   227  000AFC  43                 	db	67
   228  000AFD  00                 	db	0
   229  000AFE  48                 	db	72
   230  000AFF  43                 	db	67
   231  0000                     _ADRESH	set	4036
   232  0000                     _ADRESL	set	4035
   233  0000                     _ANCON1	set	3932
   234  0000                     _BRGCON1	set	3651
   235  0000                     _BRGCON2	set	3652
   236  0000                     _BRGCON3	set	3653
   237  0000                     _CANCON	set	3951
   238  0000                     _CANSTAT	set	3950
   239  0000                     _CIOCON	set	3952
   240  0000                     _ECANCON	set	3954
   241  0000                     _EEADR	set	3956
   242  0000                     _EEADRH	set	3957
   243  0000                     _EECON1	set	3967
   244  0000                     _EECON2	set	3966
   245  0000                     _EEDATA	set	3955
   246  0000                     _INTCON	set	4082
   247  0000                     _PORTB	set	3969
   248  0000                     _RXB0CON	set	3936
   249  0000                     _RXB0D0	set	3942
   250  0000                     _RXB0D1	set	3943
   251  0000                     _RXB0D2	set	3944
   252  0000                     _RXB0D3	set	3945
   253  0000                     _RXB0D4	set	3946
   254  0000                     _RXB0D5	set	3947
   255  0000                     _RXB0D6	set	3948
   256  0000                     _RXB0D7	set	3949
   257  0000                     _RXB0DLC	set	3941
   258  0000                     _RXB0EIDH	set	3939
   259  0000                     _RXB0EIDL	set	3940
   260  0000                     _RXB0SIDH	set	3937
   261  0000                     _RXB0SIDL	set	3938
   262  0000                     _RXB1CON	set	3888
   263  0000                     _RXB1D0	set	3894
   264  0000                     _RXB1D1	set	3895
   265  0000                     _RXB1D2	set	3896
   266  0000                     _RXB1D3	set	3897
   267  0000                     _RXB1D4	set	3898
   268  0000                     _RXB1D5	set	3899
   269  0000                     _RXB1D6	set	3900
   270  0000                     _RXB1D7	set	3901
   271  0000                     _RXB1DLC	set	3893
   272  0000                     _RXB1EIDH	set	3891
   273  0000                     _RXB1EIDL	set	3892
   274  0000                     _RXB1SIDH	set	3889
   275  0000                     _RXB1SIDL	set	3890
   276  0000                     _RXF0EIDH	set	3810
   277  0000                     _RXF0EIDL	set	3811
   278  0000                     _RXF0SIDH	set	3808
   279  0000                     _RXF0SIDL	set	3809
   280  0000                     _RXF1EIDH	set	3814
   281  0000                     _RXF1EIDL	set	3815
   282  0000                     _RXF1SIDH	set	3812
   283  0000                     _RXF1SIDL	set	3813
   284  0000                     _RXF2EIDH	set	3818
   285  0000                     _RXF2EIDL	set	3819
   286  0000                     _RXF2SIDH	set	3816
   287  0000                     _RXF2SIDL	set	3817
   288  0000                     _RXF3EIDH	set	3822
   289  0000                     _RXF3EIDL	set	3823
   290  0000                     _RXF3SIDH	set	3820
   291  0000                     _RXF3SIDL	set	3821
   292  0000                     _RXF4EIDH	set	3826
   293  0000                     _RXF4EIDL	set	3827
   294  0000                     _RXF4SIDH	set	3824
   295  0000                     _RXF4SIDL	set	3825
   296  0000                     _RXF5EIDH	set	3830
   297  0000                     _RXF5EIDL	set	3831
   298  0000                     _RXF5SIDH	set	3828
   299  0000                     _RXF5SIDL	set	3829
   300  0000                     _RXM0EIDH	set	3834
   301  0000                     _RXM0EIDL	set	3835
   302  0000                     _RXM0SIDH	set	3832
   303  0000                     _RXM0SIDL	set	3833
   304  0000                     _RXM1EIDH	set	3838
   305  0000                     _RXM1EIDL	set	3839
   306  0000                     _RXM1SIDH	set	3836
   307  0000                     _RXM1SIDL	set	3837
   308  0000                     _T1CON	set	4045
   309  0000                     _TMR0H	set	4055
   310  0000                     _TMR0L	set	4054
   311  0000                     _TMR1H	set	4047
   312  0000                     _TMR1L	set	4046
   313  0000                     _TRISB	set	3987
   314  0000                     _TRISC	set	3988
   315  0000                     _TRISD	set	3989
   316  0000                     _TXB0CON	set	3872
   317  0000                     _TXB0D0	set	3878
   318  0000                     _TXB0D1	set	3879
   319  0000                     _TXB0D2	set	3880
   320  0000                     _TXB0D3	set	3881
   321  0000                     _TXB0D4	set	3882
   322  0000                     _TXB0D5	set	3883
   323  0000                     _TXB0D6	set	3884
   324  0000                     _TXB0D7	set	3885
   325  0000                     _TXB0DLC	set	3877
   326  0000                     _TXB0EIDH	set	3875
   327  0000                     _TXB0EIDL	set	3876
   328  0000                     _TXB0SIDH	set	3873
   329  0000                     _TXB0SIDL	set	3874
   330  0000                     _TXB1CON	set	3856
   331  0000                     _TXB1D0	set	3862
   332  0000                     _TXB1D1	set	3863
   333  0000                     _TXB1D2	set	3864
   334  0000                     _TXB1D3	set	3865
   335  0000                     _TXB1D4	set	3866
   336  0000                     _TXB1D5	set	3867
   337  0000                     _TXB1D6	set	3868
   338  0000                     _TXB1D7	set	3869
   339  0000                     _TXB1DLC	set	3861
   340  0000                     _TXB1EIDH	set	3859
   341  0000                     _TXB1EIDL	set	3860
   342  0000                     _TXB1SIDH	set	3857
   343  0000                     _TXB1SIDL	set	3858
   344  0000                     _TXB2CON	set	3840
   345  0000                     _TXB2D0	set	3846
   346  0000                     _TXB2D1	set	3847
   347  0000                     _TXB2D2	set	3848
   348  0000                     _TXB2D3	set	3849
   349  0000                     _TXB2D4	set	3850
   350  0000                     _TXB2D5	set	3851
   351  0000                     _TXB2D6	set	3852
   352  0000                     _TXB2D7	set	3853
   353  0000                     _TXB2DLC	set	3845
   354  0000                     _TXB2EIDH	set	3843
   355  0000                     _TXB2EIDL	set	3844
   356  0000                     _TXB2SIDH	set	3841
   357  0000                     _TXB2SIDL	set	3842
   358  0000                     _ADIE	set	31982
   359  0000                     _ADIF	set	31990
   360  0000                     _ERRIF	set	31677
   361  0000                     _RC4	set	31764
   362  0000                     _RC5	set	31765
   363  0000                     _RC6	set	31766
   364  0000                     _RD2	set	31770
   365  0000                     _RD3	set	31771
   366  0000                     _RXB0IF	set	31672
   367  0000                     _RXB1IF	set	31673
   368  0000                     _SWDTEN	set	32392
   369  0000                     _T08BIT	set	32430
   370  0000                     _T0CS	set	32429
   371  0000                     _TMR0IE	set	32661
   372  0000                     _TMR0IF	set	32658
   373  0000                     _TMR0ON	set	32431
   374  0000                     _TMR1IE	set	31976
   375  0000                     _TMR1IF	set	31984
   376  0000                     _TXB0IF	set	31674
   377  0000                     _TXB1IF	set	31675
   378  0000                     _TXB2IF	set	31676
   379                           
   380                           ; #config settings
   381  0000                     prodh	equ	0xFF4
   382                           prodl	equ	0xFF3
   383                           intcon	equ	0xFF2
   384                           wreg	equ	0xFE8
   385                           indf1	equ	0xFE7
   386                           fsr1h	equ	0xFE2
   387                           fsr1l	equ	0xFE1
   388                           indf2	equ	0xFDF
   389                           postinc2	equ	0xFDE
   390                           postdec2	equ	0xFDD
   391                           fsr2h	equ	0xFDA
   392                           fsr2l	equ	0xFD9
   393                           status	equ	0xFD8
   394                           
   395                           	psect	cinit
   396  000B00                     __pcinit:
   397                           	opt stack 0
   398  000B00                     start_initialization:
   399                           	opt stack 0
   400                           
   401                           ; Clear objects allocated to BIGRAM (640 bytes)
   402  000B00  EE00  F0F2         	lfsr	0,__pbssBIGRAM
   403  000B04  EE12 F080          	lfsr	1,640
   404  000B08                     clear_0:
   405  000B08  6AEE               	clrf	postinc0,c
   406  000B0A  50E5               	movf	postdec1,w,c
   407  000B0C  50E1               	movf	fsr1l,w,c
   408  000B0E  E1FC               	bnz	clear_0
   409  000B10  50E2               	movf	fsr1h,w,c
   410  000B12  E1FA               	bnz	clear_0
   411                           
   412                           ; Clear objects allocated to BANK0 (20 bytes)
   413  000B14  EE00  F0DE         	lfsr	0,__pbssBANK0
   414  000B18  0E14               	movlw	20
   415  000B1A                     clear_1:
   416  000B1A  6AEE               	clrf	postinc0,c
   417  000B1C  06E8               	decf	wreg,f,c
   418  000B1E  E1FD               	bnz	clear_1
   419                           
   420                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   421  000B20  6A5D               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   422                           
   423                           ; Clear objects allocated to COMRAM (29 bytes)
   424  000B22  EE00  F03C         	lfsr	0,__pbssCOMRAM
   425  000B26  0E1D               	movlw	29
   426  000B28                     clear_2:
   427  000B28  6AEE               	clrf	postinc0,c
   428  000B2A  06E8               	decf	wreg,f,c
   429  000B2C  E1FD               	bnz	clear_2
   430                           
   431                           ; Initialize objects allocated to BANK0 (126 bytes)
   432                           ; load TBLPTR registers with __pidataBANK0
   433  000B2E  0E82               	movlw	low __pidataBANK0
   434  000B30  6EF6               	movwf	tblptrl,c
   435  000B32  0E0A               	movlw	high __pidataBANK0
   436  000B34  6EF7               	movwf	tblptrh,c
   437  000B36  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   438  000B38  6EF8               	movwf	tblptru,c
   439  000B3A  EE00  F060         	lfsr	0,__pdataBANK0
   440  000B3E  EE10 F07E          	lfsr	1,126
   441  000B42                     copy_data0:
   442  000B42  0009               	tblrd		*+
   443  000B44  CFF5 FFEE          	movff	tablat,postinc0
   444  000B48  50E5               	movf	postdec1,w,c
   445  000B4A  50E1               	movf	fsr1l,w,c
   446  000B4C  E1FA               	bnz	copy_data0
   447                           
   448                           ; Initialize objects allocated to COMRAM (4 bytes)
   449                           ; load TBLPTR registers with __pidataCOMRAM
   450  000B4E  0ECC               	movlw	low __pidataCOMRAM
   451  000B50  6EF6               	movwf	tblptrl,c
   452  000B52  0E0F               	movlw	high __pidataCOMRAM
   453  000B54  6EF7               	movwf	tblptrh,c
   454  000B56  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   455  000B58  6EF8               	movwf	tblptru,c
   456  000B5A  EE00  F059         	lfsr	0,__pdataCOMRAM
   457  000B5E  EE10 F004          	lfsr	1,4
   458  000B62                     copy_data1:
   459  000B62  0009               	tblrd		*+
   460  000B64  CFF5 FFEE          	movff	tablat,postinc0
   461  000B68  50E5               	movf	postdec1,w,c
   462  000B6A  50E1               	movf	fsr1l,w,c
   463  000B6C  E1FA               	bnz	copy_data1
   464  000B6E                     end_of_initialization:
   465                           	opt stack 0
   466  000B6E  0100               	movlb	0
   467  000B70  EF17  F006         	goto	_main	;jump to C main() function
   468                           tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           tblptrl	equ	0xFF6
   471                           tablat	equ	0xFF5
   472                           prodh	equ	0xFF4
   473                           prodl	equ	0xFF3
   474                           intcon	equ	0xFF2
   475                           postinc0	equ	0xFEE
   476                           wreg	equ	0xFE8
   477                           indf1	equ	0xFE7
   478                           postdec1	equ	0xFE5
   479                           fsr1h	equ	0xFE2
   480                           fsr1l	equ	0xFE1
   481                           indf2	equ	0xFDF
   482                           postinc2	equ	0xFDE
   483                           postdec2	equ	0xFDD
   484                           fsr2h	equ	0xFDA
   485                           fsr2l	equ	0xFD9
   486                           status	equ	0xFD8
   487                           
   488                           	psect	bitbssCOMRAM
   489  0002E8                     __pbitbssCOMRAM:
   490                           	opt stack 0
   491  0002E8                     _switchmode:
   492                           	opt stack 0
   493  0002E8                     	ds	1
   494  0002E9                     _time5ms:
   495                           	opt stack 0
   496  0002E9                     	ds	1
   497                           tblptru	equ	0xFF8
   498                           tblptrh	equ	0xFF7
   499                           tblptrl	equ	0xFF6
   500                           tablat	equ	0xFF5
   501                           prodh	equ	0xFF4
   502                           prodl	equ	0xFF3
   503                           intcon	equ	0xFF2
   504                           postinc0	equ	0xFEE
   505                           wreg	equ	0xFE8
   506                           indf1	equ	0xFE7
   507                           postdec1	equ	0xFE5
   508                           fsr1h	equ	0xFE2
   509                           fsr1l	equ	0xFE1
   510                           indf2	equ	0xFDF
   511                           postinc2	equ	0xFDE
   512                           postdec2	equ	0xFDD
   513                           fsr2h	equ	0xFDA
   514                           fsr2l	equ	0xFD9
   515                           status	equ	0xFD8
   516                           
   517                           	psect	bssCOMRAM
   518  00003C                     __pbssCOMRAM:
   519                           	opt stack 0
   520  00003C                     _t1_cont:
   521                           	opt stack 0
   522  00003C                     	ds	2
   523  00003E                     _time_counter:
   524                           	opt stack 0
   525  00003E                     	ds	2
   526  000040                     _time_counters:
   527                           	opt stack 0
   528  000040                     	ds	2
   529  000042                     _time_off_counter:
   530                           	opt stack 0
   531  000042                     	ds	2
   532  000044                     _time_on_counter:
   533                           	opt stack 0
   534  000044                     	ds	2
   535  000046                     _f_r_mod:
   536                           	opt stack 0
   537  000046                     	ds	1
   538  000047                     _force_status:
   539                           	opt stack 0
   540  000047                     	ds	1
   541  000048                     _heartbeat:
   542                           	opt stack 0
   543  000048                     	ds	1
   544  000049                     _lines:
   545                           	opt stack 0
   546  000049                     	ds	1
   547  00004A                     _my_addr:
   548                           	opt stack 0
   549  00004A                     	ds	1
   550  00004B                     _rows:
   551                           	opt stack 0
   552  00004B                     	ds	1
   553  00004C                     _run_mode:
   554                           	opt stack 0
   555  00004C                     	ds	1
   556  00004D                     _t500ms_count:
   557                           	opt stack 0
   558  00004D                     	ds	1
   559  00004E                     _yflash_status:
   560                           	opt stack 0
   561  00004E                     	ds	1
   562  00004F                     _CANSid:
   563                           	opt stack 0
   564  00004F                     	ds	4
   565  000053                     _eeprom_addr:
   566                           	opt stack 0
   567  000053                     	ds	2
   568  000055                     _readwrite:
   569                           	opt stack 0
   570  000055                     	ds	2
   571  000057                     _yflash_CFG:
   572                           	opt stack 0
   573  000057                     	ds	2
   574                           tblptru	equ	0xFF8
   575                           tblptrh	equ	0xFF7
   576                           tblptrl	equ	0xFF6
   577                           tablat	equ	0xFF5
   578                           prodh	equ	0xFF4
   579                           prodl	equ	0xFF3
   580                           intcon	equ	0xFF2
   581                           postinc0	equ	0xFEE
   582                           wreg	equ	0xFE8
   583                           indf1	equ	0xFE7
   584                           postdec1	equ	0xFE5
   585                           fsr1h	equ	0xFE2
   586                           fsr1l	equ	0xFE1
   587                           indf2	equ	0xFDF
   588                           postinc2	equ	0xFDE
   589                           postdec2	equ	0xFDD
   590                           fsr2h	equ	0xFDA
   591                           fsr2l	equ	0xFD9
   592                           status	equ	0xFD8
   593                           
   594                           	psect	dataCOMRAM
   595  000059                     __pdataCOMRAM:
   596                           	opt stack 0
   597  000059                     _CANSdlc:
   598                           	opt stack 0
   599  000059                     	ds	1
   600  00005A                     _turnoff:
   601                           	opt stack 0
   602  00005A                     	ds	1
   603  00005B                     _CANRdlc:
   604                           	opt stack 0
   605  00005B                     	ds	1
   606  00005C                     _eeprom_num:
   607                           	opt stack 0
   608  00005C                     	ds	1
   609                           tblptru	equ	0xFF8
   610                           tblptrh	equ	0xFF7
   611                           tblptrl	equ	0xFF6
   612                           tablat	equ	0xFF5
   613                           prodh	equ	0xFF4
   614                           prodl	equ	0xFF3
   615                           intcon	equ	0xFF2
   616                           postinc0	equ	0xFEE
   617                           wreg	equ	0xFE8
   618                           indf1	equ	0xFE7
   619                           postdec1	equ	0xFE5
   620                           fsr1h	equ	0xFE2
   621                           fsr1l	equ	0xFE1
   622                           indf2	equ	0xFDF
   623                           postinc2	equ	0xFDE
   624                           postdec2	equ	0xFDD
   625                           fsr2h	equ	0xFDA
   626                           fsr2l	equ	0xFD9
   627                           status	equ	0xFD8
   628                           
   629                           	psect	bssBANK0
   630  0000DE                     __pbssBANK0:
   631                           	opt stack 0
   632  0000DE                     _CANRdata:
   633                           	opt stack 0
   634  0000DE                     	ds	8
   635  0000E6                     _CANSdata:
   636                           	opt stack 0
   637  0000E6                     	ds	8
   638  0000EE                     _CANRid:
   639                           	opt stack 0
   640  0000EE                     	ds	4
   641                           tblptru	equ	0xFF8
   642                           tblptrh	equ	0xFF7
   643                           tblptrl	equ	0xFF6
   644                           tablat	equ	0xFF5
   645                           prodh	equ	0xFF4
   646                           prodl	equ	0xFF3
   647                           intcon	equ	0xFF2
   648                           postinc0	equ	0xFEE
   649                           wreg	equ	0xFE8
   650                           indf1	equ	0xFE7
   651                           postdec1	equ	0xFE5
   652                           fsr1h	equ	0xFE2
   653                           fsr1l	equ	0xFE1
   654                           indf2	equ	0xFDF
   655                           postinc2	equ	0xFDE
   656                           postdec2	equ	0xFDD
   657                           fsr2h	equ	0xFDA
   658                           fsr2l	equ	0xFD9
   659                           status	equ	0xFD8
   660                           
   661                           	psect	dataBANK0
   662  000060                     __pdataBANK0:
   663                           	opt stack 0
   664  000060                     _cycledutyoff:
   665                           	opt stack 0
   666  000060                     	ds	48
   667  000090                     _cycledutyon:
   668                           	opt stack 0
   669  000090                     	ds	48
   670  0000C0                     _period:
   671                           	opt stack 0
   672  0000C0                     	ds	30
   673                           tblptru	equ	0xFF8
   674                           tblptrh	equ	0xFF7
   675                           tblptrl	equ	0xFF6
   676                           tablat	equ	0xFF5
   677                           prodh	equ	0xFF4
   678                           prodl	equ	0xFF3
   679                           intcon	equ	0xFF2
   680                           postinc0	equ	0xFEE
   681                           wreg	equ	0xFE8
   682                           indf1	equ	0xFE7
   683                           postdec1	equ	0xFE5
   684                           fsr1h	equ	0xFE2
   685                           fsr1l	equ	0xFE1
   686                           indf2	equ	0xFDF
   687                           postinc2	equ	0xFDE
   688                           postdec2	equ	0xFDD
   689                           fsr2h	equ	0xFDA
   690                           fsr2l	equ	0xFD9
   691                           status	equ	0xFD8
   692                           
   693                           	psect	bssBIGRAM
   694  0000F2                     __pbssBIGRAM:
   695                           	opt stack 0
   696  0000F2                     _time_off:
   697                           	opt stack 0
   698  0000F2                     	ds	320
   699  000232                     _time_on:
   700                           	opt stack 0
   701  000232                     	ds	320
   702                           tblptru	equ	0xFF8
   703                           tblptrh	equ	0xFF7
   704                           tblptrl	equ	0xFF6
   705                           tablat	equ	0xFF5
   706                           prodh	equ	0xFF4
   707                           prodl	equ	0xFF3
   708                           intcon	equ	0xFF2
   709                           postinc0	equ	0xFEE
   710                           wreg	equ	0xFE8
   711                           indf1	equ	0xFE7
   712                           postdec1	equ	0xFE5
   713                           fsr1h	equ	0xFE2
   714                           fsr1l	equ	0xFE1
   715                           indf2	equ	0xFDF
   716                           postinc2	equ	0xFDE
   717                           postdec2	equ	0xFDD
   718                           fsr2h	equ	0xFDA
   719                           fsr2l	equ	0xFD9
   720                           status	equ	0xFD8
   721                           
   722                           	psect	cstackCOMRAM
   723  000001                     __pcstackCOMRAM:
   724                           	opt stack 0
   725  000001                     ??_GetLampBoardAddr:
   726                           	opt stack 0
   727  000001                     ?_CANFilterSet:
   728                           	opt stack 0
   729  000001                     ?_CANErrClr:
   730                           	opt stack 0
   731  000001                     ??_CANErrClr:
   732                           	opt stack 0
   733  000001                     ?_CANSetID:
   734                           	opt stack 0
   735  000001                     ?_CANInit:
   736                           	opt stack 0
   737  000001                     ?_EEPROMRead:
   738                           	opt stack 0
   739  000001                     ?_EEPROMWrite:
   740                           	opt stack 0
   741  000001                     ?_delayus:
   742                           	opt stack 0
   743  000001                     ?_LED_On_Disp:
   744                           	opt stack 0
   745  000001                     ??_LED_On_Disp:
   746                           	opt stack 0
   747  000001                     ?_LED_Off_Disp:
   748                           	opt stack 0
   749  000001                     ??_LED_Off_Disp:
   750                           	opt stack 0
   751  000001                     ?_YellowFlash:
   752                           	opt stack 0
   753  000001                     ??_YellowFlash:
   754                           	opt stack 0
   755  000001                     ?_TMR0IntServer:
   756                           	opt stack 0
   757  000001                     ??_TMR0IntServer:
   758                           	opt stack 0
   759  000001                     ?_TMR1IntServer:
   760                           	opt stack 0
   761  000001                     ??_TMR1IntServer:
   762                           	opt stack 0
   763  000001                     ?_ADIntServer:
   764                           	opt stack 0
   765  000001                     ??_ADIntServer:
   766                           	opt stack 0
   767  000001                     ?_IntServer:
   768                           	opt stack 0
   769  000001                     ??_IntServer:
   770                           	opt stack 0
   771  000001                     ?_PORTInit:
   772                           	opt stack 0
   773  000001                     ??_PORTInit:
   774                           	opt stack 0
   775  000001                     ?_IntManager:
   776                           	opt stack 0
   777  000001                     ??_IntManager:
   778                           	opt stack 0
   779  000001                     ?_CANSendConfirm:
   780                           	opt stack 0
   781  000001                     ?_CANSendID:
   782                           	opt stack 0
   783  000001                     ?_CANWriteID:
   784                           	opt stack 0
   785  000001                     ?_Read_YFlash_CFG:
   786                           	opt stack 0
   787  000001                     ?_YFlashNewConfigure:
   788                           	opt stack 0
   789  000001                     ?_HeartbeatTest:
   790                           	opt stack 0
   791  000001                     ?_main:
   792                           	opt stack 0
   793  000001                     ?_GetLampBoardAddr:
   794                           	opt stack 0
   795  000001                     ?_GetAddr:
   796                           	opt stack 0
   797  000001                     ?_CANSend:
   798                           	opt stack 0
   799  000001                     ?___lwdiv:
   800                           	opt stack 0
   801  000001                     ?___ftpack:
   802                           	opt stack 0
   803  000001                     CANFilterSet@f_type:
   804                           	opt stack 0
   805  000001                     CANSetID@f_type:
   806                           	opt stack 0
   807  000001                     CANSend@id:
   808                           	opt stack 0
   809  000001                     CANSend@dat:
   810                           	opt stack 0
   811  000001                     EEPROMRead@num:
   812                           	opt stack 0
   813  000001                     EEPROMWrite@num:
   814                           	opt stack 0
   815  000001                     GetLampBoardAddr@i:
   816                           	opt stack 0
   817  000001                     delayus@us:
   818                           	opt stack 0
   819  000001                     ___lwdiv@dividend:
   820                           	opt stack 0
   821  000001                     ___ftpack@arg:
   822                           	opt stack 0
   823                           
   824                           ; 3 bytes @ 0x0
   825  000001                     	ds	1
   826  000002                     ??_CANFilterSet:
   827                           	opt stack 0
   828  000002                     ??_CANSetID:
   829                           	opt stack 0
   830  000002                     CANFilterSet@board_addr:
   831                           	opt stack 0
   832  000002                     CANSend@dlc:
   833                           	opt stack 0
   834  000002                     EEPROMRead@dat:
   835                           	opt stack 0
   836  000002                     EEPROMWrite@dat:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x1
   840  000002                     	ds	1
   841  000003                     ??_CANSend:
   842                           	opt stack 0
   843  000003                     ??_delayus:
   844                           	opt stack 0
   845  000003                     ??_CANSendConfirm:
   846                           	opt stack 0
   847  000003                     GetLampBoardAddr@addr:
   848                           	opt stack 0
   849  000003                     CANSetID@board_addr:
   850                           	opt stack 0
   851  000003                     CANSendConfirm@i:
   852                           	opt stack 0
   853  000003                     delayus@i:
   854                           	opt stack 0
   855  000003                     ___lwdiv@divisor:
   856                           	opt stack 0
   857                           
   858                           ; 2 bytes @ 0x2
   859  000003                     	ds	1
   860  000004                     ??_GetAddr:
   861                           	opt stack 0
   862  000004                     ??_CANInit:
   863                           	opt stack 0
   864  000004                     ??_EEPROMRead:
   865                           	opt stack 0
   866  000004                     ??_EEPROMWrite:
   867                           	opt stack 0
   868  000004                     GetAddr@board_type:
   869                           	opt stack 0
   870  000004                     CANInit@b_addr:
   871                           	opt stack 0
   872  000004                     EEPROMRead@addr:
   873                           	opt stack 0
   874  000004                     EEPROMWrite@addr:
   875                           	opt stack 0
   876  000004                     ___ftpack@exp:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x3
   880  000004                     	ds	1
   881  000005                     ?_delayms:
   882                           	opt stack 0
   883  000005                     ??_CANSendID:
   884                           	opt stack 0
   885  000005                     ??_Read_YFlash_CFG:
   886                           	opt stack 0
   887  000005                     ??_HeartbeatTest:
   888                           	opt stack 0
   889  000005                     ??___lwdiv:
   890                           	opt stack 0
   891  000005                     GetAddr@rel:
   892                           	opt stack 0
   893  000005                     CANSendID@sm:
   894                           	opt stack 0
   895  000005                     ___ftpack@sign:
   896                           	opt stack 0
   897  000005                     delayms@ms:
   898                           	opt stack 0
   899  000005                     ___lwdiv@quotient:
   900                           	opt stack 0
   901                           
   902                           ; 2 bytes @ 0x4
   903  000005                     	ds	1
   904  000006                     ??___ftpack:
   905                           	opt stack 0
   906  000006                     ?_CANRecv:
   907                           	opt stack 0
   908  000006                     ??_CANWriteID:
   909                           	opt stack 0
   910  000006                     CANRecv@dat:
   911                           	opt stack 0
   912  000006                     CANWriteID@fm:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x5
   916  000006                     	ds	1
   917  000007                     ??_delayms:
   918                           	opt stack 0
   919  000007                     CANRecv@dlc:
   920                           	opt stack 0
   921  000007                     ___lwdiv@counter:
   922                           	opt stack 0
   923  000007                     delayms@i:
   924                           	opt stack 0
   925                           
   926                           ; 2 bytes @ 0x6
   927  000007                     	ds	1
   928  000008                     ??_CANRecv:
   929                           	opt stack 0
   930  000008                     CANRecv@id:
   931                           	opt stack 0
   932                           
   933                           ; 1 bytes @ 0x7
   934  000008                     	ds	1
   935  000009                     ?___ftmul:
   936                           	opt stack 0
   937  000009                     ___ftmul@f1:
   938                           	opt stack 0
   939                           
   940                           ; 3 bytes @ 0x8
   941  000009                     	ds	3
   942  00000C                     ___ftmul@f2:
   943                           	opt stack 0
   944                           
   945                           ; 3 bytes @ 0xB
   946  00000C                     	ds	3
   947  00000F                     ??___ftmul:
   948                           	opt stack 0
   949                           
   950                           ; 0 bytes @ 0xE
   951  00000F                     	ds	5
   952  000014                     ___ftmul@exp:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0x13
   956  000014                     	ds	1
   957  000015                     ___ftmul@f3_as_product:
   958                           	opt stack 0
   959                           
   960                           ; 3 bytes @ 0x14
   961  000015                     	ds	3
   962  000018                     ___ftmul@cntr:
   963                           	opt stack 0
   964                           
   965                           ; 1 bytes @ 0x17
   966  000018                     	ds	1
   967  000019                     ___ftmul@sign:
   968                           	opt stack 0
   969                           
   970                           ; 1 bytes @ 0x18
   971  000019                     	ds	1
   972  00001A                     ?___fttol:
   973                           	opt stack 0
   974  00001A                     ___fttol@f1:
   975                           	opt stack 0
   976                           
   977                           ; 3 bytes @ 0x19
   978  00001A                     	ds	4
   979  00001E                     ??___fttol:
   980                           	opt stack 0
   981                           
   982                           ; 0 bytes @ 0x1D
   983  00001E                     	ds	5
   984  000023                     ___fttol@sign1:
   985                           	opt stack 0
   986                           
   987                           ; 1 bytes @ 0x22
   988  000023                     	ds	1
   989  000024                     ___fttol@lval:
   990                           	opt stack 0
   991                           
   992                           ; 4 bytes @ 0x23
   993  000024                     	ds	4
   994  000028                     ___fttol@exp1:
   995                           	opt stack 0
   996                           
   997                           ; 1 bytes @ 0x27
   998  000028                     	ds	1
   999  000029                     ?_CalculateTime25msCounter:
  1000                           	opt stack 0
  1001  000029                     CalculateTime25msCounter@line:
  1002                           	opt stack 0
  1003                           
  1004                           ; 1 bytes @ 0x28
  1005  000029                     	ds	1
  1006  00002A                     ??_CalculateTime25msCounter:
  1007                           	opt stack 0
  1008                           
  1009                           ; 0 bytes @ 0x29
  1010  00002A                     	ds	6
  1011  000030                     CalculateTime25msCounter@row:
  1012                           	opt stack 0
  1013                           
  1014                           ; 1 bytes @ 0x2F
  1015  000030                     	ds	1
  1016  000031                     CalculateTime25msCounter@i:
  1017                           	opt stack 0
  1018                           
  1019                           ; 2 bytes @ 0x30
  1020  000031                     	ds	2
  1021  000033                     CalculateTime25msCounter@j:
  1022                           	opt stack 0
  1023                           
  1024                           ; 2 bytes @ 0x32
  1025  000033                     	ds	2
  1026  000035                     ??_YFlashNewConfigure:
  1027                           	opt stack 0
  1028  000035                     ?_CANDATAAnalyzing:
  1029                           	opt stack 0
  1030  000035                     CANDATAAnalyzing@dat:
  1031                           	opt stack 0
  1032                           
  1033                           ; 1 bytes @ 0x34
  1034  000035                     	ds	1
  1035  000036                     CANDATAAnalyzing@dlc:
  1036                           	opt stack 0
  1037                           
  1038                           ; 1 bytes @ 0x35
  1039  000036                     	ds	1
  1040  000037                     ??_CANDATAAnalyzing:
  1041                           	opt stack 0
  1042                           
  1043                           ; 0 bytes @ 0x36
  1044  000037                     	ds	4
  1045  00003B                     CANDATAAnalyzing@id:
  1046                           	opt stack 0
  1047                           
  1048                           ; 1 bytes @ 0x3A
  1049  00003B                     	ds	1
  1050  00003C                     ??_main:
  1051                           	opt stack 0
  1052                           tblptru	equ	0xFF8
  1053                           tblptrh	equ	0xFF7
  1054                           tblptrl	equ	0xFF6
  1055                           tablat	equ	0xFF5
  1056                           prodh	equ	0xFF4
  1057                           prodl	equ	0xFF3
  1058                           intcon	equ	0xFF2
  1059                           postinc0	equ	0xFEE
  1060                           wreg	equ	0xFE8
  1061                           indf1	equ	0xFE7
  1062                           postdec1	equ	0xFE5
  1063                           fsr1h	equ	0xFE2
  1064                           fsr1l	equ	0xFE1
  1065                           indf2	equ	0xFDF
  1066                           postinc2	equ	0xFDE
  1067                           postdec2	equ	0xFDD
  1068                           fsr2h	equ	0xFDA
  1069                           fsr2l	equ	0xFD9
  1070                           status	equ	0xFD8
  1071                           
  1072                           ; 0 bytes @ 0x3B
  1073 ;;
  1074 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1075 ;;
  1076 ;; *************** function _main *****************
  1077 ;; Defined at:
  1078 ;;		line 786 in file "G:\working\YellowFlashingController\YellowFlash.C"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;		None               void
  1085 ;; Registers used:
  1086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1096 ;;Total ram usage:        0 bytes
  1097 ;; Hardware stack levels required when called:    9
  1098 ;; This function calls:
  1099 ;;		_delayms
  1100 ;;		_PORTInit
  1101 ;;		_IntManager
  1102 ;;		_GetAddr
  1103 ;;		_CANInit
  1104 ;;		_CANRecv
  1105 ;;		_CANDATAAnalyzing
  1106 ;;		_HeartbeatTest
  1107 ;; This function is called by:
  1108 ;;		Startup code after reset
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text0
  1113  000C2E                     __ptext0:
  1114                           	opt stack 0
  1115  000C2E                     _main:
  1116                           	opt stack 22
  1117                           
  1118                           ;YellowFlash.C: 789: delayms(500);
  1119  000C2E  0E01               	movlw	1
  1120  000C30  6E06               	movwf	?_delayms+1,c
  1121  000C32  0EF4               	movlw	244
  1122  000C34  6E05               	movwf	?_delayms,c
  1123  000C36  EC95  F007         	call	_delayms	;wreg free
  1124                           
  1125                           ;YellowFlash.C: 790: PORTInit();
  1126  000C3A  ECC7  F007         	call	_PORTInit	;wreg free
  1127                           
  1128                           ; BSR set to: 15
  1129                           ;YellowFlash.C: 791: IntManager();
  1130  000C3E  EC82  F007         	call	_IntManager	;wreg free
  1131                           
  1132                           ; BSR set to: 15
  1133                           ;YellowFlash.C: 792: my_addr =GetAddr(0x06);
  1134  000C42  0E06               	movlw	6
  1135  000C44  ECF4  F006         	call	_GetAddr
  1136  000C48  6E4A               	movwf	_my_addr,c
  1137                           
  1138                           ; BSR set to: 15
  1139                           ;YellowFlash.C: 794: sta = 0X01;
  1140  000C4A  504A               	movf	_my_addr,w,c
  1141  000C4C  EC40  F006         	call	_CANInit
  1142                           
  1143                           ;YellowFlash.C: 795: SWDTEN =1;
  1144  000C50  80D1               	bsf	4049,0,c	;volatile
  1145  000C52                     l3157:
  1146                           
  1147                           ;YellowFlash.C: 801: if(CANRecv(CANRid,CANRdata,&CANRdlc))
  1148  000C52  0100               	movlb	0	; () banked
  1149  000C54  0EDE               	movlw	low _CANRdata
  1150  000C56  6E06               	movwf	?_CANRecv,c
  1151  000C58  0E5B               	movlw	low _CANRdlc
  1152  000C5A  6E07               	movwf	?_CANRecv+1,c
  1153  000C5C  0EEE               	movlw	_CANRid& (0+255)
  1154  000C5E  EC29  F000         	call	_CANRecv
  1155  000C62  E308               	bnc	l3161
  1156                           
  1157                           ;YellowFlash.C: 802: {
  1158                           ;YellowFlash.C: 804: CANDATAAnalyzing(CANRid,CANRdata,CANRdlc);
  1159  000C64  0100               	movlb	0	; () banked
  1160  000C66  0EDE               	movlw	low _CANRdata
  1161  000C68  6E35               	movwf	?_CANDATAAnalyzing,c
  1162  000C6A  C05B  F036         	movff	_CANRdlc,?_CANDATAAnalyzing+1
  1163  000C6E  0EEE               	movlw	_CANRid& (0+255)
  1164  000C70  EC1D  F001         	call	_CANDATAAnalyzing
  1165  000C74                     l3161:
  1166  000C74  0004               	clrwdt		;# 
  1167                           
  1168                           ;YellowFlash.C: 807: if(force_status)
  1169  000C76  5047               	movf	_force_status,w,c
  1170  000C78  E1EC               	bnz	l3157
  1171                           
  1172                           ;YellowFlash.C: 809: else
  1173                           ;YellowFlash.C: 810: {
  1174                           ;YellowFlash.C: 811: HeartbeatTest();
  1175  000C7A  EC11  F007         	call	_HeartbeatTest	;wreg free
  1176  000C7E  D7E9               	goto	l3157
  1177                           tblptru	equ	0xFF8
  1178                           tblptrh	equ	0xFF7
  1179                           tblptrl	equ	0xFF6
  1180                           tablat	equ	0xFF5
  1181                           prodh	equ	0xFF4
  1182                           prodl	equ	0xFF3
  1183                           intcon	equ	0xFF2
  1184                           postinc0	equ	0xFEE
  1185                           wreg	equ	0xFE8
  1186                           indf1	equ	0xFE7
  1187                           postdec1	equ	0xFE5
  1188                           fsr1h	equ	0xFE2
  1189                           fsr1l	equ	0xFE1
  1190                           indf2	equ	0xFDF
  1191                           postinc2	equ	0xFDE
  1192                           postdec2	equ	0xFDD
  1193                           fsr2h	equ	0xFDA
  1194                           fsr2l	equ	0xFD9
  1195                           status	equ	0xFD8
  1196                           
  1197 ;; *************** function _CANRecv *****************
  1198 ;; Defined at:
  1199 ;;		line 259 in file "G:\working\YellowFlashingController\CAN.H"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  id              1    wreg     PTR unsigned char 
  1202 ;;		 -> CANRid(4), 
  1203 ;;  dat             1    5[COMRAM] PTR unsigned char 
  1204 ;;		 -> CANRdata(8), 
  1205 ;;  dlc             1    6[COMRAM] PTR unsigned char 
  1206 ;;		 -> CANRdlc(1), 
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  id              1    7[COMRAM] PTR unsigned char 
  1209 ;;		 -> CANRid(4), 
  1210 ;; Return value:  Size  Location     Type
  1211 ;;		None               void
  1212 ;; Registers used:
  1213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : F/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: FFFFFFF0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1220 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1222 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1223 ;;Total ram usage:        3 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; Hardware stack levels required when called:    6
  1226 ;; This function calls:
  1227 ;;		_GetAddr
  1228 ;;		_CANInit
  1229 ;; This function is called by:
  1230 ;;		_main
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text1
  1235  000052                     __ptext1:
  1236                           	opt stack 0
  1237  000052                     __end_of_main:
  1238                           	opt stack 0
  1239  000052                     _CANRecv:
  1240                           	opt stack 24
  1241                           
  1242                           ;CANRecv@id stored from wreg
  1243  000052  CFE8 F008          	movff	wreg,CANRecv@id
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;CAN.H: 262: if(RXB0IF ==1)
  1247  000056  A077               	btfss	3959,0,c	;volatile
  1248  000058  D039               	goto	l362
  1249                           
  1250                           ; BSR set to: 0
  1251                           ;CAN.H: 263: {
  1252                           ;CAN.H: 264: RXB0IF =0;
  1253  00005A  9077               	bcf	3959,0,c	;volatile
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;CAN.H: 265: RXB0CON &= 0x7f;
  1257  00005C  9E60               	bcf	3936,7,c	;volatile
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;CAN.H: 266: id[0] = RXB0SIDH;
  1261  00005E  5008               	movf	CANRecv@id,w,c
  1262  000060  6ED9               	movwf	fsr2l,c
  1263  000062  6ADA               	clrf	fsr2h,c
  1264  000064  CF61 FFDF          	movff	3937,indf2	;volatile
  1265                           
  1266                           ;CAN.H: 267: id[1] = RXB0SIDL;
  1267  000068  5008               	movf	CANRecv@id,w,c
  1268  00006A  6ED9               	movwf	fsr2l,c
  1269  00006C  6ADA               	clrf	fsr2h,c
  1270  00006E  2AD9               	incf	fsr2l,f,c
  1271  000070  6ADA               	clrf	fsr2h,c
  1272  000072  CF62 FFDF          	movff	3938,indf2	;volatile
  1273                           
  1274                           ;CAN.H: 268: id[2] = RXB0EIDH;
  1275  000076  D8B0               	call	PL19	;call to abstracted procedure
  1276  000078  CF63 FFDF          	movff	3939,indf2	;volatile
  1277                           
  1278                           ;CAN.H: 269: id[3] = RXB0EIDL;
  1279  00007C  D8B4               	call	PL20	;call to abstracted procedure
  1280  00007E  CF64 FFDF          	movff	3940,indf2	;volatile
  1281                           
  1282                           ; BSR set to: 0
  1283                           ;CAN.H: 271: *dlc =RXB0DLC;
  1284  000082  5007               	movf	CANRecv@dlc,w,c
  1285  000084  6ED9               	movwf	fsr2l,c
  1286  000086  6ADA               	clrf	fsr2h,c
  1287  000088  CF65 FFDF          	movff	3941,indf2	;volatile
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;CAN.H: 273: dat[0] = RXB0D0;
  1291  00008C  5006               	movf	CANRecv@dat,w,c
  1292  00008E  6ED9               	movwf	fsr2l,c
  1293  000090  6ADA               	clrf	fsr2h,c
  1294  000092  CF66 FFDF          	movff	3942,indf2	;volatile
  1295                           
  1296                           ;CAN.H: 274: dat[1] = RXB0D1;
  1297  000096  5006               	movf	CANRecv@dat,w,c
  1298  000098  6ED9               	movwf	fsr2l,c
  1299  00009A  6ADA               	clrf	fsr2h,c
  1300  00009C  2AD9               	incf	fsr2l,f,c
  1301  00009E  6ADA               	clrf	fsr2h,c
  1302  0000A0  CF67 FFDF          	movff	3943,indf2	;volatile
  1303                           
  1304                           ;CAN.H: 275: dat[2] = RXB0D2;
  1305  0000A4  D8A7               	call	PL21	;call to abstracted procedure
  1306  0000A6  CF68 FFDF          	movff	3944,indf2	;volatile
  1307                           
  1308                           ;CAN.H: 276: dat[3] = RXB0D3;
  1309  0000AA  D8AB               	call	PL22	;call to abstracted procedure
  1310  0000AC  CF69 FFDF          	movff	3945,indf2	;volatile
  1311                           
  1312                           ;CAN.H: 277: dat[4] = RXB0D4;
  1313  0000B0  D8B6               	call	PL25	;call to abstracted procedure
  1314  0000B2  CF6A FFDF          	movff	3946,indf2	;volatile
  1315                           
  1316                           ;CAN.H: 278: dat[5] = RXB0D5;
  1317  0000B6  D8AC               	call	PL24	;call to abstracted procedure
  1318  0000B8  CF6B FFDF          	movff	3947,indf2	;volatile
  1319                           
  1320                           ;CAN.H: 279: dat[6] = RXB0D6;
  1321  0000BC  D8B7               	call	PL26	;call to abstracted procedure
  1322  0000BE  CF6C FFDF          	movff	3948,indf2	;volatile
  1323                           
  1324                           ;CAN.H: 280: dat[7] = RXB0D7;
  1325  0000C2  D883               	call	PL18	;call to abstracted procedure
  1326  0000C4  CF6D FFDF          	movff	3949,indf2	;volatile
  1327  0000C8                     l2649:
  1328                           
  1329                           ;CAN.H: 281: return 1;
  1330  0000C8  80D8               	bsf	status,0,c
  1331  0000CA  0012               	return	
  1332  0000CC                     l362:
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;CAN.H: 282: }
  1336                           ;CAN.H: 283: if(RXB1IF ==1)
  1337  0000CC  A277               	btfss	3959,1,c	;volatile
  1338  0000CE  D039               	goto	l364
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;CAN.H: 284: {
  1342                           ;CAN.H: 285: RXB1IF =0;
  1343  0000D0  9277               	bcf	3959,1,c	;volatile
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;CAN.H: 286: RXB1CON &= 0x7f;
  1347  0000D2  010F               	movlb	15	; () banked
  1348  0000D4  9F30               	bcf	48,7,b	;volatile
  1349                           
  1350                           ; BSR set to: 15
  1351                           ;CAN.H: 287: id[0] = RXB1SIDH;
  1352  0000D6  5008               	movf	CANRecv@id,w,c
  1353  0000D8  6ED9               	movwf	fsr2l,c
  1354  0000DA  6ADA               	clrf	fsr2h,c
  1355  0000DC  CF31 FFDF          	movff	3889,indf2	;volatile
  1356                           
  1357                           ; BSR set to: 15
  1358                           ;CAN.H: 288: id[1] = RXB1SIDL;
  1359  0000E0  5008               	movf	CANRecv@id,w,c
  1360  0000E2  6ED9               	movwf	fsr2l,c
  1361  0000E4  6ADA               	clrf	fsr2h,c
  1362  0000E6  2AD9               	incf	fsr2l,f,c
  1363  0000E8  6ADA               	clrf	fsr2h,c
  1364  0000EA  CF32 FFDF          	movff	3890,indf2	;volatile
  1365                           
  1366                           ; BSR set to: 15
  1367                           ;CAN.H: 289: id[2] = RXB1EIDH;
  1368  0000EE  D874               	call	PL19	;call to abstracted procedure
  1369  0000F0  CF33 FFDF          	movff	3891,indf2	;volatile
  1370                           
  1371                           ; BSR set to: 15
  1372                           ;CAN.H: 290: id[3] = RXB1EIDL;
  1373  0000F4  D878               	call	PL20	;call to abstracted procedure
  1374  0000F6  CF34 FFDF          	movff	3892,indf2	;volatile
  1375                           
  1376                           ; BSR set to: 15
  1377                           ;CAN.H: 292: *dlc =RXB1DLC;
  1378  0000FA  5007               	movf	CANRecv@dlc,w,c
  1379  0000FC  6ED9               	movwf	fsr2l,c
  1380  0000FE  6ADA               	clrf	fsr2h,c
  1381  000100  CF35 FFDF          	movff	3893,indf2	;volatile
  1382                           
  1383                           ; BSR set to: 15
  1384                           ;CAN.H: 294: dat[0] = RXB1D0;
  1385  000104  5006               	movf	CANRecv@dat,w,c
  1386  000106  6ED9               	movwf	fsr2l,c
  1387  000108  6ADA               	clrf	fsr2h,c
  1388  00010A  CF36 FFDF          	movff	3894,indf2	;volatile
  1389                           
  1390                           ; BSR set to: 15
  1391                           ;CAN.H: 295: dat[1] = RXB1D1;
  1392  00010E  5006               	movf	CANRecv@dat,w,c
  1393  000110  6ED9               	movwf	fsr2l,c
  1394  000112  6ADA               	clrf	fsr2h,c
  1395  000114  2AD9               	incf	fsr2l,f,c
  1396  000116  6ADA               	clrf	fsr2h,c
  1397  000118  CF37 FFDF          	movff	3895,indf2	;volatile
  1398                           
  1399                           ; BSR set to: 15
  1400                           ;CAN.H: 296: dat[2] = RXB1D2;
  1401  00011C  D86B               	call	PL21	;call to abstracted procedure
  1402  00011E  CF38 FFDF          	movff	3896,indf2	;volatile
  1403                           
  1404                           ; BSR set to: 15
  1405                           ;CAN.H: 297: dat[3] = RXB1D3;
  1406  000122  D86F               	call	PL22	;call to abstracted procedure
  1407  000124  CF39 FFDF          	movff	3897,indf2	;volatile
  1408                           
  1409                           ; BSR set to: 15
  1410                           ;CAN.H: 298: dat[4] = RXB1D4;
  1411  000128  D87A               	call	PL25	;call to abstracted procedure
  1412  00012A  CF3A FFDF          	movff	3898,indf2	;volatile
  1413                           
  1414                           ; BSR set to: 15
  1415                           ;CAN.H: 299: dat[5] = RXB1D5;
  1416  00012E  D870               	call	PL24	;call to abstracted procedure
  1417  000130  CF3B FFDF          	movff	3899,indf2	;volatile
  1418                           
  1419                           ; BSR set to: 15
  1420                           ;CAN.H: 300: dat[6] = RXB1D6;
  1421  000134  D87B               	call	PL26	;call to abstracted procedure
  1422  000136  CF3C FFDF          	movff	3900,indf2	;volatile
  1423                           
  1424                           ; BSR set to: 15
  1425                           ;CAN.H: 301: dat[7] = RXB1D7;
  1426  00013A  D847               	call	PL18	;call to abstracted procedure
  1427  00013C  CF3D FFDF          	movff	3901,indf2	;volatile
  1428  000140  D7C3               	goto	l2649
  1429  000142                     l364:
  1430                           
  1431                           ; BSR set to: 0
  1432                           ;CAN.H: 304: }
  1433                           ;CAN.H: 305: if(TXB0IF ==1)
  1434  000142  B477               	btfsc	3959,2,c	;volatile
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;CAN.H: 306: {
  1438                           ;CAN.H: 307: TXB0IF =0;
  1439  000144  9477               	bcf	3959,2,c	;volatile
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;CAN.H: 308: }
  1443                           ;CAN.H: 309: if(TXB1IF ==1)
  1444  000146  B677               	btfsc	3959,3,c	;volatile
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;CAN.H: 310: {
  1448                           ;CAN.H: 311: TXB1IF =0;
  1449  000148  9677               	bcf	3959,3,c	;volatile
  1450                           
  1451                           ; BSR set to: 0
  1452                           ;CAN.H: 312: }
  1453                           ;CAN.H: 313: if(TXB2IF ==1)
  1454  00014A  B877               	btfsc	3959,4,c	;volatile
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;CAN.H: 314: {
  1458                           ;CAN.H: 315: TXB2IF =0;
  1459  00014C  9877               	bcf	3959,4,c	;volatile
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;CAN.H: 316: }
  1463                           ;CAN.H: 318: if(ERRIF ==1)
  1464  00014E  AA77               	btfss	3959,5,c	;volatile
  1465  000150  D033               	goto	l2723
  1466                           
  1467                           ; BSR set to: 0
  1468                           ;CAN.H: 319: {
  1469                           ;CAN.H: 320: ERRIF =0;
  1470  000152  9A77               	bcf	3959,5,c	;volatile
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;CAN.H: 322: id[0] = 0;
  1474  000154  5008               	movf	CANRecv@id,w,c
  1475  000156  6ED9               	movwf	fsr2l,c
  1476  000158  6ADA               	clrf	fsr2h,c
  1477  00015A  6ADF               	clrf	indf2,c
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;CAN.H: 323: id[1] = 0;
  1481  00015C  5008               	movf	CANRecv@id,w,c
  1482  00015E  6ED9               	movwf	fsr2l,c
  1483  000160  6ADA               	clrf	fsr2h,c
  1484  000162  2AD9               	incf	fsr2l,f,c
  1485  000164  6ADA               	clrf	fsr2h,c
  1486  000166  6ADF               	clrf	indf2,c
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;CAN.H: 324: id[2] = 0;
  1490  000168  D837               	call	PL19	;call to abstracted procedure
  1491  00016A  6ADF               	clrf	indf2,c
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;CAN.H: 325: id[3] = 0;
  1495  00016C  D83C               	call	PL20	;call to abstracted procedure
  1496  00016E  6ADF               	clrf	indf2,c
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;CAN.H: 327: *dlc =0;
  1500  000170  5007               	movf	CANRecv@dlc,w,c
  1501  000172  6ED9               	movwf	fsr2l,c
  1502  000174  6ADA               	clrf	fsr2h,c
  1503  000176  6ADF               	clrf	indf2,c
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;CAN.H: 329: dat[0] = 0;
  1507  000178  5006               	movf	CANRecv@dat,w,c
  1508  00017A  6ED9               	movwf	fsr2l,c
  1509  00017C  6ADA               	clrf	fsr2h,c
  1510  00017E  6ADF               	clrf	indf2,c
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;CAN.H: 330: dat[1] = 0;
  1514  000180  5006               	movf	CANRecv@dat,w,c
  1515  000182  6ED9               	movwf	fsr2l,c
  1516  000184  6ADA               	clrf	fsr2h,c
  1517  000186  2AD9               	incf	fsr2l,f,c
  1518  000188  6ADA               	clrf	fsr2h,c
  1519  00018A  6ADF               	clrf	indf2,c
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;CAN.H: 331: dat[2] = 0;
  1523  00018C  5006               	movf	CANRecv@dat,w,c
  1524  00018E  6ED9               	movwf	fsr2l,c
  1525  000190  6ADA               	clrf	fsr2h,c
  1526  000192  0E02               	movlw	2
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;CAN.H: 332: dat[3] = 0;
  1530  000194  D813               	call	PL7	;call to abstracted procedure
  1531  000196  0E03               	movlw	3
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;CAN.H: 333: dat[4] = 0;
  1535  000198  D811               	call	PL7	;call to abstracted procedure
  1536  00019A  0E04               	movlw	4
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;CAN.H: 334: dat[5] = 0;
  1540  00019C  D80F               	call	PL7	;call to abstracted procedure
  1541  00019E  0E05               	movlw	5
  1542                           
  1543                           ; BSR set to: 0
  1544                           ;CAN.H: 335: dat[6] = 0;
  1545  0001A0  D80D               	call	PL7	;call to abstracted procedure
  1546  0001A2  0E06               	movlw	6
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;CAN.H: 336: dat[7] = 0;
  1550  0001A4  D80B               	call	PL7	;call to abstracted procedure
  1551  0001A6  0E07               	movlw	7
  1552  0001A8  26D9               	addwf	fsr2l,f,c
  1553  0001AA  6ADA               	clrf	fsr2h,c
  1554  0001AC  6ADF               	clrf	indf2,c
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;CAN.H: 338: CANInit(GetAddr(0x06));
  1558  0001AE  0E06               	movlw	6
  1559  0001B0  ECF4  F006         	call	_GetAddr
  1560  0001B4  EC40  F006         	call	_CANInit
  1561  0001B8                     l2723:
  1562                           
  1563                           ;CAN.H: 340: return 0;
  1564  0001B8  90D8               	bcf	status,0,c
  1565  0001BA  0012               	return	
  1566  0001BC                     __end_of_CANRecv:
  1567                           	opt stack 0
  1568  0001BC                     PL7:
  1569  0001BC  26D9               	addwf	fsr2l,f,c
  1570  0001BE  6ADA               	clrf	fsr2h,c
  1571  0001C0  6ADF               	clrf	indf2,c
  1572  0001C2  5006               	movf	CANRecv@dat,w,c
  1573  0001C4  6ED9               	movwf	fsr2l,c
  1574  0001C6  6ADA               	clrf	fsr2h,c
  1575  0001C8  0012               	return	
  1576  0001CA                     PL18:
  1577  0001CA  5006               	movf	CANRecv@dat,w,c
  1578  0001CC  6ED9               	movwf	fsr2l,c
  1579  0001CE  6ADA               	clrf	fsr2h,c
  1580  0001D0  0E07               	movlw	7
  1581  0001D2  26D9               	addwf	fsr2l,f,c
  1582  0001D4  6ADA               	clrf	fsr2h,c
  1583  0001D6  0012               	return	
  1584  0001D8                     PL19:
  1585  0001D8  5008               	movf	CANRecv@id,w,c
  1586  0001DA  6ED9               	movwf	fsr2l,c
  1587  0001DC  6ADA               	clrf	fsr2h,c
  1588  0001DE  0E02               	movlw	2
  1589  0001E0  26D9               	addwf	fsr2l,f,c
  1590  0001E2  6ADA               	clrf	fsr2h,c
  1591  0001E4  0012               	return	
  1592  0001E6                     PL20:
  1593  0001E6  5008               	movf	CANRecv@id,w,c
  1594  0001E8  6ED9               	movwf	fsr2l,c
  1595  0001EA  6ADA               	clrf	fsr2h,c
  1596  0001EC  0E03               	movlw	3
  1597  0001EE  26D9               	addwf	fsr2l,f,c
  1598  0001F0  6ADA               	clrf	fsr2h,c
  1599  0001F2  0012               	return	
  1600  0001F4                     PL21:
  1601  0001F4  5006               	movf	CANRecv@dat,w,c
  1602  0001F6  6ED9               	movwf	fsr2l,c
  1603  0001F8  6ADA               	clrf	fsr2h,c
  1604  0001FA  0E02               	movlw	2
  1605  0001FC  26D9               	addwf	fsr2l,f,c
  1606  0001FE  6ADA               	clrf	fsr2h,c
  1607  000200  0012               	return	
  1608  000202                     PL22:
  1609  000202  5006               	movf	CANRecv@dat,w,c
  1610  000204  6ED9               	movwf	fsr2l,c
  1611  000206  6ADA               	clrf	fsr2h,c
  1612  000208  0E03               	movlw	3
  1613  00020A  26D9               	addwf	fsr2l,f,c
  1614  00020C  6ADA               	clrf	fsr2h,c
  1615  00020E  0012               	return	
  1616  000210                     PL24:
  1617  000210  5006               	movf	CANRecv@dat,w,c
  1618  000212  6ED9               	movwf	fsr2l,c
  1619  000214  6ADA               	clrf	fsr2h,c
  1620  000216  0E05               	movlw	5
  1621  000218  26D9               	addwf	fsr2l,f,c
  1622  00021A  6ADA               	clrf	fsr2h,c
  1623  00021C  0012               	return	
  1624  00021E                     PL25:
  1625  00021E  5006               	movf	CANRecv@dat,w,c
  1626  000220  6ED9               	movwf	fsr2l,c
  1627  000222  6ADA               	clrf	fsr2h,c
  1628  000224  0E04               	movlw	4
  1629  000226  26D9               	addwf	fsr2l,f,c
  1630  000228  6ADA               	clrf	fsr2h,c
  1631  00022A  0012               	return	
  1632  00022C                     PL26:
  1633  00022C  5006               	movf	CANRecv@dat,w,c
  1634  00022E  6ED9               	movwf	fsr2l,c
  1635  000230  6ADA               	clrf	fsr2h,c
  1636  000232  0E06               	movlw	6
  1637  000234  26D9               	addwf	fsr2l,f,c
  1638  000236  6ADA               	clrf	fsr2h,c
  1639  000238  0012               	return	
  1640                           tblptru	equ	0xFF8
  1641                           tblptrh	equ	0xFF7
  1642                           tblptrl	equ	0xFF6
  1643                           tablat	equ	0xFF5
  1644                           prodh	equ	0xFF4
  1645                           prodl	equ	0xFF3
  1646                           intcon	equ	0xFF2
  1647                           postinc0	equ	0xFEE
  1648                           wreg	equ	0xFE8
  1649                           indf1	equ	0xFE7
  1650                           postdec1	equ	0xFE5
  1651                           fsr1h	equ	0xFE2
  1652                           fsr1l	equ	0xFE1
  1653                           indf2	equ	0xFDF
  1654                           postinc2	equ	0xFDE
  1655                           postdec2	equ	0xFDD
  1656                           fsr2h	equ	0xFDA
  1657                           fsr2l	equ	0xFD9
  1658                           status	equ	0xFD8
  1659                           
  1660 ;; *************** function _GetAddr *****************
  1661 ;; Defined at:
  1662 ;;		line 143 in file "G:\working\YellowFlashingController\TSC.H"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  board_type      1    wreg     unsigned char 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  board_type      1    3[COMRAM] unsigned char 
  1667 ;;  rel             1    4[COMRAM] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      unsigned char 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/F
  1674 ;;		On exit  : 0/F
  1675 ;;		Unchanged: FFFFFFFF/0
  1676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1678 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1680 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1681 ;;Total ram usage:        2 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    5
  1684 ;; This function calls:
  1685 ;;		_GetLampBoardAddr
  1686 ;; This function is called by:
  1687 ;;		_CANRecv
  1688 ;;		_main
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text2
  1693  000DE8                     __ptext2:
  1694                           	opt stack 0
  1695  000DE8                     _GetAddr:
  1696                           	opt stack 24
  1697                           
  1698                           ;GetAddr@board_type stored from wreg
  1699  000DE8  CFE8 F004          	movff	wreg,GetAddr@board_type
  1700                           
  1701                           ;TSC.H: 144: unsigned char rel;
  1702                           ;TSC.H: 145: switch (board_type)
  1703  000DEC  D00A               	goto	l2445
  1704  000DEE                     l2437:
  1705                           
  1706                           ;TSC.H: 148: rel = 0x20;
  1707  000DEE  0E20               	movlw	32
  1708  000DF0  D004               	goto	L2
  1709  000DF2                     l2439:
  1710                           
  1711                           ;TSC.H: 152: rel = GetLampBoardAddr();
  1712  000DF2  ECE9  F005         	call	_GetLampBoardAddr	;wreg free
  1713  000DF6  D001               	goto	L2
  1714  000DF8                     l2441:
  1715                           
  1716                           ;TSC.H: 155: rel= 0x2E;
  1717  000DF8  0E2E               	movlw	46
  1718  000DFA                     L2:
  1719  000DFA  6E05               	movwf	GetAddr@rel,c
  1720  000DFC  D010               	goto	l2447
  1721  000DFE                     l325:
  1722                           
  1723                           ;TSC.H: 166: rel = 0;
  1724  000DFE  6A05               	clrf	GetAddr@rel,c
  1725                           
  1726                           ;TSC.H: 167: break;
  1727  000E00  D00E               	goto	l2447
  1728  000E02                     l2445:
  1729  000E02  5004               	movf	GetAddr@board_type,w,c
  1730                           
  1731                           ; Switch size 1, requested type "space"
  1732                           ; Number of cases is 6, Range of values is 1 to 6
  1733                           ; switch strategies available:
  1734                           ; Name         Instructions Cycles
  1735                           ; simple_byte           19    10 (average)
  1736                           ;	Chosen strategy is simple_byte
  1737  000E04  0A01               	xorlw	1	; case 1
  1738  000E06  E0F3               	bz	l2437
  1739  000E08  0A03               	xorlw	3	; case 2
  1740  000E0A  E0F3               	bz	l2439
  1741  000E0C  0A01               	xorlw	1	; case 3
  1742  000E0E  E007               	bz	l2447
  1743  000E10  0A07               	xorlw	7	; case 4
  1744  000E12  E005               	bz	l2447
  1745  000E14  0A01               	xorlw	1	; case 5
  1746  000E16  E003               	bz	l2447
  1747  000E18  0A03               	xorlw	3	; case 6
  1748  000E1A  E0EE               	bz	l2441
  1749  000E1C  D7F0               	goto	l325
  1750  000E1E                     l2447:
  1751                           
  1752                           ;TSC.H: 170: return rel;
  1753  000E1E  5005               	movf	GetAddr@rel,w,c
  1754  000E20  0012               	return	
  1755  000E22                     __end_of_GetAddr:
  1756                           	opt stack 0
  1757                           tblptru	equ	0xFF8
  1758                           tblptrh	equ	0xFF7
  1759                           tblptrl	equ	0xFF6
  1760                           tablat	equ	0xFF5
  1761                           prodh	equ	0xFF4
  1762                           prodl	equ	0xFF3
  1763                           intcon	equ	0xFF2
  1764                           postinc0	equ	0xFEE
  1765                           wreg	equ	0xFE8
  1766                           indf1	equ	0xFE7
  1767                           postdec1	equ	0xFE5
  1768                           fsr1h	equ	0xFE2
  1769                           fsr1l	equ	0xFE1
  1770                           indf2	equ	0xFDF
  1771                           postinc2	equ	0xFDE
  1772                           postdec2	equ	0xFDD
  1773                           fsr2h	equ	0xFDA
  1774                           fsr2l	equ	0xFD9
  1775                           status	equ	0xFD8
  1776                           
  1777 ;; *************** function _GetLampBoardAddr *****************
  1778 ;; Defined at:
  1779 ;;		line 82 in file "G:\working\YellowFlashingController\TSC.H"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  i               2    0[COMRAM] unsigned int 
  1784 ;;  addr            1    2[COMRAM] unsigned char 
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      unsigned char 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, status,0
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/F
  1791 ;;		On exit  : 0/F
  1792 ;;		Unchanged: FFFFFFFF/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1795 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1797 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1798 ;;Total ram usage:        3 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    4
  1801 ;; This function calls:
  1802 ;;		Nothing
  1803 ;; This function is called by:
  1804 ;;		_GetAddr
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text3
  1809  000BD2                     __ptext3:
  1810                           	opt stack 0
  1811  000BD2                     _GetLampBoardAddr:
  1812                           	opt stack 24
  1813                           
  1814                           ;TSC.H: 84: unsigned int i=0;
  1815  000BD2  6A01               	clrf	GetLampBoardAddr@i,c
  1816  000BD4  6A02               	clrf	GetLampBoardAddr@i+1,c
  1817                           
  1818                           ;TSC.H: 86: addr = (PORTB>>5) & 0x07;
  1819  000BD6  3881               	swapf	3969,w,c	;volatile
  1820  000BD8  42E8               	rrncf	wreg,f,c
  1821  000BDA  0B07               	andlw	7
  1822  000BDC  6E03               	movwf	GetLampBoardAddr@addr,c
  1823                           
  1824                           ;TSC.H: 89: for(i=0;i<1000;i++)
  1825  000BDE  6A01               	clrf	GetLampBoardAddr@i,c
  1826  000BE0  6A02               	clrf	GetLampBoardAddr@i+1,c
  1827  000BE2                     l2371:
  1828                           
  1829                           ;TSC.H: 90: {;}
  1830  000BE2  4A01               	infsnz	GetLampBoardAddr@i,f,c
  1831  000BE4  2A02               	incf	GetLampBoardAddr@i+1,f,c
  1832  000BE6  0EE8               	movlw	232
  1833  000BE8  5C01               	subwf	GetLampBoardAddr@i,w,c
  1834  000BEA  0E03               	movlw	3
  1835  000BEC  5802               	subwfb	GetLampBoardAddr@i+1,w,c
  1836  000BEE  E3F9               	bnc	l2371
  1837                           
  1838                           ;TSC.H: 92: if(addr ==((PORTB>>5) & 0x07))
  1839  000BF0  3881               	swapf	3969,w,c	;volatile
  1840  000BF2  42E8               	rrncf	wreg,f,c
  1841  000BF4  0B07               	andlw	7
  1842  000BF6  1803               	xorwf	GetLampBoardAddr@addr,w,c
  1843  000BF8  E008               	bz	l2429
  1844  000BFA  0CFF               	retlw	255
  1845  000BFC                     l2379:
  1846                           
  1847                           ;TSC.H: 97: return 0x13;
  1848  000BFC  0C13               	retlw	19
  1849  000BFE                     l2385:
  1850                           
  1851                           ;TSC.H: 100: return 0x14;
  1852  000BFE  0C14               	retlw	20
  1853  000C00                     l2391:
  1854                           
  1855                           ;TSC.H: 103: return 0x15;
  1856  000C00  0C15               	retlw	21
  1857  000C02                     l2397:
  1858                           
  1859                           ;TSC.H: 106: return 0x16;
  1860  000C02  0C16               	retlw	22
  1861  000C04                     l2403:
  1862                           
  1863                           ;TSC.H: 109: return 0x17;
  1864  000C04  0C17               	retlw	23
  1865  000C06                     l2409:
  1866                           
  1867                           ;TSC.H: 112: return 0x18;
  1868  000C06  0C18               	retlw	24
  1869  000C08                     l2415:
  1870                           
  1871                           ;TSC.H: 115: return 0x1a;
  1872  000C08  0C1A               	retlw	26
  1873  000C0A                     l2429:
  1874  000C0A  5003               	movf	GetLampBoardAddr@addr,w,c
  1875                           
  1876                           ; Switch size 1, requested type "space"
  1877                           ; Number of cases is 8, Range of values is 0 to 7
  1878                           ; switch strategies available:
  1879                           ; Name         Instructions Cycles
  1880                           ; simple_byte           25    13 (average)
  1881                           ;	Chosen strategy is simple_byte
  1882  000C0C  E0F7               	bz	l2379
  1883  000C0E  0A01               	xorlw	1	; case 1
  1884  000C10  E0F6               	bz	l2385
  1885  000C12  0A03               	xorlw	3	; case 2
  1886  000C14  E0F5               	bz	l2391
  1887  000C16  0A01               	xorlw	1	; case 3
  1888  000C18  E0F4               	bz	l2397
  1889  000C1A  0A07               	xorlw	7	; case 4
  1890  000C1C  E0F3               	bz	l2403
  1891  000C1E  0A01               	xorlw	1	; case 5
  1892  000C20  E0F2               	bz	l2409
  1893  000C22  0A03               	xorlw	3	; case 6
  1894  000C24  E0F1               	bz	l2415
  1895  000C26  0A01               	xorlw	1	; case 7
  1896  000C28  A4D8               	btfss	status,2,c
  1897  000C2A  0012               	return	
  1898  000C2C  0C1B               	retlw	27
  1899  000C2E                     __end_of_GetLampBoardAddr:
  1900                           	opt stack 0
  1901                           tblptru	equ	0xFF8
  1902                           tblptrh	equ	0xFF7
  1903                           tblptrl	equ	0xFF6
  1904                           tablat	equ	0xFF5
  1905                           prodh	equ	0xFF4
  1906                           prodl	equ	0xFF3
  1907                           intcon	equ	0xFF2
  1908                           postinc0	equ	0xFEE
  1909                           wreg	equ	0xFE8
  1910                           indf1	equ	0xFE7
  1911                           postdec1	equ	0xFE5
  1912                           fsr1h	equ	0xFE2
  1913                           fsr1l	equ	0xFE1
  1914                           indf2	equ	0xFDF
  1915                           postinc2	equ	0xFDE
  1916                           postdec2	equ	0xFDD
  1917                           fsr2h	equ	0xFDA
  1918                           fsr2l	equ	0xFD9
  1919                           status	equ	0xFD8
  1920                           
  1921 ;; *************** function _CANInit *****************
  1922 ;; Defined at:
  1923 ;;		line 117 in file "G:\working\YellowFlashingController\CAN.H"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  b_addr          1    wreg     unsigned char 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  b_addr          1    3[COMRAM] unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;		None               void
  1930 ;; Registers used:
  1931 ;;		wreg, status,2, status,0, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/F
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: FFFFFFF0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1940 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1941 ;;Total ram usage:        1 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    5
  1944 ;; This function calls:
  1945 ;;		_CANSetID
  1946 ;;		_CANFilterSet
  1947 ;;		_CANErrClr
  1948 ;; This function is called by:
  1949 ;;		_CANRecv
  1950 ;;		_main
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text4
  1955  000C80                     __ptext4:
  1956                           	opt stack 0
  1957  000C80                     _CANInit:
  1958                           	opt stack 24
  1959                           
  1960                           ;CANInit@b_addr stored from wreg
  1961  000C80  CFE8 F004          	movff	wreg,CANInit@b_addr
  1962                           
  1963                           ;CAN.H: 118: TRISB |= 0x08;
  1964  000C84  8693               	bsf	3987,3,c	;volatile
  1965                           
  1966                           ;CAN.H: 119: TRISB &= 0xfb;
  1967  000C86  9493               	bcf	3987,2,c	;volatile
  1968                           
  1969                           ;CAN.H: 121: CANCON |=0x80;
  1970  000C88  8E6F               	bsf	3951,7,c	;volatile
  1971  000C8A                     l338:
  1972  000C8A  AE6E               	btfss	3950,7,c	;volatile
  1973  000C8C  D7FE               	goto	l338
  1974                           
  1975                           ;CAN.H: 126: ECANCON &= 0x3f;
  1976  000C8E  0E3F               	movlw	63
  1977  000C90  1672               	andwf	3954,f,c	;volatile
  1978                           
  1979                           ;CAN.H: 128: BRGCON1 = 0x00;
  1980  000C92  010E               	movlb	14	; () banked
  1981  000C94  6B43               	clrf	67,b	;volatile
  1982                           
  1983                           ; BSR set to: 14
  1984                           ;CAN.H: 129: BRGCON2 = 0xd1;;
  1985  000C96  0ED1               	movlw	209
  1986  000C98  6F44               	movwf	68,b	;volatile
  1987                           
  1988                           ; BSR set to: 14
  1989                           ;CAN.H: 130: BRGCON3 = 0xc1;
  1990  000C9A  0EC1               	movlw	193
  1991  000C9C  6F45               	movwf	69,b	;volatile
  1992                           
  1993                           ; BSR set to: 14
  1994                           ;CAN.H: 131: CIOCON = 0x21;
  1995  000C9E  0E21               	movlw	33
  1996  000CA0  6E70               	movwf	3952,c	;volatile
  1997                           
  1998                           ; BSR set to: 14
  1999                           ;CAN.H: 133: RXB0CON |= 0x06;
  2000  000CA2  0E06               	movlw	6
  2001  000CA4  1260               	iorwf	3936,f,c	;volatile
  2002                           
  2003                           ; BSR set to: 14
  2004                           ;CAN.H: 134: RXB1CON |= 0x06;
  2005  000CA6  010F               	movlb	15	; () banked
  2006  000CA8  1330               	iorwf	48,f,b	;volatile
  2007                           
  2008                           ; BSR set to: 15
  2009                           ;CAN.H: 136: CANSetID(b_addr,0x03);
  2010  000CAA  0E03               	movlw	3
  2011  000CAC  6E01               	movwf	?_CANSetID,c
  2012  000CAE  5004               	movf	CANInit@b_addr,w,c
  2013  000CB0  EC67  F006         	call	_CANSetID
  2014                           
  2015                           ; BSR set to: 15
  2016                           ;CAN.H: 137: CANFilterSet(b_addr,0x03);
  2017  000CB4  0E03               	movlw	3
  2018  000CB6  6E01               	movwf	?_CANFilterSet,c
  2019  000CB8  5004               	movf	CANInit@b_addr,w,c
  2020  000CBA  EC62  F004         	call	_CANFilterSet
  2021                           
  2022                           ; BSR set to: 14
  2023                           ;CAN.H: 138: CANErrClr();
  2024  000CBE  ECE8  F007         	call	_CANErrClr	;wreg free
  2025                           
  2026                           ; BSR set to: 14
  2027                           ;CAN.H: 141: CIOCON=0X00;
  2028  000CC2  6A70               	clrf	3952,c	;volatile
  2029                           
  2030                           ; BSR set to: 14
  2031                           ;CAN.H: 145: CANCON &= 0x1f;
  2032  000CC4  0E1F               	movlw	31
  2033  000CC6  166F               	andwf	3951,f,c	;volatile
  2034  000CC8                     l341:
  2035  000CC8  A06E               	btfss	3950,0,c	;volatile
  2036  000CCA  0012               	return	
  2037  000CCC  D7FD               	goto	l341
  2038  000CCE                     __end_of_CANInit:
  2039                           	opt stack 0
  2040                           tblptru	equ	0xFF8
  2041                           tblptrh	equ	0xFF7
  2042                           tblptrl	equ	0xFF6
  2043                           tablat	equ	0xFF5
  2044                           prodh	equ	0xFF4
  2045                           prodl	equ	0xFF3
  2046                           intcon	equ	0xFF2
  2047                           postinc0	equ	0xFEE
  2048                           wreg	equ	0xFE8
  2049                           indf1	equ	0xFE7
  2050                           postdec1	equ	0xFE5
  2051                           fsr1h	equ	0xFE2
  2052                           fsr1l	equ	0xFE1
  2053                           indf2	equ	0xFDF
  2054                           postinc2	equ	0xFDE
  2055                           postdec2	equ	0xFDD
  2056                           fsr2h	equ	0xFDA
  2057                           fsr2l	equ	0xFD9
  2058                           status	equ	0xFD8
  2059                           
  2060 ;; *************** function _CANFilterSet *****************
  2061 ;; Defined at:
  2062 ;;		line 15 in file "G:\working\YellowFlashingController\CAN.H"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  board_addr      1    wreg     unsigned char 
  2065 ;;  f_type          1    0[COMRAM] unsigned char 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  board_addr      1    1[COMRAM] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;		None               void
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0
  2072 ;; Tracked objects:
  2073 ;;		On entry : F/F
  2074 ;;		On exit  : F/E
  2075 ;;		Unchanged: FFFFFFF0/0
  2076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2077 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2078 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2080 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2081 ;;Total ram usage:        2 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    4
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_CANInit
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text5
  2092  0008C4                     __ptext5:
  2093                           	opt stack 0
  2094  0008C4                     _CANFilterSet:
  2095                           	opt stack 24
  2096                           
  2097                           ;CANFilterSet@board_addr stored from wreg
  2098  0008C4  CFE8 F002          	movff	wreg,CANFilterSet@board_addr
  2099                           
  2100                           ; BSR set to: 15
  2101                           ;CAN.H: 20: RXF0SIDH = 0;
  2102  0008C8  010E               	movlb	14	; () banked
  2103  0008CA  6BE0               	clrf	224,b	;volatile
  2104                           
  2105                           ; BSR set to: 14
  2106                           ;CAN.H: 21: RXF0SIDH = (f_type<<5)|(0x10>>1);
  2107  0008CC  3801               	swapf	CANFilterSet@f_type,w,c
  2108  0008CE  46E8               	rlncf	wreg,f,c
  2109  0008D0  0BE0               	andlw	224
  2110  0008D2  0908               	iorlw	8
  2111  0008D4  6FE0               	movwf	224,b	;volatile
  2112                           
  2113                           ; BSR set to: 14
  2114                           ;CAN.H: 22: RXF0SIDL = 0;
  2115  0008D6  6BE1               	clrf	225,b	;volatile
  2116                           
  2117                           ;CAN.H: 23: RXF0SIDL = (0x10<<7)|(0x00<<5)|0x08|(board_addr>>4);
  2118  0008D8  3802               	swapf	CANFilterSet@board_addr,w,c
  2119  0008DA  0B0F               	andlw	15
  2120  0008DC  0908               	iorlw	8
  2121  0008DE  6FE1               	movwf	225,b	;volatile
  2122                           
  2123                           ; BSR set to: 14
  2124                           ;CAN.H: 24: RXF0EIDH = 0;
  2125  0008E0  6BE2               	clrf	226,b	;volatile
  2126                           
  2127                           ;CAN.H: 25: RXF0EIDH = (board_addr<<4)|0x0f;
  2128  0008E2  3802               	swapf	CANFilterSet@board_addr,w,c
  2129  0008E4  0BF0               	andlw	240
  2130  0008E6  090F               	iorlw	15
  2131  0008E8  6FE2               	movwf	226,b	;volatile
  2132                           
  2133                           ; BSR set to: 14
  2134                           ;CAN.H: 26: RXF0EIDL = 0;
  2135  0008EA  6BE3               	clrf	227,b	;volatile
  2136                           
  2137                           ; BSR set to: 14
  2138                           ;CAN.H: 27: RXF0EIDL = 0xF0|0x0f;
  2139  0008EC  69E3               	setf	227,b	;volatile
  2140                           
  2141                           ; BSR set to: 14
  2142                           ;CAN.H: 31: RXF1SIDH = RXF0SIDH;
  2143  0008EE  CEE0 FEE4          	movff	3808,3812	;volatile
  2144                           
  2145                           ; BSR set to: 14
  2146                           ;CAN.H: 32: RXF1SIDL = RXF0SIDL;
  2147  0008F2  CEE1 FEE5          	movff	3809,3813	;volatile
  2148                           
  2149                           ; BSR set to: 14
  2150                           ;CAN.H: 33: RXF1EIDH = RXF0EIDH;
  2151  0008F6  CEE2 FEE6          	movff	3810,3814	;volatile
  2152                           
  2153                           ; BSR set to: 14
  2154                           ;CAN.H: 34: RXF1EIDL = RXF0EIDL;
  2155  0008FA  CEE3 FEE7          	movff	3811,3815	;volatile
  2156                           
  2157                           ; BSR set to: 14
  2158                           ;CAN.H: 39: RXF2SIDH = RXF0SIDH;
  2159  0008FE  CEE0 FEE8          	movff	3808,3816	;volatile
  2160                           
  2161                           ; BSR set to: 14
  2162                           ;CAN.H: 40: RXF2SIDL = RXF0SIDL;
  2163  000902  CEE1 FEE9          	movff	3809,3817	;volatile
  2164                           
  2165                           ; BSR set to: 14
  2166                           ;CAN.H: 41: RXF2EIDH = RXF0EIDH;
  2167  000906  CEE2 FEEA          	movff	3810,3818	;volatile
  2168                           
  2169                           ; BSR set to: 14
  2170                           ;CAN.H: 42: RXF2EIDL = RXF0EIDL;
  2171  00090A  CEE3 FEEB          	movff	3811,3819	;volatile
  2172                           
  2173                           ; BSR set to: 14
  2174                           ;CAN.H: 46: RXF3SIDH = RXF0SIDH;
  2175  00090E  CEE0 FEEC          	movff	3808,3820	;volatile
  2176                           
  2177                           ; BSR set to: 14
  2178                           ;CAN.H: 47: RXF3SIDL = RXF0SIDL;
  2179  000912  CEE1 FEED          	movff	3809,3821	;volatile
  2180                           
  2181                           ; BSR set to: 14
  2182                           ;CAN.H: 48: RXF3EIDH = RXF0EIDH;
  2183  000916  CEE2 FEEE          	movff	3810,3822	;volatile
  2184                           
  2185                           ; BSR set to: 14
  2186                           ;CAN.H: 49: RXF3EIDL = RXF0EIDL;
  2187  00091A  CEE3 FEEF          	movff	3811,3823	;volatile
  2188                           
  2189                           ; BSR set to: 14
  2190                           ;CAN.H: 53: RXF4SIDH = 0x68;
  2191  00091E  0E68               	movlw	104
  2192  000920  6FF0               	movwf	240,b	;volatile
  2193                           
  2194                           ; BSR set to: 14
  2195                           ;CAN.H: 54: RXF4SIDL = 0x6a;
  2196  000922  0E6A               	movlw	106
  2197  000924  6FF1               	movwf	241,b	;volatile
  2198                           
  2199                           ; BSR set to: 14
  2200                           ;CAN.H: 55: RXF4EIDH = 0x0f;
  2201  000926  0E0F               	movlw	15
  2202  000928  6FF2               	movwf	242,b	;volatile
  2203                           
  2204                           ; BSR set to: 14
  2205                           ;CAN.H: 56: RXF4EIDL = 0xff;
  2206  00092A  69F3               	setf	243,b	;volatile
  2207                           
  2208                           ; BSR set to: 14
  2209                           ;CAN.H: 59: RXF5SIDH = RXF0SIDH;
  2210  00092C  CEE0 FEF4          	movff	3808,3828	;volatile
  2211                           
  2212                           ; BSR set to: 14
  2213                           ;CAN.H: 60: RXF5SIDL = RXF0SIDL;
  2214  000930  CEE1 FEF5          	movff	3809,3829	;volatile
  2215                           
  2216                           ; BSR set to: 14
  2217                           ;CAN.H: 61: RXF5EIDH = RXF0EIDH;
  2218  000934  CEE2 FEF6          	movff	3810,3830	;volatile
  2219                           
  2220                           ; BSR set to: 14
  2221                           ;CAN.H: 62: RXF5EIDL = RXF0EIDL;
  2222  000938  CEE3 FEF7          	movff	3811,3831	;volatile
  2223                           
  2224                           ; BSR set to: 14
  2225                           ;CAN.H: 65: RXM0SIDH = 0x1f;
  2226  00093C  0E1F               	movlw	31
  2227  00093E  6FF8               	movwf	248,b	;volatile
  2228                           
  2229                           ; BSR set to: 14
  2230                           ;CAN.H: 66: RXM0SIDL = 0x83;
  2231  000940  0E83               	movlw	131
  2232  000942  6FF9               	movwf	249,b	;volatile
  2233                           
  2234                           ; BSR set to: 14
  2235                           ;CAN.H: 67: RXM0EIDH = 0xf0;
  2236  000944  0EF0               	movlw	240
  2237  000946  6FFA               	movwf	250,b	;volatile
  2238                           
  2239                           ; BSR set to: 14
  2240                           ;CAN.H: 68: RXM0EIDL = 0x00;
  2241  000948  6BFB               	clrf	251,b	;volatile
  2242                           
  2243                           ; BSR set to: 14
  2244                           ;CAN.H: 71: RXM1SIDH = 0x1f;
  2245  00094A  0E1F               	movlw	31
  2246  00094C  6FFC               	movwf	252,b	;volatile
  2247                           
  2248                           ; BSR set to: 14
  2249                           ;CAN.H: 72: RXM1SIDL = 0xe3;
  2250  00094E  0EE3               	movlw	227
  2251  000950  6FFD               	movwf	253,b	;volatile
  2252                           
  2253                           ; BSR set to: 14
  2254                           ;CAN.H: 73: RXM1EIDH = 0xf0;
  2255  000952  0EF0               	movlw	240
  2256  000954  6FFE               	movwf	254,b	;volatile
  2257                           
  2258                           ; BSR set to: 14
  2259                           ;CAN.H: 74: RXM1EIDL = 0x00;
  2260  000956  6BFF               	clrf	255,b	;volatile
  2261                           
  2262                           ; BSR set to: 14
  2263  000958  0012               	return	
  2264  00095A                     __end_of_CANFilterSet:
  2265                           	opt stack 0
  2266                           tblptru	equ	0xFF8
  2267                           tblptrh	equ	0xFF7
  2268                           tblptrl	equ	0xFF6
  2269                           tablat	equ	0xFF5
  2270                           prodh	equ	0xFF4
  2271                           prodl	equ	0xFF3
  2272                           intcon	equ	0xFF2
  2273                           postinc0	equ	0xFEE
  2274                           wreg	equ	0xFE8
  2275                           indf1	equ	0xFE7
  2276                           postdec1	equ	0xFE5
  2277                           fsr1h	equ	0xFE2
  2278                           fsr1l	equ	0xFE1
  2279                           indf2	equ	0xFDF
  2280                           postinc2	equ	0xFDE
  2281                           postdec2	equ	0xFDD
  2282                           fsr2h	equ	0xFDA
  2283                           fsr2l	equ	0xFD9
  2284                           status	equ	0xFD8
  2285                           
  2286 ;; *************** function _CANErrClr *****************
  2287 ;; Defined at:
  2288 ;;		line 80 in file "G:\working\YellowFlashingController\CAN.H"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;		None
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;		None
  2293 ;; Return value:  Size  Location     Type
  2294 ;;		None               void
  2295 ;; Registers used:
  2296 ;;		None
  2297 ;; Tracked objects:
  2298 ;;		On entry : F/E
  2299 ;;		On exit  : F/E
  2300 ;;		Unchanged: FFFFFFF0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2306 ;;Total ram usage:        0 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    4
  2309 ;; This function calls:
  2310 ;;		Nothing
  2311 ;; This function is called by:
  2312 ;;		_CANInit
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text6
  2317  000FD0                     __ptext6:
  2318                           	opt stack 0
  2319  000FD0                     _CANErrClr:
  2320                           	opt stack 24
  2321                           
  2322                           ; BSR set to: 14
  2323                           
  2324                           ; BSR set to: 14
  2325  000FD0  0012               	return	
  2326  000FD2                     __end_of_CANErrClr:
  2327                           	opt stack 0
  2328                           tblptru	equ	0xFF8
  2329                           tblptrh	equ	0xFF7
  2330                           tblptrl	equ	0xFF6
  2331                           tablat	equ	0xFF5
  2332                           prodh	equ	0xFF4
  2333                           prodl	equ	0xFF3
  2334                           intcon	equ	0xFF2
  2335                           postinc0	equ	0xFEE
  2336                           wreg	equ	0xFE8
  2337                           indf1	equ	0xFE7
  2338                           postdec1	equ	0xFE5
  2339                           fsr1h	equ	0xFE2
  2340                           fsr1l	equ	0xFE1
  2341                           indf2	equ	0xFDF
  2342                           postinc2	equ	0xFDE
  2343                           postdec2	equ	0xFDD
  2344                           fsr2h	equ	0xFDA
  2345                           fsr2l	equ	0xFD9
  2346                           status	equ	0xFD8
  2347                           
  2348 ;; *************** function _CANSetID *****************
  2349 ;; Defined at:
  2350 ;;		line 89 in file "G:\working\YellowFlashingController\CAN.H"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  board_addr      1    wreg     unsigned char 
  2353 ;;  f_type          1    0[COMRAM] unsigned char 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  board_addr      1    2[COMRAM] unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;		None               void
  2358 ;; Registers used:
  2359 ;;		wreg, status,2, status,0
  2360 ;; Tracked objects:
  2361 ;;		On entry : F/F
  2362 ;;		On exit  : F/F
  2363 ;;		Unchanged: FFFFFFF0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2365 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2367 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2368 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2369 ;;Total ram usage:        3 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    4
  2372 ;; This function calls:
  2373 ;;		Nothing
  2374 ;; This function is called by:
  2375 ;;		_CANInit
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text7
  2380  000CCE                     __ptext7:
  2381                           	opt stack 0
  2382  000CCE                     _CANSetID:
  2383                           	opt stack 24
  2384                           
  2385                           ; BSR set to: 14
  2386                           ;CANSetID@board_addr stored from wreg
  2387  000CCE  CFE8 F003          	movff	wreg,CANSetID@board_addr
  2388                           
  2389                           ; BSR set to: 15
  2390                           ;CAN.H: 91: TXB0SIDH = 0;
  2391  000CD2  6B21               	clrf	33,b	;volatile
  2392                           
  2393                           ; BSR set to: 15
  2394                           ;CAN.H: 92: TXB0SIDH = (f_type<<5)|(board_addr>>1);
  2395  000CD4  C003  F002         	movff	CANSetID@board_addr,??_CANSetID
  2396  000CD8  90D8               	bcf	status,0,c
  2397  000CDA  3202               	rrcf	??_CANSetID,f,c
  2398  000CDC  3801               	swapf	CANSetID@f_type,w,c
  2399  000CDE  46E8               	rlncf	wreg,f,c
  2400  000CE0  0BE0               	andlw	224
  2401  000CE2  1002               	iorwf	??_CANSetID,w,c
  2402  000CE4  6F21               	movwf	33,b	;volatile
  2403                           
  2404                           ; BSR set to: 15
  2405                           ;CAN.H: 93: TXB0SIDL = 0;
  2406  000CE6  6B22               	clrf	34,b	;volatile
  2407                           
  2408                           ;CAN.H: 94: TXB0SIDL = (board_addr<<7)|(0x00<<5)|0x08|(0x10>>4);
  2409  000CE8  4003               	rrncf	CANSetID@board_addr,w,c
  2410  000CEA  0B80               	andlw	128
  2411  000CEC  0909               	iorlw	9
  2412  000CEE  6F22               	movwf	34,b	;volatile
  2413                           
  2414                           ; BSR set to: 15
  2415                           ;CAN.H: 95: TXB0EIDH = 0;
  2416  000CF0  6B23               	clrf	35,b	;volatile
  2417                           
  2418                           ; BSR set to: 15
  2419                           ;CAN.H: 96: TXB0EIDH = (0x10<<4)|0x0f;
  2420  000CF2  0E0F               	movlw	15
  2421  000CF4  6F23               	movwf	35,b	;volatile
  2422                           
  2423                           ; BSR set to: 15
  2424                           ;CAN.H: 97: TXB0EIDL = 0;
  2425  000CF6  6B24               	clrf	36,b	;volatile
  2426                           
  2427                           ; BSR set to: 15
  2428                           ;CAN.H: 98: TXB0EIDL = 0xF0|0x0f;
  2429  000CF8  6924               	setf	36,b	;volatile
  2430                           
  2431                           ; BSR set to: 15
  2432                           ;CAN.H: 101: TXB1SIDH = TXB0SIDH;
  2433  000CFA  CF21 FF11          	movff	3873,3857	;volatile
  2434                           
  2435                           ; BSR set to: 15
  2436                           ;CAN.H: 102: TXB1SIDL = TXB0SIDL;
  2437  000CFE  CF22 FF12          	movff	3874,3858	;volatile
  2438                           
  2439                           ; BSR set to: 15
  2440                           ;CAN.H: 103: TXB1EIDH = TXB0EIDH;
  2441  000D02  CF23 FF13          	movff	3875,3859	;volatile
  2442                           
  2443                           ; BSR set to: 15
  2444                           ;CAN.H: 104: TXB1EIDL = TXB0EIDL;
  2445  000D06  CF24 FF14          	movff	3876,3860	;volatile
  2446                           
  2447                           ; BSR set to: 15
  2448                           ;CAN.H: 107: TXB2SIDH = TXB0SIDH;
  2449  000D0A  CF21 FF01          	movff	3873,3841	;volatile
  2450                           
  2451                           ; BSR set to: 15
  2452                           ;CAN.H: 108: TXB2SIDL = TXB0SIDL;
  2453  000D0E  CF22 FF02          	movff	3874,3842	;volatile
  2454                           
  2455                           ; BSR set to: 15
  2456                           ;CAN.H: 109: TXB2EIDH = TXB0EIDH;
  2457  000D12  CF23 FF03          	movff	3875,3843	;volatile
  2458                           
  2459                           ; BSR set to: 15
  2460                           ;CAN.H: 110: TXB2EIDL = TXB0EIDL;
  2461  000D16  CF24 FF04          	movff	3876,3844	;volatile
  2462                           
  2463                           ; BSR set to: 15
  2464  000D1A  0012               	return	
  2465  000D1C                     __end_of_CANSetID:
  2466                           	opt stack 0
  2467                           tblptru	equ	0xFF8
  2468                           tblptrh	equ	0xFF7
  2469                           tblptrl	equ	0xFF6
  2470                           tablat	equ	0xFF5
  2471                           prodh	equ	0xFF4
  2472                           prodl	equ	0xFF3
  2473                           intcon	equ	0xFF2
  2474                           postinc0	equ	0xFEE
  2475                           wreg	equ	0xFE8
  2476                           indf1	equ	0xFE7
  2477                           postdec1	equ	0xFE5
  2478                           fsr1h	equ	0xFE2
  2479                           fsr1l	equ	0xFE1
  2480                           indf2	equ	0xFDF
  2481                           postinc2	equ	0xFDE
  2482                           postdec2	equ	0xFDD
  2483                           fsr2h	equ	0xFDA
  2484                           fsr2l	equ	0xFD9
  2485                           status	equ	0xFD8
  2486                           
  2487 ;; *************** function _delayms *****************
  2488 ;; Defined at:
  2489 ;;		line 108 in file "G:\working\YellowFlashingController\mcu.h"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;  ms              2    4[COMRAM] unsigned int 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  i               2    6[COMRAM] unsigned int 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;		None               void
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: FFFFFFFF/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2504 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2506 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2507 ;;Total ram usage:        4 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    5
  2510 ;; This function calls:
  2511 ;;		_delayus
  2512 ;; This function is called by:
  2513 ;;		_main
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text8
  2518  000F2A                     __ptext8:
  2519                           	opt stack 0
  2520  000F2A                     _delayms:
  2521                           	opt stack 25
  2522                           
  2523                           ;mcu.h: 109: unsigned int i;
  2524                           ;mcu.h: 112: for(i=0;i<ms;i++)
  2525                           
  2526                           ; BSR set to: 15
  2527  000F2A  6A07               	clrf	delayms@i,c
  2528  000F2C  6A08               	clrf	delayms@i+1,c
  2529  000F2E  D008               	goto	l2791
  2530  000F30                     l2787:
  2531                           
  2532                           ;mcu.h: 113: {
  2533                           ;mcu.h: 114: delayus(997);
  2534  000F30  0E03               	movlw	3
  2535  000F32  6E02               	movwf	?_delayus+1,c
  2536  000F34  0EE5               	movlw	229
  2537  000F36  6E01               	movwf	?_delayus,c
  2538  000F38  ECB7  F007         	call	_delayus	;wreg free
  2539  000F3C  4A07               	infsnz	delayms@i,f,c
  2540  000F3E  2A08               	incf	delayms@i+1,f,c
  2541  000F40                     l2791:
  2542  000F40  5005               	movf	delayms@ms,w,c
  2543  000F42  5C07               	subwf	delayms@i,w,c
  2544  000F44  5006               	movf	delayms@ms+1,w,c
  2545  000F46  5808               	subwfb	delayms@i+1,w,c
  2546  000F48  B0D8               	btfsc	status,0,c
  2547  000F4A  0012               	return	
  2548  000F4C  D7F1               	goto	l2787
  2549  000F4E                     __end_of_delayms:
  2550                           	opt stack 0
  2551                           tblptru	equ	0xFF8
  2552                           tblptrh	equ	0xFF7
  2553                           tblptrl	equ	0xFF6
  2554                           tablat	equ	0xFF5
  2555                           prodh	equ	0xFF4
  2556                           prodl	equ	0xFF3
  2557                           intcon	equ	0xFF2
  2558                           postinc0	equ	0xFEE
  2559                           wreg	equ	0xFE8
  2560                           indf1	equ	0xFE7
  2561                           postdec1	equ	0xFE5
  2562                           fsr1h	equ	0xFE2
  2563                           fsr1l	equ	0xFE1
  2564                           indf2	equ	0xFDF
  2565                           postinc2	equ	0xFDE
  2566                           postdec2	equ	0xFDD
  2567                           fsr2h	equ	0xFDA
  2568                           fsr2l	equ	0xFD9
  2569                           status	equ	0xFD8
  2570                           
  2571 ;; *************** function _delayus *****************
  2572 ;; Defined at:
  2573 ;;		line 92 in file "G:\working\YellowFlashingController\mcu.h"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;  us              2    0[COMRAM] unsigned int 
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;  i               2    2[COMRAM] unsigned int 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;		None               void
  2580 ;; Registers used:
  2581 ;;		wreg, status,2, status,0
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: FFFFFFFF/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2588 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2590 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2591 ;;Total ram usage:        4 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:    4
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_delayms
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text9
  2602  000F6E                     __ptext9:
  2603                           	opt stack 0
  2604  000F6E                     _delayus:
  2605                           	opt stack 25
  2606                           
  2607                           ;mcu.h: 94: unsigned int i;
  2608                           ;mcu.h: 95: us=us-5;
  2609  000F6E  0EFB               	movlw	251
  2610  000F70  2601               	addwf	delayus@us,f,c
  2611  000F72  0EFF               	movlw	255
  2612  000F74  2202               	addwfc	delayus@us+1,f,c
  2613                           
  2614                           ;mcu.h: 97: for(i=0;i<us;i++)
  2615  000F76  6A03               	clrf	delayus@i,c
  2616  000F78  6A04               	clrf	delayus@i+1,c
  2617  000F7A  D002               	goto	l2783
  2618  000F7C                     l2781:
  2619                           
  2620                           ;mcu.h: 98: {
  2621                           ;mcu.h: 99: ;
  2622  000F7C  4A03               	infsnz	delayus@i,f,c
  2623  000F7E  2A04               	incf	delayus@i+1,f,c
  2624  000F80                     l2783:
  2625  000F80  5001               	movf	delayus@us,w,c
  2626  000F82  5C03               	subwf	delayus@i,w,c
  2627  000F84  5002               	movf	delayus@us+1,w,c
  2628  000F86  5804               	subwfb	delayus@i+1,w,c
  2629  000F88  B0D8               	btfsc	status,0,c
  2630  000F8A  0012               	return	
  2631  000F8C  D7F7               	goto	l2781
  2632  000F8E                     __end_of_delayus:
  2633                           	opt stack 0
  2634                           tblptru	equ	0xFF8
  2635                           tblptrh	equ	0xFF7
  2636                           tblptrl	equ	0xFF6
  2637                           tablat	equ	0xFF5
  2638                           prodh	equ	0xFF4
  2639                           prodl	equ	0xFF3
  2640                           intcon	equ	0xFF2
  2641                           postinc0	equ	0xFEE
  2642                           wreg	equ	0xFE8
  2643                           indf1	equ	0xFE7
  2644                           postdec1	equ	0xFE5
  2645                           fsr1h	equ	0xFE2
  2646                           fsr1l	equ	0xFE1
  2647                           indf2	equ	0xFDF
  2648                           postinc2	equ	0xFDE
  2649                           postdec2	equ	0xFDD
  2650                           fsr2h	equ	0xFDA
  2651                           fsr2l	equ	0xFD9
  2652                           status	equ	0xFD8
  2653                           
  2654 ;; *************** function _PORTInit *****************
  2655 ;; Defined at:
  2656 ;;		line 321 in file "G:\working\YellowFlashingController\YellowFlash.C"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;		None               void
  2663 ;; Registers used:
  2664 ;;		wreg, status,2
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : F/F
  2668 ;;		Unchanged: FFFFFFF0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2674 ;;Total ram usage:        0 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    4
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_main
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text10
  2685  000F8E                     __ptext10:
  2686                           	opt stack 0
  2687  000F8E                     _PORTInit:
  2688                           	opt stack 26
  2689                           
  2690                           ;YellowFlash.C: 325: TRISB = 0xe0;
  2691  000F8E  0EE0               	movlw	224
  2692  000F90  6E93               	movwf	3987,c	;volatile
  2693                           
  2694                           ;YellowFlash.C: 326: TRISC = 0x8f;
  2695  000F92  0E8F               	movlw	143
  2696  000F94  6E94               	movwf	3988,c	;volatile
  2697                           
  2698                           ;YellowFlash.C: 327: TRISD = 0xf3;
  2699  000F96  0EF3               	movlw	243
  2700  000F98  6E95               	movwf	3989,c	;volatile
  2701                           
  2702                           ;YellowFlash.C: 329: ANCON1 = 0X00;
  2703  000F9A  010F               	movlb	15	; () banked
  2704  000F9C  6B5C               	clrf	92,b	;volatile
  2705                           
  2706                           ; BSR set to: 15
  2707                           ;YellowFlash.C: 330: RC5=0;
  2708  000F9E  9A82               	bcf	3970,5,c	;volatile
  2709                           
  2710                           ; BSR set to: 15
  2711                           ;YellowFlash.C: 331: RC6=1;
  2712  000FA0  8C82               	bsf	3970,6,c	;volatile
  2713                           
  2714                           ; BSR set to: 15
  2715                           ;YellowFlash.C: 332: RC4=1;
  2716  000FA2  8882               	bsf	3970,4,c	;volatile
  2717                           
  2718                           ; BSR set to: 15
  2719                           ;YellowFlash.C: 333: RD3=1;
  2720  000FA4  8683               	bsf	3971,3,c	;volatile
  2721                           
  2722                           ; BSR set to: 15
  2723  000FA6  0012               	return	
  2724  000FA8                     __end_of_PORTInit:
  2725                           	opt stack 0
  2726                           tblptru	equ	0xFF8
  2727                           tblptrh	equ	0xFF7
  2728                           tblptrl	equ	0xFF6
  2729                           tablat	equ	0xFF5
  2730                           prodh	equ	0xFF4
  2731                           prodl	equ	0xFF3
  2732                           intcon	equ	0xFF2
  2733                           postinc0	equ	0xFEE
  2734                           wreg	equ	0xFE8
  2735                           indf1	equ	0xFE7
  2736                           postdec1	equ	0xFE5
  2737                           fsr1h	equ	0xFE2
  2738                           fsr1l	equ	0xFE1
  2739                           indf2	equ	0xFDF
  2740                           postinc2	equ	0xFDE
  2741                           postdec2	equ	0xFDD
  2742                           fsr2h	equ	0xFDA
  2743                           fsr2l	equ	0xFD9
  2744                           status	equ	0xFD8
  2745                           
  2746 ;; *************** function _IntManager *****************
  2747 ;; Defined at:
  2748 ;;		line 367 in file "G:\working\YellowFlashingController\YellowFlash.C"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;		None
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;		None
  2753 ;; Return value:  Size  Location     Type
  2754 ;;		None               void
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, status,0
  2757 ;; Tracked objects:
  2758 ;;		On entry : F/F
  2759 ;;		On exit  : F/F
  2760 ;;		Unchanged: FFFFFFF0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2766 ;;Total ram usage:        0 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    4
  2769 ;; This function calls:
  2770 ;;		Nothing
  2771 ;; This function is called by:
  2772 ;;		_main
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text11
  2777  000F04                     __ptext11:
  2778                           	opt stack 0
  2779  000F04                     _IntManager:
  2780                           	opt stack 26
  2781                           
  2782                           ; BSR set to: 15
  2783                           ;YellowFlash.C: 369: INTCON |= 0xc0;
  2784                           
  2785                           ; BSR set to: 15
  2786  000F04  0EC0               	movlw	192
  2787  000F06  12F2               	iorwf	intcon,f,c	;volatile
  2788                           
  2789                           ; BSR set to: 15
  2790                           ;YellowFlash.C: 373: TMR0IE = 1;
  2791  000F08  8AF2               	bsf	intcon,5,c	;volatile
  2792                           
  2793                           ; BSR set to: 15
  2794                           ;YellowFlash.C: 374: TMR0IF = 0;
  2795  000F0A  94F2               	bcf	intcon,2,c	;volatile
  2796                           
  2797                           ; BSR set to: 15
  2798                           ;YellowFlash.C: 375: T08BIT = 0;
  2799  000F0C  9CD5               	bcf	4053,6,c	;volatile
  2800                           
  2801                           ; BSR set to: 15
  2802                           ;YellowFlash.C: 376: T0CS = 0;
  2803  000F0E  9AD5               	bcf	4053,5,c	;volatile
  2804                           
  2805                           ; BSR set to: 15
  2806                           ;YellowFlash.C: 378: TMR0H = 0xd8;
  2807  000F10  0ED8               	movlw	216
  2808  000F12  6ED7               	movwf	4055,c	;volatile
  2809                           
  2810                           ; BSR set to: 15
  2811                           ;YellowFlash.C: 379: TMR0L = 0xef;
  2812  000F14  0EEF               	movlw	239
  2813  000F16  6ED6               	movwf	4054,c	;volatile
  2814                           
  2815                           ; BSR set to: 15
  2816                           ;YellowFlash.C: 381: TMR0ON = 1;
  2817  000F18  8ED5               	bsf	4053,7,c	;volatile
  2818                           
  2819                           ; BSR set to: 15
  2820                           ;YellowFlash.C: 384: TMR1IE = 1;
  2821  000F1A  809D               	bsf	3997,0,c	;volatile
  2822                           
  2823                           ; BSR set to: 15
  2824                           ;YellowFlash.C: 385: TMR1IF = 0;
  2825  000F1C  909E               	bcf	3998,0,c	;volatile
  2826                           
  2827                           ; BSR set to: 15
  2828                           ;YellowFlash.C: 386: T1CON = 0x00;
  2829  000F1E  6ACD               	clrf	4045,c	;volatile
  2830                           
  2831                           ; BSR set to: 15
  2832                           ;YellowFlash.C: 388: TMR1H = 0x3c;
  2833  000F20  0E3C               	movlw	60
  2834  000F22  6ECF               	movwf	4047,c	;volatile
  2835                           
  2836                           ; BSR set to: 15
  2837                           ;YellowFlash.C: 389: TMR1L = 0xaf;
  2838  000F24  0EAF               	movlw	175
  2839  000F26  6ECE               	movwf	4046,c	;volatile
  2840                           
  2841                           ; BSR set to: 15
  2842  000F28  0CAF               	retlw	175
  2843  000F2A                     __end_of_IntManager:
  2844                           	opt stack 0
  2845                           tblptru	equ	0xFF8
  2846                           tblptrh	equ	0xFF7
  2847                           tblptrl	equ	0xFF6
  2848                           tablat	equ	0xFF5
  2849                           prodh	equ	0xFF4
  2850                           prodl	equ	0xFF3
  2851                           intcon	equ	0xFF2
  2852                           postinc0	equ	0xFEE
  2853                           wreg	equ	0xFE8
  2854                           indf1	equ	0xFE7
  2855                           postdec1	equ	0xFE5
  2856                           fsr1h	equ	0xFE2
  2857                           fsr1l	equ	0xFE1
  2858                           indf2	equ	0xFDF
  2859                           postinc2	equ	0xFDE
  2860                           postdec2	equ	0xFDD
  2861                           fsr2h	equ	0xFDA
  2862                           fsr2l	equ	0xFD9
  2863                           status	equ	0xFD8
  2864                           
  2865 ;; *************** function _CANDATAAnalyzing *****************
  2866 ;; Defined at:
  2867 ;;		line 552 in file "G:\working\YellowFlashingController\YellowFlash.C"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  id              1    wreg     PTR unsigned char 
  2870 ;;		 -> CANRid(4), 
  2871 ;;  dat             1   52[COMRAM] PTR unsigned char 
  2872 ;;		 -> CANRdata(8), 
  2873 ;;  dlc             1   53[COMRAM] unsigned char 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  id              1   58[COMRAM] PTR unsigned char 
  2876 ;;		 -> CANRid(4), 
  2877 ;; Return value:  Size  Location     Type
  2878 ;;		None               void
  2879 ;; Registers used:
  2880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : F/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2886 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2888 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2889 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2890 ;;Total ram usage:        7 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    8
  2893 ;; This function calls:
  2894 ;;		_CANSendConfirm
  2895 ;;		_CANSendID
  2896 ;;		_CANWriteID
  2897 ;;		_EEPROMRead
  2898 ;;		_CANSend
  2899 ;;		_YFlashNewConfigure
  2900 ;;		_Read_YFlash_CFG
  2901 ;; This function is called by:
  2902 ;;		_main
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text12
  2907  00023A                     __ptext12:
  2908                           	opt stack 0
  2909  00023A                     _CANDATAAnalyzing:
  2910                           	opt stack 22
  2911                           
  2912                           ; BSR set to: 15
  2913                           ;CANDATAAnalyzing@id stored from wreg
  2914  00023A  CFE8 F03B          	movff	wreg,CANDATAAnalyzing@id
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;YellowFlash.C: 559: switch (((dat[0] & 0xc0)>>6))
  2918  00023E  D009               	goto	l2983
  2919  000240                     l556:
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;YellowFlash.C: 562: f_r_mod = 0x00;
  2923  000240  6A46               	clrf	_f_r_mod,c
  2924                           
  2925                           ;YellowFlash.C: 563: break;
  2926  000242  D022               	goto	l2985
  2927  000244                     l2975:
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;YellowFlash.C: 565: f_r_mod = 0x01;
  2931  000244  0E01               	movlw	1
  2932  000246  D003               	goto	L4
  2933  000248                     l2977:
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;YellowFlash.C: 568: f_r_mod = 0x02;
  2937  000248  0E02               	movlw	2
  2938  00024A  D001               	goto	L4
  2939  00024C                     l2979:
  2940                           
  2941                           ; BSR set to: 0
  2942                           ;YellowFlash.C: 571: f_r_mod = 0x03;
  2943  00024C  0E03               	movlw	3
  2944  00024E                     L4:
  2945  00024E  6E46               	movwf	_f_r_mod,c
  2946                           
  2947                           ;YellowFlash.C: 572: break;
  2948  000250  D01B               	goto	l2985
  2949  000252                     l2983:
  2950                           
  2951                           ; BSR set to: 0
  2952  000252  5035               	movf	CANDATAAnalyzing@dat,w,c
  2953  000254  6ED9               	movwf	fsr2l,c
  2954  000256  6ADA               	clrf	fsr2h,c
  2955  000258  50DF               	movf	indf2,w,c
  2956  00025A  6E37               	movwf	??_CANDATAAnalyzing& (0+255),c
  2957  00025C  0E06               	movlw	6
  2958  00025E  6E38               	movwf	(??_CANDATAAnalyzing+1)& (0+255),c
  2959  000260                     u1135:
  2960  000260  90D8               	bcf	status,0,c
  2961  000262  3237               	rrcf	??_CANDATAAnalyzing,f,c
  2962  000264  2E38               	decfsz	(??_CANDATAAnalyzing+1)& (0+255),f,c
  2963  000266  D7FC               	goto	u1135
  2964  000268  0E03               	movlw	3
  2965  00026A  1637               	andwf	??_CANDATAAnalyzing,f,c
  2966  00026C  C037  F039         	movff	??_CANDATAAnalyzing,??_CANDATAAnalyzing+2
  2967  000270  6A3A               	clrf	(??_CANDATAAnalyzing+3)& (0+255),c
  2968                           
  2969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2970                           ; Switch size 1, requested type "space"
  2971                           ; Number of cases is 1, Range of values is 0 to 0
  2972                           ; switch strategies available:
  2973                           ; Name         Instructions Cycles
  2974                           ; simple_byte            4     3 (average)
  2975                           ;	Chosen strategy is simple_byte
  2976  000272  503A               	movf	??_CANDATAAnalyzing+3,w,c
  2977  000274  E1E5               	bnz	l556
  2978                           
  2979                           ; BSR set to: 0
  2980                           ; Switch size 1, requested type "space"
  2981                           ; Number of cases is 4, Range of values is 0 to 3
  2982                           ; switch strategies available:
  2983                           ; Name         Instructions Cycles
  2984                           ; simple_byte           13     7 (average)
  2985                           ;	Chosen strategy is simple_byte
  2986  000276  5039               	movf	??_CANDATAAnalyzing+2,w,c
  2987  000278  E0E3               	bz	l556
  2988  00027A  0A01               	xorlw	1	; case 1
  2989  00027C  E0E3               	bz	l2975
  2990  00027E  0A03               	xorlw	3	; case 2
  2991  000280  E0E3               	bz	l2977
  2992  000282  0A01               	xorlw	1	; case 3
  2993  000284  E0E3               	bz	l2979
  2994  000286  D7DC               	goto	l556
  2995  000288                     l2985:
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;YellowFlash.C: 579: if(((id[1]>>5)&0x03)==0x03)
  2999  000288  503B               	movf	CANDATAAnalyzing@id,w,c
  3000  00028A  6ED9               	movwf	fsr2l,c
  3001  00028C  6ADA               	clrf	fsr2h,c
  3002  00028E  2AD9               	incf	fsr2l,f,c
  3003  000290  6ADA               	clrf	fsr2h,c
  3004  000292  50DF               	movf	indf2,w,c
  3005  000294  6E37               	movwf	??_CANDATAAnalyzing& (0+255),c
  3006  000296  0E05               	movlw	5
  3007  000298  6E38               	movwf	(??_CANDATAAnalyzing+1)& (0+255),c
  3008  00029A                     u1145:
  3009  00029A  90D8               	bcf	status,0,c
  3010  00029C  3237               	rrcf	??_CANDATAAnalyzing,f,c
  3011  00029E  2E38               	decfsz	(??_CANDATAAnalyzing+1)& (0+255),f,c
  3012  0002A0  D7FC               	goto	u1145
  3013  0002A2  5037               	movf	??_CANDATAAnalyzing,w,c
  3014  0002A4  0B03               	andlw	3
  3015  0002A6  0A03               	xorlw	3
  3016  0002A8  E10F               	bnz	l3007
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;YellowFlash.C: 580: {
  3020                           ;YellowFlash.C: 581: if(force_status)
  3021  0002AA  5047               	movf	_force_status,w,c
  3022  0002AC  A4D8               	btfss	status,2,c
  3023  0002AE  0012               	return	
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;YellowFlash.C: 583: else
  3027                           ;YellowFlash.C: 584: {
  3028                           ;YellowFlash.C: 585: heartbeat=0;
  3029  0002B0  6A48               	clrf	_heartbeat,c
  3030                           
  3031                           ;YellowFlash.C: 586: TMR0ON = 1;
  3032  0002B2  8ED5               	bsf	4053,7,c	;volatile
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;YellowFlash.C: 587: T1CON |= 0x00;
  3036  0002B4  50CD               	movf	4045,w,c	;volatile
  3037                           
  3038                           ; BSR set to: 0
  3039                           ;YellowFlash.C: 588: turnoff=0x00;
  3040  0002B6  6A5A               	clrf	_turnoff,c
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;YellowFlash.C: 589: switchmode=0;
  3044  0002B8  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  3045  0002BA  905D               	bcf	_switchmode/(0+8),_switchmode& (0+7),c
  3046                           
  3047                           ;YellowFlash.C: 590: yflash_status=0x00;
  3048  0002BC  6A4E               	clrf	_yflash_status,c
  3049                           
  3050                           ;YellowFlash.C: 591: RC6=1;
  3051  0002BE  8C82               	bsf	3970,6,c	;volatile
  3052                           
  3053                           ;YellowFlash.C: 592: RC4=1;
  3054  0002C0  8882               	bsf	3970,4,c	;volatile
  3055                           
  3056                           ;YellowFlash.C: 593: RD3=1;
  3057  0002C2  8683               	bsf	3971,3,c	;volatile
  3058                           
  3059                           ;YellowFlash.C: 594: RD2=0;
  3060  0002C4  9483               	bcf	3971,2,c	;volatile
  3061  0002C6  0012               	return	
  3062  0002C8                     l3007:
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;YellowFlash.C: 598: else
  3066                           ;YellowFlash.C: 599: {
  3067                           ;YellowFlash.C: 602: if((f_r_mod ==0x02)&&((dat[0] & 0x3f)!=0x02))
  3068  0002C8  5046               	movf	_f_r_mod,w,c
  3069  0002CA  0A02               	xorlw	2
  3070  0002CC  E175               	bnz	l3109
  3071                           
  3072                           ; BSR set to: 0
  3073  0002CE  5035               	movf	CANDATAAnalyzing@dat,w,c
  3074  0002D0  6ED9               	movwf	fsr2l,c
  3075  0002D2  6ADA               	clrf	fsr2h,c
  3076  0002D4  50DF               	movf	indf2,w,c
  3077  0002D6  0B3F               	andlw	63
  3078  0002D8  0A02               	xorlw	2
  3079  0002DA  E06E               	bz	l3109
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;YellowFlash.C: 603: {
  3083                           ;YellowFlash.C: 604: CANSendConfirm();
  3084  0002DC  EC2C  F007         	call	_CANSendConfirm	;wreg free
  3085  0002E0  D06B               	goto	l3109
  3086  0002E2                     l3013:
  3087                           
  3088                           ;YellowFlash.C: 612: if(f_r_mod ==0x01)
  3089  0002E2  0446               	decf	_f_r_mod,w,c
  3090  0002E4  A4D8               	btfss	status,2,c
  3091  0002E6  0012               	return	
  3092                           
  3093                           ;YellowFlash.C: 613: {
  3094                           ;YellowFlash.C: 614: CANSendID(0X00);
  3095  0002E8  0E00               	movlw	0
  3096  0002EA  EFD4  F006         	goto	_CANSendID
  3097  0002EE                     l3017:
  3098                           
  3099                           ;YellowFlash.C: 619: CANWriteID(f_r_mod);
  3100  0002EE  5046               	movf	_f_r_mod,w,c
  3101  0002F0  EF44  F007         	goto	_CANWriteID
  3102  0002F4                     l3019:
  3103                           
  3104                           ;YellowFlash.C: 623: CANSdlc=4;
  3105  0002F4  0E04               	movlw	4
  3106  0002F6  6E59               	movwf	_CANSdlc,c
  3107                           
  3108                           ;YellowFlash.C: 624: CANSdata[0]=0x02;
  3109  0002F8  0E02               	movlw	2
  3110  0002FA  0100               	movlb	0	; () banked
  3111  0002FC  6FE6               	movwf	_CANSdata& (0+255),b
  3112                           
  3113                           ;YellowFlash.C: 625: eeprom_addr = 0x0009;
  3114  0002FE  6A54               	clrf	_eeprom_addr+1,c
  3115  000300  0E09               	movlw	9
  3116  000302  6E53               	movwf	_eeprom_addr,c
  3117                           
  3118                           ;YellowFlash.C: 626: eeprom_num = 2;
  3119  000304  0E02               	movlw	2
  3120  000306  6E5C               	movwf	_eeprom_num,c
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;YellowFlash.C: 627: EEPROMRead(&eeprom_addr,&eeprom_num,(CANSdata+1));
  3124  000308  0E5C               	movlw	low _eeprom_num
  3125  00030A  6E01               	movwf	?_EEPROMRead,c
  3126  00030C  0E00               	movlw	high (_CANSdata+1)
  3127  00030E  6E03               	movwf	?_EEPROMRead+2,c
  3128  000310  0EE7               	movlw	low (_CANSdata+1)
  3129  000312  6E02               	movwf	?_EEPROMRead+1,c
  3130  000314  0E53               	movlw	_eeprom_addr& (0+255)
  3131  000316  ECB3  F006         	call	_EEPROMRead
  3132  00031A  D02D               	goto	L5
  3133  00031C                     l3027:
  3134                           
  3135                           ;YellowFlash.C: 634: YFlashNewConfigure();
  3136  00031C  ECA1  F003         	call	_YFlashNewConfigure	;wreg free
  3137                           
  3138                           ;YellowFlash.C: 636: if(f_r_mod==0x01)
  3139  000320  0446               	decf	_f_r_mod,w,c
  3140  000322  E10F               	bnz	l3039
  3141                           
  3142                           ;YellowFlash.C: 637: {
  3143                           ;YellowFlash.C: 638: CANSdlc=3;
  3144  000324  0E03               	movlw	3
  3145  000326  6E59               	movwf	_CANSdlc,c
  3146                           
  3147                           ;YellowFlash.C: 639: CANSdata[0]=0x03;
  3148  000328  0100               	movlb	0	; () banked
  3149  00032A  6FE6               	movwf	_CANSdata& (0+255),b
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;YellowFlash.C: 640: CANSdata[1]=yflash_CFG[0];
  3153  00032C  C057  F0E7         	movff	_yflash_CFG,_CANSdata+1
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;YellowFlash.C: 641: CANSdata[2]=yflash_CFG[1];
  3157  000330  C058  F0E8         	movff	_yflash_CFG+1,_CANSdata+2
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;YellowFlash.C: 643: CANSend(CANSid,CANSdata,CANSdlc);
  3161  000334  0EE6               	movlw	low _CANSdata
  3162  000336  6E01               	movwf	?_CANSend,c
  3163  000338  C059  F002         	movff	_CANSdlc,?_CANSend+1
  3164  00033C  0E4F               	movlw	_CANSid& (0+255)
  3165  00033E  EC9E  F002         	call	_CANSend
  3166  000342                     l3039:
  3167                           
  3168                           ;YellowFlash.C: 644: }
  3169                           ;YellowFlash.C: 646: Read_YFlash_CFG();
  3170  000342  ECAD  F004         	call	_Read_YFlash_CFG	;wreg free
  3171                           
  3172                           ;YellowFlash.C: 648: INTCON |= 0xc0;
  3173  000346  0EC0               	movlw	192
  3174  000348  12F2               	iorwf	intcon,f,c	;volatile
  3175                           
  3176                           ;YellowFlash.C: 650: TMR0IE = 1;
  3177  00034A  8AF2               	bsf	intcon,5,c	;volatile
  3178                           
  3179                           ;YellowFlash.C: 651: TMR0IF = 0;
  3180  00034C  94F2               	bcf	intcon,2,c	;volatile
  3181                           
  3182                           ;YellowFlash.C: 652: T08BIT = 0;
  3183  00034E  9CD5               	bcf	4053,6,c	;volatile
  3184                           
  3185                           ;YellowFlash.C: 653: T0CS = 0;
  3186  000350  9AD5               	bcf	4053,5,c	;volatile
  3187                           
  3188                           ;YellowFlash.C: 655: TMR0H = 0xd8;
  3189  000352  0ED8               	movlw	216
  3190  000354  6ED7               	movwf	4055,c	;volatile
  3191                           
  3192                           ;YellowFlash.C: 656: TMR0L = 0xef;
  3193  000356  0EEF               	movlw	239
  3194  000358  6ED6               	movwf	4054,c	;volatile
  3195                           
  3196                           ;YellowFlash.C: 658: TMR0ON = 1;
  3197  00035A  8ED5               	bsf	4053,7,c	;volatile
  3198                           
  3199                           ;YellowFlash.C: 660: break;
  3200  00035C  0CEF               	retlw	239
  3201  00035E                     l575:
  3202                           
  3203                           ;YellowFlash.C: 663: yflash_status=CANRdata[1];
  3204  00035E  C0DF  F04E         	movff	_CANRdata+1,_yflash_status
  3205                           
  3206                           ;YellowFlash.C: 664: RD2=1;
  3207  000362  8483               	bsf	3971,2,c	;volatile
  3208                           
  3209                           ;YellowFlash.C: 665: Read_YFlash_CFG();
  3210  000364  ECAD  F004         	call	_Read_YFlash_CFG	;wreg free
  3211                           
  3212                           ;YellowFlash.C: 666: T1CON |= 0x01;
  3213  000368  80CD               	bsf	4045,0,c	;volatile
  3214                           
  3215                           ;YellowFlash.C: 667: turnoff=0x01;
  3216  00036A  0E01               	movlw	1
  3217  00036C  6E5A               	movwf	_turnoff,c
  3218                           
  3219                           ;YellowFlash.C: 668: switchmode=1;
  3220  00036E  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  3221  000370  805D               	bsf	_switchmode/(0+8),_switchmode& (0+7),c
  3222                           
  3223                           ;YellowFlash.C: 669: force_status=0x01;
  3224  000372  6E47               	movwf	_force_status,c
  3225  000374  D014               	goto	L6
  3226  000376                     L5:
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;YellowFlash.C: 676: CANSdata[3]=yflash_status;
  3230  000376  C04E  F0E9         	movff	_yflash_status,_CANSdata+3
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;YellowFlash.C: 677: CANSend(CANSid,CANSdata,CANSdlc);
  3234  00037A  0EE6               	movlw	low _CANSdata
  3235  00037C  6E01               	movwf	?_CANSend,c
  3236  00037E  C059  F002         	movff	_CANSdlc,?_CANSend+1
  3237  000382  0E4F               	movlw	_CANSid& (0+255)
  3238  000384  EF9E  F002         	goto	_CANSend
  3239  000388                     l577:
  3240                           
  3241                           ;YellowFlash.C: 682: yflash_status=0x00;
  3242  000388  6A4E               	clrf	_yflash_status,c
  3243                           
  3244                           ;YellowFlash.C: 683: force_status=0x00;
  3245  00038A  6A47               	clrf	_force_status,c
  3246                           
  3247                           ;YellowFlash.C: 684: T1CON |= 0x00;
  3248  00038C  50CD               	movf	4045,w,c	;volatile
  3249                           
  3250                           ;YellowFlash.C: 685: TMR0ON = 1;
  3251  00038E  8ED5               	bsf	4053,7,c	;volatile
  3252                           
  3253                           ;YellowFlash.C: 686: turnoff=0x00;
  3254  000390  6A5A               	clrf	_turnoff,c
  3255                           
  3256                           ;YellowFlash.C: 687: switchmode=0;
  3257  000392  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  3258  000394  905D               	bcf	_switchmode/(0+8),_switchmode& (0+7),c
  3259                           
  3260                           ;YellowFlash.C: 688: RC6=1;
  3261  000396  8C82               	bsf	3970,6,c	;volatile
  3262                           
  3263                           ;YellowFlash.C: 689: RC4=1;
  3264  000398  8882               	bsf	3970,4,c	;volatile
  3265                           
  3266                           ;YellowFlash.C: 690: RD3=1;
  3267  00039A  8683               	bsf	3971,3,c	;volatile
  3268                           
  3269                           ;YellowFlash.C: 691: RD2=0;
  3270  00039C  9483               	bcf	3971,2,c	;volatile
  3271  00039E                     L6:
  3272                           
  3273                           ;YellowFlash.C: 692: if(f_r_mod==0x01)
  3274  00039E  0446               	decf	_f_r_mod,w,c
  3275  0003A0  A4D8               	btfss	status,2,c
  3276  0003A2  0012               	return	
  3277                           
  3278                           ;YellowFlash.C: 693: {
  3279                           ;YellowFlash.C: 694: CANSdlc=4;
  3280  0003A4  0E04               	movlw	4
  3281  0003A6  6E59               	movwf	_CANSdlc,c
  3282                           
  3283                           ;YellowFlash.C: 695: CANSdata[0]=0x02;
  3284  0003A8  0E02               	movlw	2
  3285  0003AA  0100               	movlb	0	; () banked
  3286  0003AC  6FE6               	movwf	_CANSdata& (0+255),b
  3287                           
  3288                           ; BSR set to: 0
  3289                           ;YellowFlash.C: 696: CANSdata[1]=yflash_CFG[0];
  3290  0003AE  C057  F0E7         	movff	_yflash_CFG,_CANSdata+1
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;YellowFlash.C: 697: CANSdata[2]=yflash_CFG[1];
  3294  0003B2  C058  F0E8         	movff	_yflash_CFG+1,_CANSdata+2
  3295  0003B6  D7DF               	goto	L5
  3296  0003B8                     l3109:
  3297  0003B8  5035               	movf	CANDATAAnalyzing@dat,w,c
  3298  0003BA  6ED9               	movwf	fsr2l,c
  3299  0003BC  6ADA               	clrf	fsr2h,c
  3300  0003BE  50DF               	movf	indf2,w,c
  3301  0003C0  6E37               	movwf	??_CANDATAAnalyzing& (0+255),c
  3302  0003C2  0E3F               	movlw	63
  3303  0003C4  1637               	andwf	??_CANDATAAnalyzing,f,c
  3304  0003C6  C037  F038         	movff	??_CANDATAAnalyzing,??_CANDATAAnalyzing+1
  3305  0003CA  6A39               	clrf	(??_CANDATAAnalyzing+2)& (0+255),c
  3306                           
  3307                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3308                           ; Switch size 1, requested type "space"
  3309                           ; Number of cases is 1, Range of values is 0 to 0
  3310                           ; switch strategies available:
  3311                           ; Name         Instructions Cycles
  3312                           ; simple_byte            4     3 (average)
  3313                           ;	Chosen strategy is simple_byte
  3314  0003CC  5039               	movf	??_CANDATAAnalyzing+2,w,c
  3315  0003CE  A4D8               	btfss	status,2,c
  3316  0003D0  0012               	return	
  3317                           
  3318                           ; Switch size 1, requested type "space"
  3319                           ; Number of cases is 6, Range of values is 0 to 5
  3320                           ; switch strategies available:
  3321                           ; Name         Instructions Cycles
  3322                           ; simple_byte           19    10 (average)
  3323                           ;	Chosen strategy is simple_byte
  3324  0003D2  5038               	movf	??_CANDATAAnalyzing+1,w,c
  3325  0003D4  E086               	bz	l3013
  3326  0003D6  0A01               	xorlw	1	; case 1
  3327  0003D8  E08A               	bz	l3017
  3328  0003DA  0A03               	xorlw	3	; case 2
  3329  0003DC  E08B               	bz	l3019
  3330  0003DE  0A01               	xorlw	1	; case 3
  3331  0003E0  E09D               	bz	l3027
  3332  0003E2  0A07               	xorlw	7	; case 4
  3333  0003E4  E0BC               	bz	l575
  3334  0003E6  0A01               	xorlw	1	; case 5
  3335  0003E8  A4D8               	btfss	status,2,c
  3336  0003EA  0012               	return	
  3337  0003EC  D7CD               	goto	l577
  3338  0003EE                     __end_of_CANDATAAnalyzing:
  3339                           	opt stack 0
  3340                           tblptru	equ	0xFF8
  3341                           tblptrh	equ	0xFF7
  3342                           tblptrl	equ	0xFF6
  3343                           tablat	equ	0xFF5
  3344                           prodh	equ	0xFF4
  3345                           prodl	equ	0xFF3
  3346                           intcon	equ	0xFF2
  3347                           postinc0	equ	0xFEE
  3348                           wreg	equ	0xFE8
  3349                           indf1	equ	0xFE7
  3350                           postdec1	equ	0xFE5
  3351                           fsr1h	equ	0xFE2
  3352                           fsr1l	equ	0xFE1
  3353                           indf2	equ	0xFDF
  3354                           postinc2	equ	0xFDE
  3355                           postdec2	equ	0xFDD
  3356                           fsr2h	equ	0xFDA
  3357                           fsr2l	equ	0xFD9
  3358                           status	equ	0xFD8
  3359                           
  3360 ;; *************** function _CANSendConfirm *****************
  3361 ;; Defined at:
  3362 ;;		line 403 in file "G:\working\YellowFlashingController\YellowFlash.C"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;		None
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;  i               1    2[COMRAM] unsigned char 
  3367 ;; Return value:  Size  Location     Type
  3368 ;;		None               void
  3369 ;; Registers used:
  3370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3371 ;; Tracked objects:
  3372 ;;		On entry : F/0
  3373 ;;		On exit  : F/F
  3374 ;;		Unchanged: FFFFFFF0/0
  3375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3377 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3380 ;;Total ram usage:        1 bytes
  3381 ;; Hardware stack levels used:    1
  3382 ;; Hardware stack levels required when called:    5
  3383 ;; This function calls:
  3384 ;;		_CANSend
  3385 ;; This function is called by:
  3386 ;;		_CANDATAAnalyzing
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text13
  3391  000E58                     __ptext13:
  3392                           	opt stack 0
  3393  000E58                     _CANSendConfirm:
  3394                           	opt stack 24
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;YellowFlash.C: 404: unsigned char i;
  3398                           ;YellowFlash.C: 406: for(i=0;i<8;i++)
  3399  000E58  6A03               	clrf	CANSendConfirm@i,c
  3400  000E5A                     l2859:
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;YellowFlash.C: 407: {
  3404                           ;YellowFlash.C: 408: CANSdata[i] = CANRdata[i];
  3405  000E5A  5003               	movf	CANSendConfirm@i,w,c
  3406  000E5C  0FDE               	addlw	low _CANRdata
  3407  000E5E  6ED9               	movwf	fsr2l,c
  3408  000E60  6ADA               	clrf	fsr2h,c
  3409  000E62  5003               	movf	CANSendConfirm@i,w,c
  3410  000E64  0FE6               	addlw	low _CANSdata
  3411  000E66  6EE1               	movwf	fsr1l,c
  3412  000E68  6AE2               	clrf	fsr1h,c
  3413  000E6A  CFDF FFE7          	movff	indf2,indf1
  3414                           
  3415                           ; BSR set to: 0
  3416  000E6E  2A03               	incf	CANSendConfirm@i,f,c
  3417                           
  3418                           ; BSR set to: 0
  3419  000E70  0E07               	movlw	7
  3420  000E72  6403               	cpfsgt	CANSendConfirm@i,c
  3421  000E74  D7F2               	goto	l2859
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;YellowFlash.C: 409: }
  3425                           ;YellowFlash.C: 410: CANSdlc = CANRdlc;
  3426  000E76  C05B  F059         	movff	_CANRdlc,_CANSdlc
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;YellowFlash.C: 411: CANSend(CANSid,CANSdata,CANSdlc);
  3430  000E7A  0EE6               	movlw	low _CANSdata
  3431  000E7C  6E01               	movwf	?_CANSend,c
  3432  000E7E  C059  F002         	movff	_CANSdlc,?_CANSend+1
  3433  000E82  0E4F               	movlw	_CANSid& (0+255)
  3434  000E84  EF9E  F002         	goto	_CANSend
  3435  000E88                     __end_of_CANSendConfirm:
  3436                           	opt stack 0
  3437                           tblptru	equ	0xFF8
  3438                           tblptrh	equ	0xFF7
  3439                           tblptrl	equ	0xFF6
  3440                           tablat	equ	0xFF5
  3441                           prodh	equ	0xFF4
  3442                           prodl	equ	0xFF3
  3443                           intcon	equ	0xFF2
  3444                           postinc0	equ	0xFEE
  3445                           wreg	equ	0xFE8
  3446                           indf1	equ	0xFE7
  3447                           postdec1	equ	0xFE5
  3448                           fsr1h	equ	0xFE2
  3449                           fsr1l	equ	0xFE1
  3450                           indf2	equ	0xFDF
  3451                           postinc2	equ	0xFDE
  3452                           postdec2	equ	0xFDD
  3453                           fsr2h	equ	0xFDA
  3454                           fsr2l	equ	0xFD9
  3455                           status	equ	0xFD8
  3456                           
  3457 ;; *************** function _CANWriteID *****************
  3458 ;; Defined at:
  3459 ;;		line 434 in file "G:\working\YellowFlashingController\YellowFlash.C"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  fm              1    wreg     unsigned char 
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;  fm              1    5[COMRAM] unsigned char 
  3464 ;; Return value:  Size  Location     Type
  3465 ;;		None               void
  3466 ;; Registers used:
  3467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3476 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3477 ;;Total ram usage:        1 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:    6
  3480 ;; This function calls:
  3481 ;;		_EEPROMWrite
  3482 ;;		_CANSendID
  3483 ;; This function is called by:
  3484 ;;		_CANDATAAnalyzing
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text14
  3489  000E88                     __ptext14:
  3490                           	opt stack 0
  3491  000E88                     _CANWriteID:
  3492                           	opt stack 23
  3493                           
  3494                           ; BSR set to: 15
  3495                           ;CANWriteID@fm stored from wreg
  3496  000E88  CFE8 F006          	movff	wreg,CANWriteID@fm
  3497                           
  3498                           ;YellowFlash.C: 435: eeprom_addr = 0x0000;
  3499  000E8C  6A53               	clrf	_eeprom_addr,c
  3500  000E8E  6A54               	clrf	_eeprom_addr+1,c
  3501                           
  3502                           ;YellowFlash.C: 436: eeprom_num = 4;
  3503  000E90  0E04               	movlw	4
  3504  000E92  6E5C               	movwf	_eeprom_num,c
  3505                           
  3506                           ;YellowFlash.C: 437: EEPROMWrite(&eeprom_addr,&eeprom_num,(CANRdata+1));
  3507  000E94  0E5C               	movlw	low _eeprom_num
  3508  000E96  6E01               	movwf	?_EEPROMWrite,c
  3509  000E98  0100               	movlb	0	; () banked
  3510  000E9A  0E00               	movlw	high (_CANRdata+1)
  3511  000E9C  6E03               	movwf	?_EEPROMWrite+2,c
  3512  000E9E  0EDF               	movlw	low (_CANRdata+1)
  3513  000EA0  6E02               	movwf	?_EEPROMWrite+1,c
  3514  000EA2  0E53               	movlw	_eeprom_addr& (0+255)
  3515  000EA4  ECBA  F005         	call	_EEPROMWrite
  3516                           
  3517                           ;YellowFlash.C: 438: if(fm==0x01)
  3518  000EA8  0406               	decf	CANWriteID@fm,w,c
  3519  000EAA  A4D8               	btfss	status,2,c
  3520  000EAC  0012               	return	
  3521                           
  3522                           ;YellowFlash.C: 439: {
  3523                           ;YellowFlash.C: 440: CANSendID(0X01);
  3524  000EAE  0E01               	movlw	1
  3525  000EB0  EFD4  F006         	goto	_CANSendID
  3526  000EB4                     __end_of_CANWriteID:
  3527                           	opt stack 0
  3528                           tblptru	equ	0xFF8
  3529                           tblptrh	equ	0xFF7
  3530                           tblptrl	equ	0xFF6
  3531                           tablat	equ	0xFF5
  3532                           prodh	equ	0xFF4
  3533                           prodl	equ	0xFF3
  3534                           intcon	equ	0xFF2
  3535                           postinc0	equ	0xFEE
  3536                           wreg	equ	0xFE8
  3537                           indf1	equ	0xFE7
  3538                           postdec1	equ	0xFE5
  3539                           fsr1h	equ	0xFE2
  3540                           fsr1l	equ	0xFE1
  3541                           indf2	equ	0xFDF
  3542                           postinc2	equ	0xFDE
  3543                           postdec2	equ	0xFDD
  3544                           fsr2h	equ	0xFDA
  3545                           fsr2l	equ	0xFD9
  3546                           status	equ	0xFD8
  3547                           
  3548 ;; *************** function _CANSendID *****************
  3549 ;; Defined at:
  3550 ;;		line 416 in file "G:\working\YellowFlashingController\YellowFlash.C"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  sm              1    wreg     unsigned char 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;  sm              1    4[COMRAM] unsigned char 
  3555 ;; Return value:  Size  Location     Type
  3556 ;;		None               void
  3557 ;; Registers used:
  3558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : F/F
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3565 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3567 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3568 ;;Total ram usage:        1 bytes
  3569 ;; Hardware stack levels used:    1
  3570 ;; Hardware stack levels required when called:    5
  3571 ;; This function calls:
  3572 ;;		_EEPROMRead
  3573 ;;		_CANSend
  3574 ;; This function is called by:
  3575 ;;		_CANWriteID
  3576 ;;		_CANDATAAnalyzing
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text15
  3581  000DA8                     __ptext15:
  3582                           	opt stack 0
  3583  000DA8                     _CANSendID:
  3584                           	opt stack 23
  3585                           
  3586                           ;CANSendID@sm stored from wreg
  3587  000DA8  CFE8 F005          	movff	wreg,CANSendID@sm
  3588                           
  3589                           ;YellowFlash.C: 418: CANSdlc = 4 + 1;
  3590  000DAC  0E05               	movlw	5
  3591  000DAE  6E59               	movwf	_CANSdlc,c
  3592                           
  3593                           ;YellowFlash.C: 420: if(sm == 0X00)
  3594  000DB0  6605               	tstfsz	CANSendID@sm,c
  3595  000DB2  D003               	goto	l2873
  3596                           
  3597                           ;YellowFlash.C: 421: CANSdata[0] = 0X00;
  3598  000DB4  0100               	movlb	0	; () banked
  3599  000DB6  6BE6               	clrf	_CANSdata& (0+255),b
  3600  000DB8  D003               	goto	l2875
  3601  000DBA                     l2873:
  3602                           
  3603                           ;YellowFlash.C: 422: else
  3604                           ;YellowFlash.C: 423: CANSdata[0] = 0X01;
  3605  000DBA  0E01               	movlw	1
  3606  000DBC  0100               	movlb	0	; () banked
  3607  000DBE  6FE6               	movwf	_CANSdata& (0+255),b
  3608  000DC0                     l2875:
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;YellowFlash.C: 426: eeprom_addr = 0x0000;
  3612  000DC0  6A53               	clrf	_eeprom_addr,c
  3613  000DC2  6A54               	clrf	_eeprom_addr+1,c
  3614                           
  3615                           ;YellowFlash.C: 427: eeprom_num = 4;
  3616  000DC4  0E04               	movlw	4
  3617  000DC6  6E5C               	movwf	_eeprom_num,c
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;YellowFlash.C: 428: EEPROMRead(&eeprom_addr,&eeprom_num,(CANSdata+1));
  3621  000DC8  0E5C               	movlw	low _eeprom_num
  3622  000DCA  6E01               	movwf	?_EEPROMRead,c
  3623  000DCC  0E00               	movlw	high (_CANSdata+1)
  3624  000DCE  6E03               	movwf	?_EEPROMRead+2,c
  3625  000DD0  0EE7               	movlw	low (_CANSdata+1)
  3626  000DD2  6E02               	movwf	?_EEPROMRead+1,c
  3627  000DD4  0E53               	movlw	_eeprom_addr& (0+255)
  3628  000DD6  ECB3  F006         	call	_EEPROMRead
  3629                           
  3630                           ;YellowFlash.C: 429: CANSend(CANSid,CANSdata,CANSdlc);
  3631  000DDA  0EE6               	movlw	low _CANSdata
  3632  000DDC  6E01               	movwf	?_CANSend,c
  3633  000DDE  C059  F002         	movff	_CANSdlc,?_CANSend+1
  3634  000DE2  0E4F               	movlw	_CANSid& (0+255)
  3635  000DE4  EF9E  F002         	goto	_CANSend
  3636  000DE8                     __end_of_CANSendID:
  3637                           	opt stack 0
  3638                           tblptru	equ	0xFF8
  3639                           tblptrh	equ	0xFF7
  3640                           tblptrl	equ	0xFF6
  3641                           tablat	equ	0xFF5
  3642                           prodh	equ	0xFF4
  3643                           prodl	equ	0xFF3
  3644                           intcon	equ	0xFF2
  3645                           postinc0	equ	0xFEE
  3646                           wreg	equ	0xFE8
  3647                           indf1	equ	0xFE7
  3648                           postdec1	equ	0xFE5
  3649                           fsr1h	equ	0xFE2
  3650                           fsr1l	equ	0xFE1
  3651                           indf2	equ	0xFDF
  3652                           postinc2	equ	0xFDE
  3653                           postdec2	equ	0xFDD
  3654                           fsr2h	equ	0xFDA
  3655                           fsr2l	equ	0xFD9
  3656                           status	equ	0xFD8
  3657                           
  3658 ;; *************** function _CANSend *****************
  3659 ;; Defined at:
  3660 ;;		line 163 in file "G:\working\YellowFlashingController\CAN.H"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  id              1    wreg     PTR unsigned char 
  3663 ;;		 -> CANSid(4), 
  3664 ;;  dat             1    0[COMRAM] PTR unsigned char 
  3665 ;;		 -> CANSdata(8), 
  3666 ;;  dlc             1    1[COMRAM] unsigned char 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  id              1    0[COMRAM] PTR unsigned char 
  3669 ;;		 -> CANSid(4), 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      unsigned char 
  3672 ;; Registers used:
  3673 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3674 ;; Tracked objects:
  3675 ;;		On entry : F/0
  3676 ;;		On exit  : F/F
  3677 ;;		Unchanged: FFFFFFF0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3683 ;;Total ram usage:        2 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    4
  3686 ;; This function calls:
  3687 ;;		Nothing
  3688 ;; This function is called by:
  3689 ;;		_CANSendConfirm
  3690 ;;		_CANSendID
  3691 ;;		_CANDATAAnalyzing
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text16
  3696  00053C                     __ptext16:
  3697                           	opt stack 0
  3698  00053C                     _CANSend:
  3699                           	opt stack 25
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;CAN.H: 165: if(!(TXB0CON & 0x80))
  3703                           
  3704                           ; BSR set to: 15
  3705  00053C  010F               	movlb	15	; () banked
  3706  00053E  BF20               	btfsc	32,7,b	;volatile
  3707  000540  D019               	goto	l347
  3708                           
  3709                           ; BSR set to: 15
  3710                           ;CAN.H: 166: {
  3711                           ;CAN.H: 176: TXB0DLC = dlc;
  3712  000542  C002  FF25         	movff	CANSend@dlc,3877	;volatile
  3713                           
  3714                           ; BSR set to: 15
  3715                           ;CAN.H: 179: TXB0D0 = dat[0];
  3716  000546  5001               	movf	CANSend@dat,w,c
  3717  000548  6ED9               	movwf	fsr2l,c
  3718  00054A  6ADA               	clrf	fsr2h,c
  3719  00054C  50DF               	movf	indf2,w,c
  3720  00054E  6F26               	movwf	38,b	;volatile
  3721                           
  3722                           ; BSR set to: 15
  3723                           ;CAN.H: 180: TXB0D1 = dat[1];
  3724  000550  D877               	call	PL23	;call to abstracted procedure
  3725  000552  6F27               	movwf	39,b	;volatile
  3726                           
  3727                           ; BSR set to: 15
  3728                           ;CAN.H: 181: TXB0D2 = dat[2];
  3729  000554  D845               	call	PL11	;call to abstracted procedure
  3730  000556  6F28               	movwf	40,b	;volatile
  3731                           
  3732                           ; BSR set to: 15
  3733                           ;CAN.H: 182: TXB0D3 = dat[3];
  3734  000558  D84B               	call	PL12	;call to abstracted procedure
  3735  00055A  6F29               	movwf	41,b	;volatile
  3736                           
  3737                           ; BSR set to: 15
  3738                           ;CAN.H: 183: TXB0D4 = dat[4];
  3739  00055C  D859               	call	PL14	;call to abstracted procedure
  3740  00055E  6F2A               	movwf	42,b	;volatile
  3741                           
  3742                           ; BSR set to: 15
  3743                           ;CAN.H: 184: TXB0D5 = dat[5];
  3744  000560  D84F               	call	PL13	;call to abstracted procedure
  3745  000562  6F2B               	movwf	43,b	;volatile
  3746                           
  3747                           ; BSR set to: 15
  3748                           ;CAN.H: 185: TXB0D6 = dat[6];
  3749  000564  D85D               	call	PL15	;call to abstracted procedure
  3750  000566  6F2C               	movwf	44,b	;volatile
  3751                           
  3752                           ; BSR set to: 15
  3753                           ;CAN.H: 186: TXB0D7 = dat[7];
  3754  000568  D863               	call	PL16	;call to abstracted procedure
  3755  00056A  6F2D               	movwf	45,b	;volatile
  3756                           
  3757                           ; BSR set to: 15
  3758                           ;CAN.H: 189: TXB0CON |= 0x08;
  3759  00056C  8720               	bsf	32,3,b	;volatile
  3760  00056E                     l348:
  3761                           
  3762                           ; BSR set to: 15
  3763  00056E  A720               	btfss	32,3,b	;volatile
  3764  000570  0012               	return	
  3765  000572  D7FD               	goto	l348
  3766  000574                     l347:
  3767                           
  3768                           ; BSR set to: 15
  3769                           ;CAN.H: 192: }
  3770                           ;CAN.H: 194: if(!(TXB1CON & 0x80))
  3771  000574  BF10               	btfsc	16,7,b	;volatile
  3772  000576  D019               	goto	l352
  3773                           
  3774                           ; BSR set to: 15
  3775                           ;CAN.H: 195: {
  3776                           ;CAN.H: 205: TXB1DLC = dlc;
  3777  000578  C002  FF15         	movff	CANSend@dlc,3861	;volatile
  3778                           
  3779                           ; BSR set to: 15
  3780                           ;CAN.H: 208: TXB1D0 = dat[0];
  3781  00057C  5001               	movf	CANSend@dat,w,c
  3782  00057E  6ED9               	movwf	fsr2l,c
  3783  000580  6ADA               	clrf	fsr2h,c
  3784  000582  50DF               	movf	indf2,w,c
  3785  000584  6F16               	movwf	22,b	;volatile
  3786                           
  3787                           ; BSR set to: 15
  3788                           ;CAN.H: 209: TXB1D1 = dat[1];
  3789  000586  D85C               	call	PL23	;call to abstracted procedure
  3790  000588  6F17               	movwf	23,b	;volatile
  3791                           
  3792                           ; BSR set to: 15
  3793                           ;CAN.H: 210: TXB1D2 = dat[2];
  3794  00058A  D82A               	call	PL11	;call to abstracted procedure
  3795  00058C  6F18               	movwf	24,b	;volatile
  3796                           
  3797                           ; BSR set to: 15
  3798                           ;CAN.H: 211: TXB1D3 = dat[3];
  3799  00058E  D830               	call	PL12	;call to abstracted procedure
  3800  000590  6F19               	movwf	25,b	;volatile
  3801                           
  3802                           ; BSR set to: 15
  3803                           ;CAN.H: 212: TXB1D4 = dat[4];
  3804  000592  D83E               	call	PL14	;call to abstracted procedure
  3805  000594  6F1A               	movwf	26,b	;volatile
  3806                           
  3807                           ; BSR set to: 15
  3808                           ;CAN.H: 213: TXB1D5 = dat[5];
  3809  000596  D834               	call	PL13	;call to abstracted procedure
  3810  000598  6F1B               	movwf	27,b	;volatile
  3811                           
  3812                           ; BSR set to: 15
  3813                           ;CAN.H: 214: TXB1D6 = dat[6];
  3814  00059A  D842               	call	PL15	;call to abstracted procedure
  3815  00059C  6F1C               	movwf	28,b	;volatile
  3816                           
  3817                           ; BSR set to: 15
  3818                           ;CAN.H: 215: TXB1D7 = dat[7];
  3819  00059E  D848               	call	PL16	;call to abstracted procedure
  3820  0005A0  6F1D               	movwf	29,b	;volatile
  3821                           
  3822                           ; BSR set to: 15
  3823                           ;CAN.H: 218: TXB0CON |= 0x08;
  3824  0005A2  8720               	bsf	32,3,b	;volatile
  3825  0005A4                     l353:
  3826                           
  3827                           ; BSR set to: 15
  3828  0005A4  A720               	btfss	32,3,b	;volatile
  3829  0005A6  0012               	return	
  3830  0005A8  D7FD               	goto	l353
  3831  0005AA                     l352:
  3832                           
  3833                           ; BSR set to: 15
  3834                           ;CAN.H: 221: }
  3835                           ;CAN.H: 223: if(!(TXB2CON & 0x80))
  3836  0005AA  BF00               	btfsc	0,7,b	;volatile
  3837  0005AC  0012               	return	
  3838                           
  3839                           ; BSR set to: 15
  3840                           ;CAN.H: 224: {
  3841                           ;CAN.H: 234: TXB2DLC = dlc;
  3842  0005AE  C002  FF05         	movff	CANSend@dlc,3845	;volatile
  3843                           
  3844                           ; BSR set to: 15
  3845                           ;CAN.H: 237: TXB2D0 = dat[0];
  3846  0005B2  5001               	movf	CANSend@dat,w,c
  3847  0005B4  6ED9               	movwf	fsr2l,c
  3848  0005B6  6ADA               	clrf	fsr2h,c
  3849  0005B8  50DF               	movf	indf2,w,c
  3850  0005BA  6F06               	movwf	6,b	;volatile
  3851                           
  3852                           ; BSR set to: 15
  3853                           ;CAN.H: 238: TXB2D1 = dat[1];
  3854  0005BC  D841               	call	PL23	;call to abstracted procedure
  3855  0005BE  6F07               	movwf	7,b	;volatile
  3856                           
  3857                           ; BSR set to: 15
  3858                           ;CAN.H: 239: TXB2D2 = dat[2];
  3859  0005C0  D80F               	call	PL11	;call to abstracted procedure
  3860  0005C2  6F08               	movwf	8,b	;volatile
  3861                           
  3862                           ; BSR set to: 15
  3863                           ;CAN.H: 240: TXB2D3 = dat[3];
  3864  0005C4  D815               	call	PL12	;call to abstracted procedure
  3865  0005C6  6F09               	movwf	9,b	;volatile
  3866                           
  3867                           ; BSR set to: 15
  3868                           ;CAN.H: 241: TXB2D4 = dat[4];
  3869  0005C8  D823               	call	PL14	;call to abstracted procedure
  3870  0005CA  6F0A               	movwf	10,b	;volatile
  3871                           
  3872                           ; BSR set to: 15
  3873                           ;CAN.H: 242: TXB2D5 = dat[5];
  3874  0005CC  D819               	call	PL13	;call to abstracted procedure
  3875  0005CE  6F0B               	movwf	11,b	;volatile
  3876                           
  3877                           ; BSR set to: 15
  3878                           ;CAN.H: 243: TXB2D6 = dat[6];
  3879  0005D0  D827               	call	PL15	;call to abstracted procedure
  3880  0005D2  6F0C               	movwf	12,b	;volatile
  3881                           
  3882                           ; BSR set to: 15
  3883                           ;CAN.H: 244: TXB2D7 = dat[7];
  3884  0005D4  D82D               	call	PL16	;call to abstracted procedure
  3885  0005D6  6F0D               	movwf	13,b	;volatile
  3886                           
  3887                           ; BSR set to: 15
  3888                           ;CAN.H: 247: TXB2CON |= 0x08;
  3889  0005D8  8700               	bsf	0,3,b	;volatile
  3890  0005DA                     l357:
  3891                           
  3892                           ; BSR set to: 15
  3893  0005DA  A700               	btfss	0,3,b	;volatile
  3894                           
  3895                           ; BSR set to: 15
  3896  0005DC  0012               	return	
  3897  0005DE  D7FD               	goto	l357
  3898  0005E0                     __end_of_CANSend:
  3899                           	opt stack 0
  3900  0005E0                     PL11:
  3901  0005E0  5001               	movf	CANSend@dat,w,c
  3902  0005E2  6ED9               	movwf	fsr2l,c
  3903  0005E4  6ADA               	clrf	fsr2h,c
  3904  0005E6  0E02               	movlw	2
  3905  0005E8  26D9               	addwf	fsr2l,f,c
  3906  0005EA  6ADA               	clrf	fsr2h,c
  3907  0005EC  50DF               	movf	indf2,w,c
  3908  0005EE  0012               	return	
  3909  0005F0                     PL12:
  3910  0005F0  5001               	movf	CANSend@dat,w,c
  3911  0005F2  6ED9               	movwf	fsr2l,c
  3912  0005F4  6ADA               	clrf	fsr2h,c
  3913  0005F6  0E03               	movlw	3
  3914  0005F8  26D9               	addwf	fsr2l,f,c
  3915  0005FA  6ADA               	clrf	fsr2h,c
  3916  0005FC  50DF               	movf	indf2,w,c
  3917  0005FE  0012               	return	
  3918  000600                     PL13:
  3919  000600  5001               	movf	CANSend@dat,w,c
  3920  000602  6ED9               	movwf	fsr2l,c
  3921  000604  6ADA               	clrf	fsr2h,c
  3922  000606  0E05               	movlw	5
  3923  000608  26D9               	addwf	fsr2l,f,c
  3924  00060A  6ADA               	clrf	fsr2h,c
  3925  00060C  50DF               	movf	indf2,w,c
  3926  00060E  0012               	return	
  3927  000610                     PL14:
  3928  000610  5001               	movf	CANSend@dat,w,c
  3929  000612  6ED9               	movwf	fsr2l,c
  3930  000614  6ADA               	clrf	fsr2h,c
  3931  000616  0E04               	movlw	4
  3932  000618  26D9               	addwf	fsr2l,f,c
  3933  00061A  6ADA               	clrf	fsr2h,c
  3934  00061C  50DF               	movf	indf2,w,c
  3935  00061E  0012               	return	
  3936  000620                     PL15:
  3937  000620  5001               	movf	CANSend@dat,w,c
  3938  000622  6ED9               	movwf	fsr2l,c
  3939  000624  6ADA               	clrf	fsr2h,c
  3940  000626  0E06               	movlw	6
  3941  000628  26D9               	addwf	fsr2l,f,c
  3942  00062A  6ADA               	clrf	fsr2h,c
  3943  00062C  50DF               	movf	indf2,w,c
  3944  00062E  0012               	return	
  3945  000630                     PL16:
  3946  000630  5001               	movf	CANSend@dat,w,c
  3947  000632  6ED9               	movwf	fsr2l,c
  3948  000634  6ADA               	clrf	fsr2h,c
  3949  000636  0E07               	movlw	7
  3950  000638  26D9               	addwf	fsr2l,f,c
  3951  00063A  6ADA               	clrf	fsr2h,c
  3952  00063C  50DF               	movf	indf2,w,c
  3953  00063E  0012               	return	
  3954  000640                     PL23:
  3955  000640  5001               	movf	CANSend@dat,w,c
  3956  000642  6ED9               	movwf	fsr2l,c
  3957  000644  6ADA               	clrf	fsr2h,c
  3958  000646  2AD9               	incf	fsr2l,f,c
  3959  000648  6ADA               	clrf	fsr2h,c
  3960  00064A  50DF               	movf	indf2,w,c
  3961  00064C  0012               	return	
  3962                           tblptru	equ	0xFF8
  3963                           tblptrh	equ	0xFF7
  3964                           tblptrl	equ	0xFF6
  3965                           tablat	equ	0xFF5
  3966                           prodh	equ	0xFF4
  3967                           prodl	equ	0xFF3
  3968                           intcon	equ	0xFF2
  3969                           postinc0	equ	0xFEE
  3970                           wreg	equ	0xFE8
  3971                           indf1	equ	0xFE7
  3972                           postdec1	equ	0xFE5
  3973                           fsr1h	equ	0xFE2
  3974                           fsr1l	equ	0xFE1
  3975                           indf2	equ	0xFDF
  3976                           postinc2	equ	0xFDE
  3977                           postdec2	equ	0xFDD
  3978                           fsr2h	equ	0xFDA
  3979                           fsr2l	equ	0xFD9
  3980                           status	equ	0xFD8
  3981                           
  3982 ;; *************** function _YFlashNewConfigure *****************
  3983 ;; Defined at:
  3984 ;;		line 500 in file "G:\working\YellowFlashingController\YellowFlash.C"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;		None               void
  3991 ;; Registers used:
  3992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4002 ;;Total ram usage:        0 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    7
  4005 ;; This function calls:
  4006 ;;		_EEPROMRead
  4007 ;;		_EEPROMWrite
  4008 ;;		_CalculateTime25msCounter
  4009 ;; This function is called by:
  4010 ;;		_CANDATAAnalyzing
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text17
  4015  000742                     __ptext17:
  4016                           	opt stack 0
  4017  000742                     _YFlashNewConfigure:
  4018                           	opt stack 0
  4019                           
  4020                           ;YellowFlash.C: 501: eeprom_addr = 0x0009;
  4021                           
  4022                           ; BSR set to: 15
  4023                           
  4024                           ;YellowFlash.C: 502: eeprom_num = 2;
  4025                           
  4026                           ;YellowFlash.C: 503: EEPROMRead(&eeprom_addr,&eeprom_num,&yflash_CFG);
  4027  000742  ECD6  F004         	call	PL2	;call to abstracted procedure
  4028  000746  ECB3  F006         	call	_EEPROMRead
  4029                           
  4030                           ;YellowFlash.C: 506: if(((yflash_CFG[0]& 0xFF) != (CANRdata[1] & 0xFF)) || ((CANRdata[2]
      +                           & 0x03)!= 0x00))
  4031  00074A  5057               	movf	_yflash_CFG,w,c
  4032  00074C  0100               	movlb	0	; () banked
  4033  00074E  EE20  F0DF         	lfsr	2,_CANRdata+1
  4034  000752  62DF               	cpfseq	indf2,c
  4035  000754  D004               	goto	l2925
  4036                           
  4037                           ; BSR set to: 0
  4038  000756  51E0               	movf	(_CANRdata+2)& (0+255),w,b
  4039  000758  0B03               	andlw	3
  4040  00075A  B4D8               	btfsc	status,2,c
  4041  00075C  0012               	return	
  4042  00075E                     l2925:
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;YellowFlash.C: 507: {
  4046                           ;YellowFlash.C: 508: if((yflash_CFG[0]& 0xFF) != (CANRdata[1] & 0xFF))
  4047  00075E  51DF               	movf	(_CANRdata+1)& (0+255),w,b
  4048  000760  1857               	xorwf	_yflash_CFG,w,c
  4049  000762  E00E               	bz	l2931
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;YellowFlash.C: 509: {
  4053                           ;YellowFlash.C: 510: eeprom_addr = 0x0009;
  4054  000764  6A54               	clrf	_eeprom_addr+1,c
  4055  000766  0E09               	movlw	9
  4056  000768  6E53               	movwf	_eeprom_addr,c
  4057                           
  4058                           ;YellowFlash.C: 511: eeprom_num = 1;
  4059  00076A  0E01               	movlw	1
  4060  00076C  6E5C               	movwf	_eeprom_num,c
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;YellowFlash.C: 512: EEPROMWrite(&eeprom_addr,&eeprom_num,(CANRdata+1));
  4064  00076E  0E5C               	movlw	low _eeprom_num
  4065  000770  6E01               	movwf	?_EEPROMWrite,c
  4066  000772  0E00               	movlw	high (_CANRdata+1)
  4067  000774  6E03               	movwf	?_EEPROMWrite+2,c
  4068  000776  0EDF               	movlw	low (_CANRdata+1)
  4069  000778  6E02               	movwf	?_EEPROMWrite+1,c
  4070  00077A  0E53               	movlw	_eeprom_addr& (0+255)
  4071  00077C  ECBA  F005         	call	_EEPROMWrite
  4072  000780                     l2931:
  4073                           
  4074                           ;YellowFlash.C: 513: }
  4075                           ;YellowFlash.C: 514: if((CANRdata[2] & 0x03)!= 0x00)
  4076  000780  0100               	movlb	0	; () banked
  4077  000782  51E0               	movf	(_CANRdata+2)& (0+255),w,b
  4078  000784  0B03               	andlw	3
  4079  000786  E00E               	bz	l2937
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;YellowFlash.C: 515: {
  4083                           ;YellowFlash.C: 516: eeprom_addr = 0x000a;
  4084  000788  6A54               	clrf	_eeprom_addr+1,c
  4085  00078A  0E0A               	movlw	10
  4086  00078C  6E53               	movwf	_eeprom_addr,c
  4087                           
  4088                           ;YellowFlash.C: 517: eeprom_num = 1;
  4089  00078E  0E01               	movlw	1
  4090  000790  6E5C               	movwf	_eeprom_num,c
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;YellowFlash.C: 518: EEPROMWrite(&eeprom_addr,&eeprom_num,(CANRdata+2));
  4094  000792  0E5C               	movlw	low _eeprom_num
  4095  000794  6E01               	movwf	?_EEPROMWrite,c
  4096  000796  0E00               	movlw	high (_CANRdata+2)
  4097  000798  6E03               	movwf	?_EEPROMWrite+2,c
  4098  00079A  0EE0               	movlw	low (_CANRdata+2)
  4099  00079C  6E02               	movwf	?_EEPROMWrite+1,c
  4100  00079E  0E53               	movlw	_eeprom_addr& (0+255)
  4101  0007A0  ECBA  F005         	call	_EEPROMWrite
  4102  0007A4                     l2937:
  4103                           
  4104                           ;YellowFlash.C: 519: }
  4105                           ;YellowFlash.C: 521: eeprom_addr = 0x0009;
  4106                           
  4107                           ;YellowFlash.C: 522: eeprom_num = 2;
  4108                           
  4109                           ;YellowFlash.C: 523: EEPROMRead(&eeprom_addr,&eeprom_num,&yflash_CFG);
  4110  0007A4  ECD6  F004         	call	PL2	;call to abstracted procedure
  4111  0007A8  ECB3  F006         	call	_EEPROMRead
  4112                           
  4113                           ;YellowFlash.C: 525: rows=((yflash_CFG[0]&0xF0)>>4);
  4114  0007AC  3857               	swapf	_yflash_CFG,w,c
  4115  0007AE  0B0F               	andlw	15
  4116  0007B0  6E4B               	movwf	_rows,c
  4117                           
  4118                           ;YellowFlash.C: 526: lines=(yflash_CFG[0]&0x0F);
  4119  0007B2  5057               	movf	_yflash_CFG,w,c
  4120  0007B4  0B0F               	andlw	15
  4121  0007B6  6E49               	movwf	_lines,c
  4122                           
  4123                           ;YellowFlash.C: 527: CalculateTime25msCounter(rows,lines);
  4124  0007B8  C049  F029         	movff	_lines,?_CalculateTime25msCounter
  4125  0007BC  504B               	movf	_rows,w,c
  4126  0007BE  ECF7  F001         	call	_CalculateTime25msCounter
  4127                           
  4128                           ;YellowFlash.C: 529: time_counters=time_on_counter;
  4129  0007C2  C044  F040         	movff	_time_on_counter,_time_counters
  4130  0007C6  C045  F041         	movff	_time_on_counter+1,_time_counters+1
  4131                           
  4132                           ;YellowFlash.C: 530: readwrite[0]=time_counters;
  4133  0007CA  C040  F055         	movff	_time_counters,_readwrite
  4134                           
  4135                           ;YellowFlash.C: 531: readwrite[1]=(time_counters>>8);
  4136  0007CE  5041               	movf	_time_counters+1,w,c
  4137  0007D0  6E56               	movwf	_readwrite+1,c
  4138                           
  4139                           ;YellowFlash.C: 532: eeprom_addr = 0x0005;
  4140  0007D2  6A54               	clrf	_eeprom_addr+1,c
  4141  0007D4  0E05               	movlw	5
  4142                           
  4143                           ;YellowFlash.C: 533: eeprom_num = 2;
  4144                           
  4145                           ;YellowFlash.C: 534: EEPROMWrite(&eeprom_addr,&eeprom_num,&readwrite);
  4146  0007D6  D80F               	call	PL8	;call to abstracted procedure
  4147  0007D8  ECBA  F005         	call	_EEPROMWrite
  4148                           
  4149                           ;YellowFlash.C: 536: time_counters=time_off_counter;
  4150  0007DC  C042  F040         	movff	_time_off_counter,_time_counters
  4151  0007E0  C043  F041         	movff	_time_off_counter+1,_time_counters+1
  4152                           
  4153                           ;YellowFlash.C: 537: readwrite[0]=time_counters;
  4154  0007E4  C040  F055         	movff	_time_counters,_readwrite
  4155                           
  4156                           ;YellowFlash.C: 538: readwrite[1]=(time_counters>>8);
  4157  0007E8  5041               	movf	_time_counters+1,w,c
  4158  0007EA  6E56               	movwf	_readwrite+1,c
  4159                           
  4160                           ;YellowFlash.C: 539: eeprom_addr = 0x0007;
  4161  0007EC  6A54               	clrf	_eeprom_addr+1,c
  4162  0007EE  0E07               	movlw	7
  4163                           
  4164                           ;YellowFlash.C: 540: eeprom_num = 2;
  4165                           
  4166                           ;YellowFlash.C: 541: EEPROMWrite(&eeprom_addr,&eeprom_num,&readwrite);
  4167  0007F0  D802               	call	PL8	;call to abstracted procedure
  4168  0007F2  EFBA  F005         	goto	_EEPROMWrite
  4169  0007F6                     __end_of_YFlashNewConfigure:
  4170                           	opt stack 0
  4171  0007F6                     PL8:
  4172  0007F6  6E53               	movwf	_eeprom_addr,c
  4173  0007F8  0E02               	movlw	2
  4174  0007FA  6E5C               	movwf	_eeprom_num,c
  4175  0007FC  0E5C               	movlw	low _eeprom_num
  4176  0007FE  6E01               	movwf	?_EEPROMWrite,c
  4177  000800  0E55               	movlw	low _readwrite
  4178  000802  6E02               	movwf	?_EEPROMWrite+1,c
  4179  000804  0E00               	movlw	high _readwrite
  4180  000806  6E03               	movwf	?_EEPROMWrite+2,c
  4181  000808  0E0F               	movlw	15
  4182  00080A  6E03               	movwf	?_EEPROMWrite+2,c
  4183  00080C  0E5F               	movlw	__accesstop+-1
  4184  00080E  6402               	cpfsgt	?_EEPROMWrite+1,c
  4185  000810  6A03               	clrf	?_EEPROMWrite+2,c
  4186  000812  0E53               	movlw	_eeprom_addr& (0+255)
  4187  000814  0012               	return	
  4188                           tblptru	equ	0xFF8
  4189                           tblptrh	equ	0xFF7
  4190                           tblptrl	equ	0xFF6
  4191                           tablat	equ	0xFF5
  4192                           prodh	equ	0xFF4
  4193                           prodl	equ	0xFF3
  4194                           intcon	equ	0xFF2
  4195                           postinc0	equ	0xFEE
  4196                           wreg	equ	0xFE8
  4197                           indf1	equ	0xFE7
  4198                           postdec1	equ	0xFE5
  4199                           fsr1h	equ	0xFE2
  4200                           fsr1l	equ	0xFE1
  4201                           indf2	equ	0xFDF
  4202                           postinc2	equ	0xFDE
  4203                           postdec2	equ	0xFDD
  4204                           fsr2h	equ	0xFDA
  4205                           fsr2l	equ	0xFD9
  4206                           status	equ	0xFD8
  4207                           
  4208 ;; *************** function _EEPROMWrite *****************
  4209 ;; Defined at:
  4210 ;;		line 58 in file "G:\working\YellowFlashingController\mcu.h"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  addr            1    wreg     PTR unsigned char 
  4213 ;;		 -> eeprom_addr(2), 
  4214 ;;  num             1    0[COMRAM] PTR unsigned char 
  4215 ;;		 -> eeprom_num(1), 
  4216 ;;  dat             2    1[COMRAM] PTR unsigned char 
  4217 ;;		 -> readwrite(2), CANRdata(8), 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;  addr            1    3[COMRAM] PTR unsigned char 
  4220 ;;		 -> eeprom_addr(2), 
  4221 ;; Return value:  Size  Location     Type
  4222 ;;		None               void
  4223 ;; Registers used:
  4224 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4230 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4231 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4233 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4234 ;;Total ram usage:        4 bytes
  4235 ;; Hardware stack levels used:    1
  4236 ;; Hardware stack levels required when called:    4
  4237 ;; This function calls:
  4238 ;;		Nothing
  4239 ;; This function is called by:
  4240 ;;		_CANWriteID
  4241 ;;		_YFlashNewConfigure
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text18
  4246  000B74                     __ptext18:
  4247                           	opt stack 0
  4248  000B74                     _EEPROMWrite:
  4249                           	opt stack 24
  4250                           
  4251                           ;EEPROMWrite@addr stored from wreg
  4252  000B74  CFE8 F004          	movff	wreg,EEPROMWrite@addr
  4253                           
  4254                           ;mcu.h: 59: INTCON &= 0x3f;
  4255  000B78  0E3F               	movlw	63
  4256  000B7A  16F2               	andwf	intcon,f,c	;volatile
  4257                           
  4258                           ;mcu.h: 60: while((*num)--)
  4259  000B7C  D020               	goto	l2773
  4260  000B7E                     l377:
  4261                           
  4262                           ;mcu.h: 61: {
  4263                           ;mcu.h: 62: EEADRH = (*addr)>>8;
  4264  000B7E  6A75               	clrf	3957,c	;volatile
  4265                           
  4266                           ;mcu.h: 63: EEADR = (*addr);
  4267  000B80  5004               	movf	EEPROMWrite@addr,w,c
  4268  000B82  6ED9               	movwf	fsr2l,c
  4269  000B84  6ADA               	clrf	fsr2h,c
  4270  000B86  50DF               	movf	indf2,w,c
  4271  000B88  6E74               	movwf	3956,c	;volatile
  4272                           
  4273                           ;mcu.h: 64: (*addr)++;
  4274  000B8A  5004               	movf	EEPROMWrite@addr,w,c
  4275  000B8C  6ED9               	movwf	fsr2l,c
  4276  000B8E  6ADA               	clrf	fsr2h,c
  4277  000B90  2ADF               	incf	indf2,f,c
  4278                           
  4279                           ;mcu.h: 65: EEDATA = (*dat);
  4280  000B92  C002  FFD9         	movff	EEPROMWrite@dat,fsr2l
  4281  000B96  C003  FFDA         	movff	EEPROMWrite@dat+1,fsr2h
  4282  000B9A  50DF               	movf	indf2,w,c
  4283  000B9C  6E73               	movwf	3955,c	;volatile
  4284                           
  4285                           ;mcu.h: 66: dat++;
  4286  000B9E  4A02               	infsnz	EEPROMWrite@dat,f,c
  4287  000BA0  2A03               	incf	EEPROMWrite@dat+1,f,c
  4288                           
  4289                           ;mcu.h: 68: EECON1 &= 0x3f;
  4290  000BA2  0E3F               	movlw	63
  4291  000BA4  167F               	andwf	3967,f,c	;volatile
  4292                           
  4293                           ;mcu.h: 70: EECON1 |= 0x04;
  4294  000BA6  847F               	bsf	3967,2,c	;volatile
  4295                           
  4296                           ;mcu.h: 75: EECON2 = 0x55;
  4297  000BA8  0E55               	movlw	85
  4298  000BAA  6E7E               	movwf	3966,c	;volatile
  4299                           
  4300                           ;mcu.h: 76: EECON2 = 0xaa;
  4301  000BAC  0EAA               	movlw	170
  4302  000BAE  6E7E               	movwf	3966,c	;volatile
  4303                           
  4304                           ;mcu.h: 78: EECON1 |= 0x02;
  4305  000BB0  827F               	bsf	3967,1,c	;volatile
  4306  000BB2  F000               	nop		;# 
  4307  000BB4                     l378:
  4308  000BB4  B27F               	btfsc	3967,1,c	;volatile
  4309  000BB6  D7FE               	goto	l378
  4310  000BB8  F000               	nop		;# 
  4311                           
  4312                           ;mcu.h: 83: EECON1 &= 0x04;
  4313  000BBA  0E04               	movlw	4
  4314  000BBC  167F               	andwf	3967,f,c	;volatile
  4315  000BBE                     l2773:
  4316  000BBE  5001               	movf	EEPROMWrite@num,w,c
  4317  000BC0  6ED9               	movwf	fsr2l,c
  4318  000BC2  6ADA               	clrf	fsr2h,c
  4319  000BC4  06DF               	decf	indf2,f,c
  4320  000BC6  0EFF               	movlw	255
  4321  000BC8  62DF               	cpfseq	indf2,c
  4322  000BCA  D7D9               	goto	l377
  4323                           
  4324                           ;mcu.h: 85: }
  4325                           ;mcu.h: 87: INTCON &= 0xc0;
  4326  000BCC  0EC0               	movlw	192
  4327  000BCE  16F2               	andwf	intcon,f,c	;volatile
  4328  000BD0  0CC0               	retlw	192
  4329  000BD2                     __end_of_EEPROMWrite:
  4330                           	opt stack 0
  4331                           tblptru	equ	0xFF8
  4332                           tblptrh	equ	0xFF7
  4333                           tblptrl	equ	0xFF6
  4334                           tablat	equ	0xFF5
  4335                           prodh	equ	0xFF4
  4336                           prodl	equ	0xFF3
  4337                           intcon	equ	0xFF2
  4338                           postinc0	equ	0xFEE
  4339                           wreg	equ	0xFE8
  4340                           indf1	equ	0xFE7
  4341                           postdec1	equ	0xFE5
  4342                           fsr1h	equ	0xFE2
  4343                           fsr1l	equ	0xFE1
  4344                           indf2	equ	0xFDF
  4345                           postinc2	equ	0xFDE
  4346                           postdec2	equ	0xFDD
  4347                           fsr2h	equ	0xFDA
  4348                           fsr2l	equ	0xFD9
  4349                           status	equ	0xFD8
  4350                           
  4351 ;; *************** function _CalculateTime25msCounter *****************
  4352 ;; Defined at:
  4353 ;;		line 158 in file "G:\working\YellowFlashingController\YellowFlash.C"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;  row             1    wreg     unsigned char 
  4356 ;;  line            1   40[COMRAM] unsigned char 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  row             1   47[COMRAM] unsigned char 
  4359 ;;  j               2   50[COMRAM] int 
  4360 ;;  i               2   48[COMRAM] int 
  4361 ;; Return value:  Size  Location     Type
  4362 ;;		None               void
  4363 ;; Registers used:
  4364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: FFFFFFF0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4370 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4371 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4372 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4373 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4374 ;;Total ram usage:       12 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    6
  4377 ;; This function calls:
  4378 ;;		___ftmul
  4379 ;;		___fttol
  4380 ;;		___lwdiv
  4381 ;; This function is called by:
  4382 ;;		_YFlashNewConfigure
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           	psect	text19
  4387  0003EE                     __ptext19:
  4388                           	opt stack 0
  4389  0003EE                     _CalculateTime25msCounter:
  4390                           	opt stack 22
  4391                           
  4392                           ;CalculateTime25msCounter@row stored from wreg
  4393  0003EE  CFE8 F030          	movff	wreg,CalculateTime25msCounter@row
  4394                           
  4395                           ;YellowFlash.C: 159: int i,j;
  4396                           ;YellowFlash.C: 160: for(i=0;i<10;i++)
  4397  0003F2  6A31               	clrf	CalculateTime25msCounter@i,c
  4398  0003F4  6A32               	clrf	CalculateTime25msCounter@i+1,c
  4399  0003F6                     l475:
  4400                           
  4401                           ;YellowFlash.C: 161: {
  4402                           ;YellowFlash.C: 162: for(j=0;j<16;j++)
  4403  0003F6  6A33               	clrf	CalculateTime25msCounter@j,c
  4404  0003F8  6A34               	clrf	CalculateTime25msCounter@j+1,c
  4405  0003FA                     l2803:
  4406                           
  4407                           ;YellowFlash.C: 163: {
  4408                           ;YellowFlash.C: 164: time_on[i][j]=period[i]*cycledutyon[j];
  4409  0003FA  5033               	movf	CalculateTime25msCounter@j,w,c
  4410  0003FC  0D03               	mullw	3
  4411  0003FE  50F3               	movf	prodl,w,c
  4412  000400  0100               	movlb	0	; () banked
  4413  000402  0F90               	addlw	low _cycledutyon
  4414  000404  D85D               	call	PL4	;call to abstracted procedure
  4415  000406  EC27  F003         	call	___ftmul	;wreg free
  4416  00040A  C009  F01A         	movff	?___ftmul,?___fttol
  4417  00040E  C00A  F01B         	movff	?___ftmul+1,?___fttol+1
  4418  000412  C00B  F01C         	movff	?___ftmul+2,?___fttol+2
  4419  000416  EC0B  F004         	call	___fttol	;wreg free
  4420  00041A  D886               	call	PL17	;call to abstracted procedure
  4421  00041C                     u1025:
  4422  00041C  90D8               	bcf	status,0,c
  4423  00041E  362C               	rlcf	??_CalculateTime25msCounter+2,f,c
  4424  000420  362D               	rlcf	??_CalculateTime25msCounter+3,f,c
  4425  000422  2EE8               	decfsz	wreg,f,c
  4426  000424  D7FB               	goto	u1025
  4427  000426  0E32               	movlw	low _time_on
  4428  000428  242C               	addwf	??_CalculateTime25msCounter+2,w,c
  4429  00042A  6E2E               	movwf	(??_CalculateTime25msCounter+4)& (0+255),c
  4430  00042C  0E02               	movlw	high _time_on
  4431  00042E  D86F               	call	PL10	;call to abstracted procedure
  4432                           
  4433                           ;YellowFlash.C: 165: time_off[i][j]=period[i]*cycledutyoff[j];
  4434  000430  5033               	movf	CalculateTime25msCounter@j,w,c
  4435  000432  0D03               	mullw	3
  4436  000434  50F3               	movf	prodl,w,c
  4437  000436  0100               	movlb	0	; () banked
  4438  000438  0F60               	addlw	low _cycledutyoff
  4439  00043A  D842               	call	PL4	;call to abstracted procedure
  4440  00043C  EC27  F003         	call	___ftmul	;wreg free
  4441  000440  C009  F01A         	movff	?___ftmul,?___fttol
  4442  000444  C00A  F01B         	movff	?___ftmul+1,?___fttol+1
  4443  000448  C00B  F01C         	movff	?___ftmul+2,?___fttol+2
  4444  00044C  EC0B  F004         	call	___fttol	;wreg free
  4445  000450  D86B               	call	PL17	;call to abstracted procedure
  4446  000452                     u1035:
  4447  000452  90D8               	bcf	status,0,c
  4448  000454  362C               	rlcf	??_CalculateTime25msCounter+2,f,c
  4449  000456  362D               	rlcf	??_CalculateTime25msCounter+3,f,c
  4450  000458  2EE8               	decfsz	wreg,f,c
  4451  00045A  D7FB               	goto	u1035
  4452  00045C  0EF2               	movlw	low _time_off
  4453  00045E  242C               	addwf	??_CalculateTime25msCounter+2,w,c
  4454  000460  6E2E               	movwf	(??_CalculateTime25msCounter+4)& (0+255),c
  4455  000462  0E00               	movlw	high _time_off
  4456  000464  D854               	call	PL10	;call to abstracted procedure
  4457  000466  4A33               	infsnz	CalculateTime25msCounter@j,f,c
  4458  000468  2A34               	incf	CalculateTime25msCounter@j+1,f,c
  4459  00046A  5034               	movf	CalculateTime25msCounter@j+1,w,c
  4460  00046C  0A80               	xorlw	128
  4461  00046E  0F80               	addlw	-128
  4462  000470  0E10               	movlw	16
  4463  000472  B4D8               	btfsc	status,2,c
  4464  000474  5C33               	subwf	CalculateTime25msCounter@j,w,c
  4465  000476  E3C1               	bnc	l2803
  4466  000478  4A31               	infsnz	CalculateTime25msCounter@i,f,c
  4467  00047A  2A32               	incf	CalculateTime25msCounter@i+1,f,c
  4468  00047C  5032               	movf	CalculateTime25msCounter@i+1,w,c
  4469  00047E  0A80               	xorlw	128
  4470  000480  0F80               	addlw	-128
  4471  000482  0E0A               	movlw	10
  4472  000484  B4D8               	btfsc	status,2,c
  4473  000486  5C31               	subwf	CalculateTime25msCounter@i,w,c
  4474  000488  E3B6               	bnc	l475
  4475                           
  4476                           ;YellowFlash.C: 166: }
  4477                           ;YellowFlash.C: 167: }
  4478                           ;YellowFlash.C: 168: time_on_counter=time_on[line][row]/25;
  4479  00048A  5029               	movf	CalculateTime25msCounter@line,w,c
  4480  00048C  0D20               	mullw	32
  4481  00048E  0E32               	movlw	low _time_on
  4482  000490  24F3               	addwf	prodl,w,c
  4483  000492  6E2A               	movwf	??_CalculateTime25msCounter& (0+255),c
  4484  000494  0E02               	movlw	high _time_on
  4485  000496  D829               	call	PL5	;call to abstracted procedure
  4486  000498  EC8E  F006         	call	___lwdiv	;wreg free
  4487  00049C  C001  F044         	movff	?___lwdiv,_time_on_counter
  4488  0004A0  C002  F045         	movff	?___lwdiv+1,_time_on_counter+1
  4489                           
  4490                           ;YellowFlash.C: 169: time_off_counter=time_off[line][row]/25;
  4491  0004A4  5029               	movf	CalculateTime25msCounter@line,w,c
  4492  0004A6  0D20               	mullw	32
  4493  0004A8  0EF2               	movlw	low _time_off
  4494  0004AA  24F3               	addwf	prodl,w,c
  4495  0004AC  6E2A               	movwf	??_CalculateTime25msCounter& (0+255),c
  4496  0004AE  0E00               	movlw	high _time_off
  4497  0004B0  D81C               	call	PL5	;call to abstracted procedure
  4498  0004B2  EC8E  F006         	call	___lwdiv	;wreg free
  4499  0004B6  C001  F042         	movff	?___lwdiv,_time_off_counter
  4500  0004BA  C002  F043         	movff	?___lwdiv+1,_time_off_counter+1
  4501  0004BE  0012               	return	
  4502  0004C0                     __end_of_CalculateTime25msCounter:
  4503                           	opt stack 0
  4504  0004C0                     PL4:
  4505  0004C0  6ED9               	movwf	fsr2l,c
  4506  0004C2  6ADA               	clrf	fsr2h,c
  4507  0004C4  CFDE F00C          	movff	postinc2,?___ftmul+3
  4508  0004C8  CFDE F00D          	movff	postinc2,?___ftmul+4
  4509  0004CC  CFDD F00E          	movff	postdec2,?___ftmul+5
  4510  0004D0  5031               	movf	CalculateTime25msCounter@i,w,c
  4511  0004D2  0D03               	mullw	3
  4512  0004D4  50F3               	movf	prodl,w,c
  4513  0004D6  0FC0               	addlw	low _period
  4514  0004D8  6ED9               	movwf	fsr2l,c
  4515  0004DA  6ADA               	clrf	fsr2h,c
  4516  0004DC  CFDE F009          	movff	postinc2,?___ftmul
  4517  0004E0  CFDE F00A          	movff	postinc2,?___ftmul+1
  4518  0004E4  CFDD F00B          	movff	postdec2,?___ftmul+2
  4519  0004E8  0012               	return	
  4520  0004EA                     PL5:
  4521  0004EA  20F4               	addwfc	prodh,w,c
  4522  0004EC  6E2B               	movwf	(??_CalculateTime25msCounter+1)& (0+255),c
  4523  0004EE  5030               	movf	CalculateTime25msCounter@row,w,c
  4524  0004F0  0D02               	mullw	2
  4525  0004F2  50F3               	movf	prodl,w,c
  4526  0004F4  242A               	addwf	??_CalculateTime25msCounter,w,c
  4527  0004F6  6ED9               	movwf	fsr2l,c
  4528  0004F8  50F4               	movf	prodh,w,c
  4529  0004FA  202B               	addwfc	??_CalculateTime25msCounter+1,w,c
  4530  0004FC  6EDA               	movwf	fsr2h,c
  4531  0004FE  CFDE F001          	movff	postinc2,?___lwdiv
  4532  000502  CFDD F002          	movff	postdec2,?___lwdiv+1
  4533  000506  6A04               	clrf	?___lwdiv+3,c
  4534  000508  0E19               	movlw	25
  4535  00050A  6E03               	movwf	?___lwdiv+2,c
  4536  00050C  0C19               	retlw	25
  4537  00050E                     PL10:
  4538  00050E  202D               	addwfc	??_CalculateTime25msCounter+3,w,c
  4539  000510  6E2F               	movwf	(??_CalculateTime25msCounter+5)& (0+255),c
  4540  000512  502A               	movf	??_CalculateTime25msCounter,w,c
  4541  000514  242E               	addwf	??_CalculateTime25msCounter+4,w,c
  4542  000516  6ED9               	movwf	fsr2l,c
  4543  000518  502B               	movf	??_CalculateTime25msCounter+1,w,c
  4544  00051A  202F               	addwfc	??_CalculateTime25msCounter+5,w,c
  4545  00051C  6EDA               	movwf	fsr2h,c
  4546  00051E  C01A  FFDE         	movff	?___fttol,postinc2
  4547  000522  C01B  FFDD         	movff	?___fttol+1,postdec2
  4548  000526  0012               	return	
  4549  000528                     PL17:
  4550  000528  90D8               	bcf	status,0,c
  4551  00052A  3433               	rlcf	CalculateTime25msCounter@j,w,c
  4552  00052C  6E2A               	movwf	??_CalculateTime25msCounter& (0+255),c
  4553  00052E  3434               	rlcf	CalculateTime25msCounter@j+1,w,c
  4554  000530  6E2B               	movwf	(??_CalculateTime25msCounter+1)& (0+255),c
  4555  000532  C031  F02C         	movff	CalculateTime25msCounter@i,??_CalculateTime25msCounter+2
  4556  000536  C032  F02D         	movff	CalculateTime25msCounter@i+1,??_CalculateTime25msCounter+3
  4557  00053A  0C05               	retlw	5
  4558                           tblptru	equ	0xFF8
  4559                           tblptrh	equ	0xFF7
  4560                           tblptrl	equ	0xFF6
  4561                           tablat	equ	0xFF5
  4562                           prodh	equ	0xFF4
  4563                           prodl	equ	0xFF3
  4564                           intcon	equ	0xFF2
  4565                           postinc0	equ	0xFEE
  4566                           wreg	equ	0xFE8
  4567                           indf1	equ	0xFE7
  4568                           postdec1	equ	0xFE5
  4569                           fsr1h	equ	0xFE2
  4570                           fsr1l	equ	0xFE1
  4571                           indf2	equ	0xFDF
  4572                           postinc2	equ	0xFDE
  4573                           postdec2	equ	0xFDD
  4574                           fsr2h	equ	0xFDA
  4575                           fsr2l	equ	0xFD9
  4576                           status	equ	0xFD8
  4577                           
  4578 ;; *************** function _HeartbeatTest *****************
  4579 ;; Defined at:
  4580 ;;		line 752 in file "G:\working\YellowFlashingController\YellowFlash.C"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;		None
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;		None
  4585 ;; Return value:  Size  Location     Type
  4586 ;;		None               void
  4587 ;; Registers used:
  4588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/F
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4598 ;;Total ram usage:        0 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    6
  4601 ;; This function calls:
  4602 ;;		_Read_YFlash_CFG
  4603 ;; This function is called by:
  4604 ;;		_main
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text20
  4609  000E22                     __ptext20:
  4610                           	opt stack 0
  4611  000E22                     _HeartbeatTest:
  4612                           	opt stack 24
  4613                           
  4614                           ;YellowFlash.C: 754: if(time5ms == 1)
  4615  000E22  0100               	movlb	(_time5ms/(0+8)) shr (0+8)
  4616  000E24  A25D               	btfss	_time5ms/(0+8),_time5ms& (0+7),c
  4617  000E26  0012               	return	
  4618                           
  4619                           ;YellowFlash.C: 755: {
  4620                           ;YellowFlash.C: 756: time5ms = 0;
  4621  000E28  925D               	bcf	_time5ms/(0+8),_time5ms& (0+7),c
  4622                           
  4623                           ;YellowFlash.C: 757: t500ms_count++;
  4624  000E2A  2A4D               	incf	_t500ms_count,f,c
  4625                           
  4626                           ;YellowFlash.C: 758: if(t500ms_count>=100)
  4627  000E2C  0E63               	movlw	99
  4628  000E2E  644D               	cpfsgt	_t500ms_count,c
  4629  000E30  0C63               	retlw	99
  4630                           
  4631                           ;YellowFlash.C: 759: {
  4632                           ;YellowFlash.C: 760: t500ms_count=0;
  4633  000E32  6A4D               	clrf	_t500ms_count,c
  4634                           
  4635                           ;YellowFlash.C: 761: heartbeat++;
  4636  000E34  2A48               	incf	_heartbeat,f,c
  4637                           
  4638                           ;YellowFlash.C: 763: if(heartbeat>=4)
  4639  000E36  0E03               	movlw	3
  4640  000E38  6448               	cpfsgt	_heartbeat,c
  4641  000E3A  0C03               	retlw	3
  4642                           
  4643                           ;YellowFlash.C: 764: {
  4644                           ;YellowFlash.C: 765: heartbeat=0;
  4645  000E3C  6A48               	clrf	_heartbeat,c
  4646                           
  4647                           ;YellowFlash.C: 766: RD2=1;
  4648  000E3E  8483               	bsf	3971,2,c	;volatile
  4649                           
  4650                           ;YellowFlash.C: 767: TMR0ON = 0;
  4651  000E40  9ED5               	bcf	4053,7,c	;volatile
  4652                           
  4653                           ;YellowFlash.C: 768: TMR0IF = 0;
  4654  000E42  94F2               	bcf	intcon,2,c	;volatile
  4655                           
  4656                           ;YellowFlash.C: 769: yflash_status=0x06;
  4657  000E44  0E06               	movlw	6
  4658  000E46  6E4E               	movwf	_yflash_status,c
  4659                           
  4660                           ;YellowFlash.C: 770: Read_YFlash_CFG();
  4661  000E48  ECAD  F004         	call	_Read_YFlash_CFG	;wreg free
  4662                           
  4663                           ;YellowFlash.C: 771: T1CON |= 0x01;
  4664  000E4C  80CD               	bsf	4045,0,c	;volatile
  4665                           
  4666                           ;YellowFlash.C: 772: turnoff=0x01;
  4667  000E4E  0E01               	movlw	1
  4668  000E50  6E5A               	movwf	_turnoff,c
  4669                           
  4670                           ;YellowFlash.C: 773: switchmode=1;
  4671  000E52  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  4672  000E54  805D               	bsf	_switchmode/(0+8),_switchmode& (0+7),c
  4673  000E56  0C01               	retlw	1
  4674  000E58                     __end_of_HeartbeatTest:
  4675                           	opt stack 0
  4676                           tblptru	equ	0xFF8
  4677                           tblptrh	equ	0xFF7
  4678                           tblptrl	equ	0xFF6
  4679                           tablat	equ	0xFF5
  4680                           prodh	equ	0xFF4
  4681                           prodl	equ	0xFF3
  4682                           intcon	equ	0xFF2
  4683                           postinc0	equ	0xFEE
  4684                           wreg	equ	0xFE8
  4685                           indf1	equ	0xFE7
  4686                           postdec1	equ	0xFE5
  4687                           fsr1h	equ	0xFE2
  4688                           fsr1l	equ	0xFE1
  4689                           indf2	equ	0xFDF
  4690                           postinc2	equ	0xFDE
  4691                           postdec2	equ	0xFDD
  4692                           fsr2h	equ	0xFDA
  4693                           fsr2l	equ	0xFD9
  4694                           status	equ	0xFD8
  4695                           
  4696 ;; *************** function _Read_YFlash_CFG *****************
  4697 ;; Defined at:
  4698 ;;		line 448 in file "G:\working\YellowFlashingController\YellowFlash.C"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;		None
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;		None
  4703 ;; Return value:  Size  Location     Type
  4704 ;;		None               void
  4705 ;; Registers used:
  4706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4716 ;;Total ram usage:        0 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:    5
  4719 ;; This function calls:
  4720 ;;		_EEPROMRead
  4721 ;; This function is called by:
  4722 ;;		_CANDATAAnalyzing
  4723 ;;		_HeartbeatTest
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           	psect	text21
  4728  00095A                     __ptext21:
  4729                           	opt stack 0
  4730  00095A                     _Read_YFlash_CFG:
  4731                           	opt stack 24
  4732                           
  4733                           ;YellowFlash.C: 449: eeprom_addr = 0x0005;
  4734  00095A  6A54               	clrf	_eeprom_addr+1,c
  4735  00095C  0E05               	movlw	5
  4736  00095E  6E53               	movwf	_eeprom_addr,c
  4737                           
  4738                           ;YellowFlash.C: 450: eeprom_num = 2;
  4739                           
  4740                           ;YellowFlash.C: 451: EEPROMRead(&eeprom_addr,&eeprom_num,&readwrite);
  4741  000960  D83F               	call	PL9	;call to abstracted procedure
  4742  000962  D836               	call	PL3	;call to abstracted procedure
  4743  000964  ECB3  F006         	call	_EEPROMRead
  4744                           
  4745                           ;YellowFlash.C: 452: time_on_counter=readwrite[0];
  4746  000968  C055  F044         	movff	_readwrite,_time_on_counter
  4747  00096C  6A45               	clrf	_time_on_counter+1,c
  4748                           
  4749                           ;YellowFlash.C: 453: time_counters=readwrite[1];
  4750  00096E  C056  F040         	movff	_readwrite+1,_time_counters
  4751  000972  6A41               	clrf	_time_counters+1,c
  4752                           
  4753                           ;YellowFlash.C: 455: time_on_counter|=time_counters;
  4754  000974  5040               	movf	_time_counters,w,c
  4755  000976  1244               	iorwf	_time_on_counter,f,c
  4756  000978  5041               	movf	_time_counters+1,w,c
  4757  00097A  1245               	iorwf	_time_on_counter+1,f,c
  4758                           
  4759                           ;YellowFlash.C: 458: eeprom_addr = 0x0007;
  4760  00097C  6A54               	clrf	_eeprom_addr+1,c
  4761  00097E  0E07               	movlw	7
  4762  000980  6E53               	movwf	_eeprom_addr,c
  4763                           
  4764                           ;YellowFlash.C: 459: eeprom_num = 2;
  4765                           
  4766                           ;YellowFlash.C: 460: EEPROMRead(&eeprom_addr,&eeprom_num,&readwrite);
  4767  000982  D82E               	call	PL9	;call to abstracted procedure
  4768  000984  D825               	call	PL3	;call to abstracted procedure
  4769  000986  ECB3  F006         	call	_EEPROMRead
  4770                           
  4771                           ;YellowFlash.C: 461: time_off_counter=readwrite[0];
  4772  00098A  C055  F042         	movff	_readwrite,_time_off_counter
  4773  00098E  6A43               	clrf	_time_off_counter+1,c
  4774                           
  4775                           ;YellowFlash.C: 462: time_counters=readwrite[1];
  4776  000990  C056  F040         	movff	_readwrite+1,_time_counters
  4777  000994  6A41               	clrf	_time_counters+1,c
  4778                           
  4779                           ;YellowFlash.C: 464: time_off_counter|=time_counters;
  4780  000996  5040               	movf	_time_counters,w,c
  4781  000998  1242               	iorwf	_time_off_counter,f,c
  4782  00099A  5041               	movf	_time_counters+1,w,c
  4783  00099C  1243               	iorwf	_time_off_counter+1,f,c
  4784                           
  4785                           ;YellowFlash.C: 467: eeprom_addr = 0x0009;
  4786                           
  4787                           ;YellowFlash.C: 468: eeprom_num = 2;
  4788                           
  4789                           ;YellowFlash.C: 469: EEPROMRead(&eeprom_addr,&eeprom_num,&yflash_CFG);
  4790  00099E  D806               	call	PL2	;call to abstracted procedure
  4791  0009A0  ECB3  F006         	call	_EEPROMRead
  4792                           
  4793                           ;YellowFlash.C: 470: run_mode=(yflash_CFG[1]&0x03);
  4794  0009A4  5058               	movf	_yflash_CFG+1,w,c
  4795  0009A6  0B03               	andlw	3
  4796  0009A8  6E4C               	movwf	_run_mode,c
  4797  0009AA  0012               	return	
  4798  0009AC                     __end_of_Read_YFlash_CFG:
  4799                           	opt stack 0
  4800  0009AC                     PL2:
  4801  0009AC  6A54               	clrf	_eeprom_addr+1,c
  4802  0009AE  0E09               	movlw	9
  4803  0009B0  6E53               	movwf	_eeprom_addr,c
  4804  0009B2  0E02               	movlw	2
  4805  0009B4  6E5C               	movwf	_eeprom_num,c
  4806  0009B6  0E5C               	movlw	low _eeprom_num
  4807  0009B8  6E01               	movwf	?_EEPROMRead,c
  4808  0009BA  0E57               	movlw	low _yflash_CFG
  4809  0009BC  6E02               	movwf	?_EEPROMRead+1,c
  4810  0009BE  0E00               	movlw	high _yflash_CFG
  4811  0009C0  6E03               	movwf	?_EEPROMRead+2,c
  4812  0009C2  0E0F               	movlw	15
  4813  0009C4  6E03               	movwf	?_EEPROMRead+2,c
  4814  0009C6  0E5F               	movlw	__accesstop+-1
  4815  0009C8  6402               	cpfsgt	?_EEPROMRead+1,c
  4816  0009CA  6A03               	clrf	?_EEPROMRead+2,c
  4817  0009CC  0E53               	movlw	_eeprom_addr& (0+255)
  4818  0009CE  0012               	return	
  4819  0009D0                     PL3:
  4820  0009D0  6E03               	movwf	?_EEPROMRead+2,c
  4821  0009D2  0E0F               	movlw	15
  4822  0009D4  6E03               	movwf	?_EEPROMRead+2,c
  4823  0009D6  0E5F               	movlw	__accesstop+-1
  4824  0009D8  6402               	cpfsgt	?_EEPROMRead+1,c
  4825  0009DA  6A03               	clrf	?_EEPROMRead+2,c
  4826  0009DC  0E53               	movlw	_eeprom_addr& (0+255)
  4827  0009DE  0012               	return	
  4828  0009E0                     PL9:
  4829  0009E0  0E02               	movlw	2
  4830  0009E2  6E5C               	movwf	_eeprom_num,c
  4831  0009E4  0E5C               	movlw	low _eeprom_num
  4832  0009E6  6E01               	movwf	?_EEPROMRead,c
  4833  0009E8  0E55               	movlw	low _readwrite
  4834  0009EA  6E02               	movwf	?_EEPROMRead+1,c
  4835  0009EC  0E00               	movlw	high _readwrite
  4836  0009EE  0012               	return	
  4837                           tblptru	equ	0xFF8
  4838                           tblptrh	equ	0xFF7
  4839                           tblptrl	equ	0xFF6
  4840                           tablat	equ	0xFF5
  4841                           prodh	equ	0xFF4
  4842                           prodl	equ	0xFF3
  4843                           intcon	equ	0xFF2
  4844                           postinc0	equ	0xFEE
  4845                           wreg	equ	0xFE8
  4846                           indf1	equ	0xFE7
  4847                           postdec1	equ	0xFE5
  4848                           fsr1h	equ	0xFE2
  4849                           fsr1l	equ	0xFE1
  4850                           indf2	equ	0xFDF
  4851                           postinc2	equ	0xFDE
  4852                           postdec2	equ	0xFDD
  4853                           fsr2h	equ	0xFDA
  4854                           fsr2l	equ	0xFD9
  4855                           status	equ	0xFD8
  4856                           
  4857 ;; *************** function _EEPROMRead *****************
  4858 ;; Defined at:
  4859 ;;		line 33 in file "G:\working\YellowFlashingController\mcu.h"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  addr            1    wreg     PTR unsigned char 
  4862 ;;		 -> eeprom_addr(2), 
  4863 ;;  num             1    0[COMRAM] PTR unsigned char 
  4864 ;;		 -> eeprom_num(1), 
  4865 ;;  dat             2    1[COMRAM] PTR unsigned char 
  4866 ;;		 -> yflash_CFG(2), readwrite(2), CANSdata(8), 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  addr            1    3[COMRAM] PTR unsigned char 
  4869 ;;		 -> eeprom_addr(2), 
  4870 ;; Return value:  Size  Location     Type
  4871 ;;		None               void
  4872 ;; Registers used:
  4873 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4879 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4880 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4882 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4883 ;;Total ram usage:        4 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    4
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_CANSendID
  4890 ;;		_Read_YFlash_CFG
  4891 ;;		_YFlashNewConfigure
  4892 ;;		_CANDATAAnalyzing
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text22
  4897  000D66                     __ptext22:
  4898                           	opt stack 0
  4899  000D66                     _EEPROMRead:
  4900                           	opt stack 24
  4901                           
  4902                           ;EEPROMRead@addr stored from wreg
  4903  000D66  CFE8 F004          	movff	wreg,EEPROMRead@addr
  4904  000D6A                     l371:
  4905                           
  4906                           ;mcu.h: 35: {
  4907                           ;mcu.h: 36: EEADRH = (*addr)>>8;
  4908  000D6A  6A75               	clrf	3957,c	;volatile
  4909                           
  4910                           ;mcu.h: 37: EEADR = (*addr);
  4911  000D6C  5004               	movf	EEPROMRead@addr,w,c
  4912  000D6E  6ED9               	movwf	fsr2l,c
  4913  000D70  6ADA               	clrf	fsr2h,c
  4914  000D72  50DF               	movf	indf2,w,c
  4915  000D74  6E74               	movwf	3956,c	;volatile
  4916                           
  4917                           ;mcu.h: 38: (*addr)++;
  4918  000D76  5004               	movf	EEPROMRead@addr,w,c
  4919  000D78  6ED9               	movwf	fsr2l,c
  4920  000D7A  6ADA               	clrf	fsr2h,c
  4921  000D7C  2ADF               	incf	indf2,f,c
  4922                           
  4923                           ;mcu.h: 40: EEDATA = 0;
  4924  000D7E  6A73               	clrf	3955,c	;volatile
  4925                           
  4926                           ;mcu.h: 42: EECON1 &= 0x3f;
  4927  000D80  0E3F               	movlw	63
  4928  000D82  167F               	andwf	3967,f,c	;volatile
  4929                           
  4930                           ;mcu.h: 45: EECON1 |= 0x01;
  4931  000D84  807F               	bsf	3967,0,c	;volatile
  4932  000D86  F000               	nop		;# 
  4933                           
  4934                           ;mcu.h: 48: (*dat) = EEDATA;
  4935  000D88  C002  FFD9         	movff	EEPROMRead@dat,fsr2l
  4936  000D8C  C003  FFDA         	movff	EEPROMRead@dat+1,fsr2h
  4937  000D90  CF73 FFDF          	movff	3955,indf2	;volatile
  4938                           
  4939                           ;mcu.h: 49: dat++;
  4940  000D94  4A02               	infsnz	EEPROMRead@dat,f,c
  4941  000D96  2A03               	incf	EEPROMRead@dat+1,f,c
  4942                           
  4943                           ;mcu.h: 50: }
  4944                           ;mcu.h: 51: while((*num)--);
  4945  000D98  5001               	movf	EEPROMRead@num,w,c
  4946  000D9A  6ED9               	movwf	fsr2l,c
  4947  000D9C  6ADA               	clrf	fsr2h,c
  4948  000D9E  06DF               	decf	indf2,f,c
  4949  000DA0  0EFF               	movlw	255
  4950  000DA2  62DF               	cpfseq	indf2,c
  4951  000DA4  D7E2               	goto	l371
  4952  000DA6  0CFF               	retlw	255
  4953  000DA8                     __end_of_EEPROMRead:
  4954                           	opt stack 0
  4955                           tblptru	equ	0xFF8
  4956                           tblptrh	equ	0xFF7
  4957                           tblptrl	equ	0xFF6
  4958                           tablat	equ	0xFF5
  4959                           prodh	equ	0xFF4
  4960                           prodl	equ	0xFF3
  4961                           intcon	equ	0xFF2
  4962                           postinc0	equ	0xFEE
  4963                           wreg	equ	0xFE8
  4964                           indf1	equ	0xFE7
  4965                           postdec1	equ	0xFE5
  4966                           fsr1h	equ	0xFE2
  4967                           fsr1l	equ	0xFE1
  4968                           indf2	equ	0xFDF
  4969                           postinc2	equ	0xFDE
  4970                           postdec2	equ	0xFDD
  4971                           fsr2h	equ	0xFDA
  4972                           fsr2l	equ	0xFD9
  4973                           status	equ	0xFD8
  4974                           
  4975 ;; *************** function ___ftmul *****************
  4976 ;; Defined at:
  4977 ;;		line 52 in file "d:\Program Files\HI-TECH Software\PICC-18\9.80\sources\ftmul.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;  f1              3    8[COMRAM] float 
  4980 ;;  f2              3   11[COMRAM] float 
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;  f3_as_produc    3   20[COMRAM] unsigned um
  4983 ;;  sign            1   24[COMRAM] unsigned char 
  4984 ;;  cntr            1   23[COMRAM] unsigned char 
  4985 ;;  exp             1   19[COMRAM] unsigned char 
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  3    8[COMRAM] float 
  4988 ;; Registers used:
  4989 ;;		wreg, status,2, status,0, cstack
  4990 ;; Tracked objects:
  4991 ;;		On entry : F/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: FFFFFFF0/0
  4994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4995 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4996 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4997 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4998 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4999 ;;Total ram usage:       17 bytes
  5000 ;; Hardware stack levels used:    1
  5001 ;; Hardware stack levels required when called:    5
  5002 ;; This function calls:
  5003 ;;		___ftpack
  5004 ;; This function is called by:
  5005 ;;		_CalculateTime25msCounter
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           	psect	text23
  5010  00064E                     __ptext23:
  5011                           	opt stack 0
  5012  00064E                     ___ftmul:
  5013                           	opt stack 22
  5014                           
  5015                           ; BSR set to: 0
  5016  00064E  0E0F               	movlw	15
  5017  000650  6E0F               	movwf	??___ftmul& (0+255),c
  5018  000652  C009  F010         	movff	___ftmul@f1,??___ftmul+1
  5019  000656  C00A  F011         	movff	___ftmul@f1+1,??___ftmul+2
  5020  00065A  C00B  F012         	movff	___ftmul@f1+2,??___ftmul+3
  5021  00065E  280F               	incf	??___ftmul,w,c
  5022  000660  6E13               	movwf	(??___ftmul+4)& (0+255),c
  5023  000662  D001               	goto	u1350
  5024  000664                     u1355:
  5025  000664  D869               	call	PL29	;call to abstracted procedure
  5026  000666                     u1350:
  5027  000666  2E13               	decfsz	(??___ftmul+4)& (0+255),f,c
  5028  000668  D7FD               	goto	u1355
  5029  00066A  5010               	movf	??___ftmul+1,w,c
  5030  00066C  6E14               	movwf	___ftmul@exp,c
  5031  00066E  6614               	tstfsz	___ftmul@exp& (0+255),c
  5032  000670  D004               	goto	l3205
  5033  000672  6A09               	clrf	?___ftmul,c
  5034  000674  6A0A               	clrf	?___ftmul+1,c
  5035  000676  6A0B               	clrf	?___ftmul+2,c
  5036  000678  0012               	return	
  5037  00067A                     l3205:
  5038  00067A  0E0F               	movlw	15
  5039  00067C  6E0F               	movwf	??___ftmul& (0+255),c
  5040  00067E  C00C  F010         	movff	___ftmul@f2,??___ftmul+1
  5041  000682  C00D  F011         	movff	___ftmul@f2+1,??___ftmul+2
  5042  000686  C00E  F012         	movff	___ftmul@f2+2,??___ftmul+3
  5043  00068A  280F               	incf	??___ftmul,w,c
  5044  00068C  6E13               	movwf	(??___ftmul+4)& (0+255),c
  5045  00068E  D001               	goto	u1370
  5046  000690                     u1375:
  5047  000690  D853               	call	PL29	;call to abstracted procedure
  5048  000692                     u1370:
  5049  000692  2E13               	decfsz	(??___ftmul+4)& (0+255),f,c
  5050  000694  D7FD               	goto	u1375
  5051  000696  5010               	movf	??___ftmul+1,w,c
  5052  000698  6E19               	movwf	___ftmul@sign,c
  5053  00069A  6619               	tstfsz	___ftmul@sign& (0+255),c
  5054  00069C  D004               	goto	l3209
  5055  00069E  6A09               	clrf	?___ftmul,c
  5056  0006A0  6A0A               	clrf	?___ftmul+1,c
  5057  0006A2  6A0B               	clrf	?___ftmul+2,c
  5058  0006A4  0012               	return	
  5059  0006A6                     l3209:
  5060  0006A6  5019               	movf	___ftmul@sign,w,c
  5061  0006A8  0F7B               	addlw	123
  5062  0006AA  2614               	addwf	___ftmul@exp,f,c
  5063  0006AC  C00B  F019         	movff	___ftmul@f1+2,___ftmul@sign
  5064  0006B0  500E               	movf	(___ftmul@f2+2)& (0+255),w,c
  5065  0006B2  1A19               	xorwf	___ftmul@sign,f,c
  5066  0006B4  0E80               	movlw	128
  5067  0006B6  1619               	andwf	___ftmul@sign,f,c
  5068  0006B8  8E0A               	bsf	___ftmul@f1+1,7,c
  5069  0006BA  8E0D               	bsf	___ftmul@f2+1,7,c
  5070  0006BC  0E00               	movlw	0
  5071  0006BE  160E               	andwf	___ftmul@f2+2,f,c
  5072  0006C0  6A15               	clrf	___ftmul@f3_as_product,c
  5073  0006C2  6A16               	clrf	___ftmul@f3_as_product+1,c
  5074  0006C4  6A17               	clrf	___ftmul@f3_as_product+2,c
  5075  0006C6  0E07               	movlw	7
  5076  0006C8  6E18               	movwf	___ftmul@cntr,c
  5077  0006CA                     l3223:
  5078  0006CA  A009               	btfss	___ftmul@f1,0,c
  5079  0006CC  D002               	goto	l3227
  5080  0006CE  500C               	movf	___ftmul@f2,w,c
  5081  0006D0  D82D               	call	PL27	;call to abstracted procedure
  5082  0006D2                     l3227:
  5083  0006D2  90D8               	bcf	status,0,c
  5084  0006D4  320B               	rrcf	___ftmul@f1+2,f,c
  5085  0006D6  320A               	rrcf	___ftmul@f1+1,f,c
  5086  0006D8  3209               	rrcf	___ftmul@f1,f,c
  5087  0006DA  90D8               	bcf	status,0,c
  5088  0006DC  360C               	rlcf	___ftmul@f2,f,c
  5089  0006DE  360D               	rlcf	___ftmul@f2+1,f,c
  5090  0006E0  360E               	rlcf	___ftmul@f2+2,f,c
  5091  0006E2  2E18               	decfsz	___ftmul@cntr,f,c
  5092  0006E4  D7F2               	goto	l3223
  5093  0006E6  0E09               	movlw	9
  5094  0006E8  6E18               	movwf	___ftmul@cntr,c
  5095  0006EA                     l3233:
  5096  0006EA  A009               	btfss	___ftmul@f1,0,c
  5097  0006EC  D002               	goto	l3237
  5098  0006EE  500C               	movf	___ftmul@f2,w,c
  5099  0006F0  D81D               	call	PL27	;call to abstracted procedure
  5100  0006F2                     l3237:
  5101  0006F2  90D8               	bcf	status,0,c
  5102  0006F4  320B               	rrcf	___ftmul@f1+2,f,c
  5103  0006F6  320A               	rrcf	___ftmul@f1+1,f,c
  5104  0006F8  3209               	rrcf	___ftmul@f1,f,c
  5105  0006FA  90D8               	bcf	status,0,c
  5106  0006FC  3217               	rrcf	___ftmul@f3_as_product+2,f,c
  5107  0006FE  3216               	rrcf	___ftmul@f3_as_product+1,f,c
  5108  000700  3215               	rrcf	___ftmul@f3_as_product,f,c
  5109  000702  2E18               	decfsz	___ftmul@cntr,f,c
  5110  000704  D7F2               	goto	l3233
  5111  000706  C015  F001         	movff	___ftmul@f3_as_product,?___ftpack
  5112  00070A  C016  F002         	movff	___ftmul@f3_as_product+1,?___ftpack+1
  5113  00070E  C017  F003         	movff	___ftmul@f3_as_product+2,?___ftpack+2
  5114  000712  C014  F004         	movff	___ftmul@exp,?___ftpack+3
  5115  000716  C019  F005         	movff	___ftmul@sign,?___ftpack+4
  5116  00071A  ECF8  F004         	call	___ftpack	;wreg free
  5117  00071E  C001  F009         	movff	?___ftpack,?___ftmul
  5118  000722  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  5119  000726  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  5120  00072A  0012               	return	
  5121  00072C                     __end_of___ftmul:
  5122                           	opt stack 0
  5123  00072C                     PL27:
  5124  00072C  2615               	addwf	___ftmul@f3_as_product,f,c
  5125  00072E  500D               	movf	___ftmul@f2+1,w,c
  5126  000730  2216               	addwfc	___ftmul@f3_as_product+1,f,c
  5127  000732  500E               	movf	___ftmul@f2+2,w,c
  5128  000734  2217               	addwfc	___ftmul@f3_as_product+2,f,c
  5129  000736  0012               	return	
  5130  000738                     PL29:
  5131  000738  90D8               	bcf	status,0,c
  5132  00073A  3212               	rrcf	??___ftmul+3,f,c
  5133  00073C  3211               	rrcf	??___ftmul+2,f,c
  5134  00073E  3210               	rrcf	??___ftmul+1,f,c
  5135  000740  0012               	return	
  5136                           tblptru	equ	0xFF8
  5137                           tblptrh	equ	0xFF7
  5138                           tblptrl	equ	0xFF6
  5139                           tablat	equ	0xFF5
  5140                           prodh	equ	0xFF4
  5141                           prodl	equ	0xFF3
  5142                           intcon	equ	0xFF2
  5143                           postinc0	equ	0xFEE
  5144                           wreg	equ	0xFE8
  5145                           indf1	equ	0xFE7
  5146                           postdec1	equ	0xFE5
  5147                           fsr1h	equ	0xFE2
  5148                           fsr1l	equ	0xFE1
  5149                           indf2	equ	0xFDF
  5150                           postinc2	equ	0xFDE
  5151                           postdec2	equ	0xFDD
  5152                           fsr2h	equ	0xFDA
  5153                           fsr2l	equ	0xFD9
  5154                           status	equ	0xFD8
  5155                           
  5156 ;; *************** function ___ftpack *****************
  5157 ;; Defined at:
  5158 ;;		line 63 in file "d:\Program Files\HI-TECH Software\PICC-18\9.80\sources\float.c"
  5159 ;; Parameters:    Size  Location     Type
  5160 ;;  arg             3    0[COMRAM] unsigned um
  5161 ;;  exp             1    3[COMRAM] unsigned char 
  5162 ;;  sign            1    4[COMRAM] unsigned char 
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;		None
  5165 ;; Return value:  Size  Location     Type
  5166 ;;                  3    0[COMRAM] float 
  5167 ;; Registers used:
  5168 ;;		wreg, status,2, status,0
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: FFFFFFFF/0
  5173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5174 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5176 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5177 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5178 ;;Total ram usage:        8 bytes
  5179 ;; Hardware stack levels used:    1
  5180 ;; Hardware stack levels required when called:    4
  5181 ;; This function calls:
  5182 ;;		Nothing
  5183 ;; This function is called by:
  5184 ;;		___ftmul
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           
  5188                           	psect	text24
  5189  0009F0                     __ptext24:
  5190                           	opt stack 0
  5191  0009F0                     ___ftpack:
  5192                           	opt stack 22
  5193  0009F0  5004               	movf	___ftpack@exp,w,c
  5194  0009F2  E004               	bz	l848
  5195  0009F4  5001               	movf	___ftpack@arg,w,c
  5196  0009F6  1002               	iorwf	___ftpack@arg+1,w,c
  5197  0009F8  1003               	iorwf	___ftpack@arg+2,w,c
  5198  0009FA  E106               	bnz	l3175
  5199  0009FC                     l848:
  5200  0009FC  6A01               	clrf	?___ftpack,c
  5201  0009FE  6A02               	clrf	?___ftpack+1,c
  5202  000A00  6A03               	clrf	?___ftpack+2,c
  5203  000A02  0012               	return	
  5204  000A04                     l3173:
  5205  000A04  2A04               	incf	___ftpack@exp,f,c
  5206  000A06  D838               	call	PL28	;call to abstracted procedure
  5207  000A08                     l3175:
  5208  000A08  6A06               	clrf	??___ftpack& (0+255),c
  5209  000A0A  6A07               	clrf	(??___ftpack+1)& (0+255),c
  5210  000A0C  0EFE               	movlw	254
  5211  000A0E  1403               	andwf	___ftpack@arg+2,w,c
  5212  000A10  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5213  000A12  5006               	movf	??___ftpack,w,c
  5214  000A14  1007               	iorwf	??___ftpack+1,w,c
  5215  000A16  1008               	iorwf	??___ftpack+2,w,c
  5216  000A18  E007               	bz	l3181
  5217  000A1A  D7F4               	goto	l3173
  5218  000A1C                     l3177:
  5219  000A1C  2A04               	incf	___ftpack@exp,f,c
  5220  000A1E  2A01               	incf	___ftpack@arg,f,c
  5221  000A20  0E00               	movlw	0
  5222  000A22  2202               	addwfc	___ftpack@arg+1,f,c
  5223  000A24  2203               	addwfc	___ftpack@arg+2,f,c
  5224  000A26  D828               	call	PL28	;call to abstracted procedure
  5225  000A28                     l3181:
  5226  000A28  6A06               	clrf	??___ftpack& (0+255),c
  5227  000A2A  6A07               	clrf	(??___ftpack+1)& (0+255),c
  5228  000A2C  5003               	movf	___ftpack@arg+2,w,c
  5229  000A2E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5230  000A30  5006               	movf	??___ftpack,w,c
  5231  000A32  1007               	iorwf	??___ftpack+1,w,c
  5232  000A34  1008               	iorwf	??___ftpack+2,w,c
  5233  000A36  E006               	bz	l3185
  5234  000A38  D7F1               	goto	l3177
  5235  000A3A                     l3183:
  5236  000A3A  0604               	decf	___ftpack@exp,f,c
  5237  000A3C  90D8               	bcf	status,0,c
  5238  000A3E  3601               	rlcf	___ftpack@arg,f,c
  5239  000A40  3602               	rlcf	___ftpack@arg+1,f,c
  5240  000A42  3603               	rlcf	___ftpack@arg+2,f,c
  5241  000A44                     l3185:
  5242  000A44  AE02               	btfss	___ftpack@arg+1,7,c
  5243  000A46  D7F9               	goto	l3183
  5244  000A48  A004               	btfss	___ftpack@exp,0,c
  5245  000A4A  9E02               	bcf	___ftpack@arg+1,7,c
  5246  000A4C  90D8               	bcf	status,0,c
  5247  000A4E  3204               	rrcf	___ftpack@exp,f,c
  5248  000A50  5004               	movf	___ftpack@exp,w,c
  5249  000A52  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5250  000A54  6A07               	clrf	(??___ftpack+1)& (0+255),c
  5251  000A56  6A06               	clrf	??___ftpack& (0+255),c
  5252  000A58  5006               	movf	??___ftpack,w,c
  5253  000A5A  1201               	iorwf	___ftpack@arg,f,c
  5254  000A5C  5007               	movf	??___ftpack+1,w,c
  5255  000A5E  1202               	iorwf	___ftpack@arg+1,f,c
  5256  000A60  5008               	movf	??___ftpack+2,w,c
  5257  000A62  1203               	iorwf	___ftpack@arg+2,f,c
  5258  000A64  5005               	movf	___ftpack@sign,w,c
  5259  000A66  A4D8               	btfss	status,2,c
  5260  000A68  8E03               	bsf	___ftpack@arg+2,7,c
  5261  000A6A  C001  F001         	movff	___ftpack@arg,?___ftpack
  5262  000A6E  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5263  000A72  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5264  000A76  0012               	return	
  5265  000A78                     __end_of___ftpack:
  5266                           	opt stack 0
  5267  000A78                     PL28:
  5268  000A78  90D8               	bcf	status,0,c
  5269  000A7A  3203               	rrcf	___ftpack@arg+2,f,c
  5270  000A7C  3202               	rrcf	___ftpack@arg+1,f,c
  5271  000A7E  3201               	rrcf	___ftpack@arg,f,c
  5272  000A80  0012               	return	
  5273                           tblptru	equ	0xFF8
  5274                           tblptrh	equ	0xFF7
  5275                           tblptrl	equ	0xFF6
  5276                           tablat	equ	0xFF5
  5277                           prodh	equ	0xFF4
  5278                           prodl	equ	0xFF3
  5279                           intcon	equ	0xFF2
  5280                           postinc0	equ	0xFEE
  5281                           wreg	equ	0xFE8
  5282                           indf1	equ	0xFE7
  5283                           postdec1	equ	0xFE5
  5284                           fsr1h	equ	0xFE2
  5285                           fsr1l	equ	0xFE1
  5286                           indf2	equ	0xFDF
  5287                           postinc2	equ	0xFDE
  5288                           postdec2	equ	0xFDD
  5289                           fsr2h	equ	0xFDA
  5290                           fsr2l	equ	0xFD9
  5291                           status	equ	0xFD8
  5292                           
  5293 ;; *************** function ___fttol *****************
  5294 ;; Defined at:
  5295 ;;		line 45 in file "d:\Program Files\HI-TECH Software\PICC-18\9.80\sources\fttol.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  f1              3   25[COMRAM] float 
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  lval            4   35[COMRAM] unsigned long 
  5300 ;;  exp1            1   39[COMRAM] unsigned char 
  5301 ;;  sign1           1   34[COMRAM] unsigned char 
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  4   25[COMRAM] long 
  5304 ;; Registers used:
  5305 ;;		wreg, status,2, status,0
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 0/0
  5309 ;;		Unchanged: FFFFFFF0/0
  5310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5312 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5313 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5314 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5315 ;;Total ram usage:       15 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    4
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_CalculateTime25msCounter
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           	psect	text25
  5326  000816                     __ptext25:
  5327                           	opt stack 0
  5328  000816                     ___fttol:
  5329                           	opt stack 23
  5330  000816  0E0F               	movlw	15
  5331  000818  D843               	call	PL6	;call to abstracted procedure
  5332  00081A  6E28               	movwf	___fttol@exp1,c
  5333  00081C  6628               	tstfsz	___fttol@exp1& (0+255),c
  5334  00081E  D005               	goto	l3249
  5335  000820                     l3247:
  5336  000820  6A1A               	clrf	?___fttol,c
  5337  000822  6A1B               	clrf	?___fttol+1,c
  5338  000824  6A1C               	clrf	?___fttol+2,c
  5339  000826  6A1D               	clrf	?___fttol+3,c
  5340  000828  0012               	return	
  5341  00082A                     l3249:
  5342  00082A  0E17               	movlw	23
  5343  00082C  D839               	call	PL6	;call to abstracted procedure
  5344  00082E  6E23               	movwf	___fttol@sign1,c
  5345  000830  8E1B               	bsf	___fttol@f1+1,7,c
  5346  000832  6A1C               	clrf	___fttol@f1+2,c
  5347  000834  501A               	movf	___fttol@f1,w,c
  5348  000836  6E24               	movwf	___fttol@lval,c
  5349  000838  501B               	movf	___fttol@f1+1,w,c
  5350  00083A  6E25               	movwf	___fttol@lval+1,c
  5351  00083C  501C               	movf	___fttol@f1+2,w,c
  5352  00083E  6E26               	movwf	___fttol@lval+2,c
  5353  000840  6A27               	clrf	___fttol@lval+3,c
  5354  000842  0E8E               	movlw	142
  5355  000844  5E28               	subwf	___fttol@exp1,f,c
  5356  000846  AE28               	btfss	___fttol@exp1,7,c
  5357  000848  D00C               	goto	l3269
  5358  00084A  5028               	movf	___fttol@exp1,w,c
  5359  00084C  0A80               	xorlw	128
  5360  00084E  0F8F               	addlw	143
  5361  000850  E3E7               	bnc	l3247
  5362  000852                     l3265:
  5363  000852  90D8               	bcf	status,0,c
  5364  000854  3227               	rrcf	___fttol@lval+3,f,c
  5365  000856  3226               	rrcf	___fttol@lval+2,f,c
  5366  000858  3225               	rrcf	___fttol@lval+1,f,c
  5367  00085A  3224               	rrcf	___fttol@lval,f,c
  5368  00085C  3E28               	incfsz	___fttol@exp1,f,c
  5369  00085E  D7F9               	goto	l3265
  5370  000860  D00C               	goto	l3277
  5371  000862                     l3269:
  5372  000862  0E17               	movlw	23
  5373  000864  6428               	cpfsgt	___fttol@exp1,c
  5374  000866  D007               	goto	l3275
  5375  000868  D7DB               	goto	l3247
  5376  00086A                     l3273:
  5377  00086A  90D8               	bcf	status,0,c
  5378  00086C  3624               	rlcf	___fttol@lval,f,c
  5379  00086E  3625               	rlcf	___fttol@lval+1,f,c
  5380  000870  3626               	rlcf	___fttol@lval+2,f,c
  5381  000872  3627               	rlcf	___fttol@lval+3,f,c
  5382  000874  0628               	decf	___fttol@exp1,f,c
  5383  000876                     l3275:
  5384  000876  6628               	tstfsz	___fttol@exp1,c
  5385  000878  D7F8               	goto	l3273
  5386  00087A                     l3277:
  5387  00087A  5023               	movf	___fttol@sign1,w,c
  5388  00087C  E008               	bz	l3281
  5389  00087E  1E27               	comf	___fttol@lval+3,f,c
  5390  000880  1E26               	comf	___fttol@lval+2,f,c
  5391  000882  1E25               	comf	___fttol@lval+1,f,c
  5392  000884  6C24               	negf	___fttol@lval,c
  5393  000886  0E00               	movlw	0
  5394  000888  2225               	addwfc	___fttol@lval+1,f,c
  5395  00088A  2226               	addwfc	___fttol@lval+2,f,c
  5396  00088C  2227               	addwfc	___fttol@lval+3,f,c
  5397  00088E                     l3281:
  5398  00088E  C024  F01A         	movff	___fttol@lval,?___fttol
  5399  000892  C025  F01B         	movff	___fttol@lval+1,?___fttol+1
  5400  000896  C026  F01C         	movff	___fttol@lval+2,?___fttol+2
  5401  00089A  C027  F01D         	movff	___fttol@lval+3,?___fttol+3
  5402  00089E  0012               	return	
  5403  0008A0                     __end_of___fttol:
  5404                           	opt stack 0
  5405  0008A0                     PL6:
  5406  0008A0  6E1E               	movwf	??___fttol& (0+255),c
  5407  0008A2  C01A  F01F         	movff	___fttol@f1,??___fttol+1
  5408  0008A6  C01B  F020         	movff	___fttol@f1+1,??___fttol+2
  5409  0008AA  C01C  F021         	movff	___fttol@f1+2,??___fttol+3
  5410  0008AE  281E               	incf	??___fttol,w,c
  5411  0008B0  6E22               	movwf	(??___fttol+4)& (0+255),c
  5412  0008B2  D004               	goto	u1410
  5413  0008B4                     u1415:
  5414  0008B4  90D8               	bcf	status,0,c
  5415  0008B6  3221               	rrcf	??___fttol+3,f,c
  5416  0008B8  3220               	rrcf	??___fttol+2,f,c
  5417  0008BA  321F               	rrcf	??___fttol+1,f,c
  5418  0008BC                     u1410:
  5419  0008BC  2E22               	decfsz	(??___fttol+4)& (0+255),f,c
  5420  0008BE  D7FA               	goto	u1415
  5421  0008C0  501F               	movf	??___fttol+1,w,c
  5422  0008C2  0012               	return	
  5423                           tblptru	equ	0xFF8
  5424                           tblptrh	equ	0xFF7
  5425                           tblptrl	equ	0xFF6
  5426                           tablat	equ	0xFF5
  5427                           prodh	equ	0xFF4
  5428                           prodl	equ	0xFF3
  5429                           intcon	equ	0xFF2
  5430                           postinc0	equ	0xFEE
  5431                           wreg	equ	0xFE8
  5432                           indf1	equ	0xFE7
  5433                           postdec1	equ	0xFE5
  5434                           fsr1h	equ	0xFE2
  5435                           fsr1l	equ	0xFE1
  5436                           indf2	equ	0xFDF
  5437                           postinc2	equ	0xFDE
  5438                           postdec2	equ	0xFDD
  5439                           fsr2h	equ	0xFDA
  5440                           fsr2l	equ	0xFD9
  5441                           status	equ	0xFD8
  5442                           
  5443 ;; *************** function ___lwdiv *****************
  5444 ;; Defined at:
  5445 ;;		line 10 in file "d:\Program Files\HI-TECH Software\PICC-18\9.80\sources\lwdiv.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;  dividend        2    0[COMRAM] unsigned int 
  5448 ;;  divisor         2    2[COMRAM] unsigned int 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  quotient        2    4[COMRAM] unsigned int 
  5451 ;;  counter         1    6[COMRAM] unsigned char 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  2    0[COMRAM] unsigned int 
  5454 ;; Registers used:
  5455 ;;		wreg, status,2, status,0
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: FFFFFFFF/0
  5460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5462 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5464 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5465 ;;Total ram usage:        7 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:    4
  5468 ;; This function calls:
  5469 ;;		Nothing
  5470 ;; This function is called by:
  5471 ;;		_CalculateTime25msCounter
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           
  5475                           	psect	text26
  5476  000D1C                     __ptext26:
  5477                           	opt stack 0
  5478  000D1C                     ___lwdiv:
  5479                           	opt stack 23
  5480  000D1C  6A05               	clrf	___lwdiv@quotient,c
  5481  000D1E  6A06               	clrf	___lwdiv@quotient+1,c
  5482  000D20  5004               	movf	___lwdiv@divisor+1,w,c
  5483  000D22  1003               	iorwf	___lwdiv@divisor,w,c
  5484  000D24  E01B               	bz	l1061
  5485  000D26  0E01               	movlw	1
  5486  000D28  6E07               	movwf	___lwdiv@counter,c
  5487  000D2A  D004               	goto	l3293
  5488  000D2C                     l3291:
  5489  000D2C  90D8               	bcf	status,0,c
  5490  000D2E  3603               	rlcf	___lwdiv@divisor,f,c
  5491  000D30  3604               	rlcf	___lwdiv@divisor+1,f,c
  5492  000D32  2A07               	incf	___lwdiv@counter,f,c
  5493  000D34                     l3293:
  5494  000D34  AE04               	btfss	___lwdiv@divisor+1,7,c
  5495  000D36  D7FA               	goto	l3291
  5496  000D38                     l3295:
  5497  000D38  90D8               	bcf	status,0,c
  5498  000D3A  3605               	rlcf	___lwdiv@quotient,f,c
  5499  000D3C  3606               	rlcf	___lwdiv@quotient+1,f,c
  5500  000D3E  5003               	movf	___lwdiv@divisor,w,c
  5501  000D40  5C01               	subwf	___lwdiv@dividend,w,c
  5502  000D42  5004               	movf	___lwdiv@divisor+1,w,c
  5503  000D44  5802               	subwfb	___lwdiv@dividend+1,w,c
  5504  000D46  E305               	bnc	l3303
  5505  000D48  5003               	movf	___lwdiv@divisor,w,c
  5506  000D4A  5E01               	subwf	___lwdiv@dividend,f,c
  5507  000D4C  5004               	movf	___lwdiv@divisor+1,w,c
  5508  000D4E  5A02               	subwfb	___lwdiv@dividend+1,f,c
  5509  000D50  8005               	bsf	___lwdiv@quotient,0,c
  5510  000D52                     l3303:
  5511  000D52  90D8               	bcf	status,0,c
  5512  000D54  3204               	rrcf	___lwdiv@divisor+1,f,c
  5513  000D56  3203               	rrcf	___lwdiv@divisor,f,c
  5514  000D58  2E07               	decfsz	___lwdiv@counter,f,c
  5515  000D5A  D7EE               	goto	l3295
  5516  000D5C                     l1061:
  5517  000D5C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5518  000D60  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5519  000D64  0012               	return	
  5520  000D66                     __end_of___lwdiv:
  5521                           	opt stack 0
  5522                           tblptru	equ	0xFF8
  5523                           tblptrh	equ	0xFF7
  5524                           tblptrl	equ	0xFF6
  5525                           tablat	equ	0xFF5
  5526                           prodh	equ	0xFF4
  5527                           prodl	equ	0xFF3
  5528                           intcon	equ	0xFF2
  5529                           postinc0	equ	0xFEE
  5530                           wreg	equ	0xFE8
  5531                           indf1	equ	0xFE7
  5532                           postdec1	equ	0xFE5
  5533                           fsr1h	equ	0xFE2
  5534                           fsr1l	equ	0xFE1
  5535                           indf2	equ	0xFDF
  5536                           postinc2	equ	0xFDE
  5537                           postdec2	equ	0xFDD
  5538                           fsr2h	equ	0xFDA
  5539                           fsr2l	equ	0xFD9
  5540                           status	equ	0xFD8
  5541                           
  5542 ;; *************** function _IntServer *****************
  5543 ;; Defined at:
  5544 ;;		line 287 in file "G:\working\YellowFlashingController\YellowFlash.C"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;		None
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;		None
  5549 ;; Return value:  Size  Location     Type
  5550 ;;		None               void
  5551 ;; Registers used:
  5552 ;;		wreg, status,2, status,0, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: FFFFFFF0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5562 ;;Total ram usage:        0 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:    3
  5565 ;; This function calls:
  5566 ;;		_TMR0IntServer
  5567 ;;		_TMR1IntServer
  5568 ;;		_ADIntServer
  5569 ;; This function is called by:
  5570 ;;		Interrupt level 2
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574                           	psect	intcode
  5575  000008                     __pintcode:
  5576                           	opt stack 0
  5577  000008                     _IntServer:
  5578                           	opt stack 22
  5579  000008                     
  5580                           ;YellowFlash.C: 290: if(TMR0IE && TMR0IF)
  5581  000008  AAF2               	btfss	intcon,5,c	;volatile
  5582  00000A  D001               	goto	i2u75_41
  5583  00000C  D001               	goto	i2u75_40
  5584  00000E                     i2u75_41:
  5585  00000E  D007               	goto	i2l2295
  5586  000010                     i2u75_40:
  5587  000010  A4F2               	btfss	intcon,2,c	;volatile
  5588  000012  D001               	goto	i2u76_41
  5589  000014  D001               	goto	i2u76_40
  5590  000016                     i2u76_41:
  5591  000016  D003               	goto	i2l2295
  5592  000018                     i2u76_40:
  5593  000018                     
  5594                           ;YellowFlash.C: 291: {
  5595                           ;YellowFlash.C: 293: TMR0IF = 0;
  5596  000018  94F2               	bcf	intcon,2,c	;volatile
  5597  00001A                     
  5598                           ;YellowFlash.C: 294: TMR0IntServer();
  5599  00001A  ECDC  F007         	call	_TMR0IntServer	;wreg free
  5600  00001E                     i2l2295:
  5601                           
  5602                           ;YellowFlash.C: 295: }
  5603                           ;YellowFlash.C: 297: if(TMR1IE && TMR1IF)
  5604  00001E  A09D               	btfss	3997,0,c	;volatile
  5605  000020  D001               	goto	i2u77_41
  5606  000022  D001               	goto	i2u77_40
  5607  000024                     i2u77_41:
  5608  000024  D007               	goto	i2l2303
  5609  000026                     i2u77_40:
  5610  000026  A09E               	btfss	3998,0,c	;volatile
  5611  000028  D001               	goto	i2u78_41
  5612  00002A  D001               	goto	i2u78_40
  5613  00002C                     i2u78_41:
  5614  00002C  D003               	goto	i2l2303
  5615  00002E                     i2u78_40:
  5616  00002E                     
  5617                           ;YellowFlash.C: 298: {
  5618                           ;YellowFlash.C: 300: TMR1IF = 0;
  5619  00002E  909E               	bcf	3998,0,c	;volatile
  5620  000030                     
  5621                           ;YellowFlash.C: 301: TMR1IntServer();
  5622  000030  ECA7  F007         	call	_TMR1IntServer	;wreg free
  5623  000034                     i2l2303:
  5624                           
  5625                           ;YellowFlash.C: 306: {
  5626                           ;YellowFlash.C: 307: CANInt=1;
  5627  000034  506E               	movf	3950,w,c	;volatile
  5628  000036                     
  5629                           ;YellowFlash.C: 308: }
  5630                           ;YellowFlash.C: 309: if(ADIE && ADIF)
  5631  000036  AC9D               	btfss	3997,6,c	;volatile
  5632  000038  D001               	goto	i2u79_41
  5633  00003A  D001               	goto	i2u79_40
  5634  00003C                     i2u79_41:
  5635  00003C  D007               	goto	i2l518
  5636  00003E                     i2u79_40:
  5637  00003E  AC9E               	btfss	3998,6,c	;volatile
  5638  000040  D001               	goto	i2u80_41
  5639  000042  D001               	goto	i2u80_40
  5640  000044                     i2u80_41:
  5641  000044  D003               	goto	i2l518
  5642  000046                     i2u80_40:
  5643  000046                     
  5644                           ;YellowFlash.C: 310: {
  5645                           ;YellowFlash.C: 311: ADIF = 0;
  5646  000046  9C9E               	bcf	3998,6,c	;volatile
  5647  000048                     
  5648                           ;YellowFlash.C: 312: ADIntServer();
  5649  000048  ECE3  F007         	call	_ADIntServer	;wreg free
  5650  00004C                     i2l518:
  5651  00004C  0011               	retfie		f
  5652  00004E                     __end_of_IntServer:
  5653                           	opt stack 0
  5654                           tblptru	equ	0xFF8
  5655                           tblptrh	equ	0xFF7
  5656                           tblptrl	equ	0xFF6
  5657                           tablat	equ	0xFF5
  5658                           prodh	equ	0xFF4
  5659                           prodl	equ	0xFF3
  5660                           intcon	equ	0xFF2
  5661                           postinc0	equ	0xFEE
  5662                           wreg	equ	0xFE8
  5663                           indf1	equ	0xFE7
  5664                           postdec1	equ	0xFE5
  5665                           fsr1h	equ	0xFE2
  5666                           fsr1l	equ	0xFE1
  5667                           indf2	equ	0xFDF
  5668                           postinc2	equ	0xFDE
  5669                           postdec2	equ	0xFDD
  5670                           fsr2h	equ	0xFDA
  5671                           fsr2l	equ	0xFD9
  5672                           status	equ	0xFD8
  5673                           
  5674 ;; *************** function _TMR0IntServer *****************
  5675 ;; Defined at:
  5676 ;;		line 241 in file "G:\working\YellowFlashingController\YellowFlash.C"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;		None
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;		None
  5681 ;; Return value:  Size  Location     Type
  5682 ;;		None               void
  5683 ;; Registers used:
  5684 ;;		wreg, status,2
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: FFFFFFF0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5694 ;;Total ram usage:        0 bytes
  5695 ;; Hardware stack levels used:    1
  5696 ;; This function calls:
  5697 ;;		Nothing
  5698 ;; This function is called by:
  5699 ;;		_IntServer
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           
  5703                           	psect	text28
  5704  000FB8                     __ptext28:
  5705                           	opt stack 0
  5706  000FB8                     _TMR0IntServer:
  5707                           	opt stack 24
  5708                           
  5709                           ;YellowFlash.C: 243: TMR0H = 0xd8;
  5710  000FB8  0ED8               	movlw	216
  5711  000FBA  6ED7               	movwf	4055,c	;volatile
  5712                           
  5713                           ;YellowFlash.C: 244: TMR0L = 0xef;
  5714  000FBC  0EEF               	movlw	239
  5715  000FBE  6ED6               	movwf	4054,c	;volatile
  5716                           
  5717                           ;YellowFlash.C: 248: time5ms = 1;
  5718  000FC0  0100               	movlb	(_time5ms/(0+8)) shr (0+8)
  5719  000FC2  825D               	bsf	_time5ms/(0+8),_time5ms& (0+7),c
  5720  000FC4  0CEF               	retlw	239
  5721  000FC6                     __end_of_TMR0IntServer:
  5722                           	opt stack 0
  5723                           tblptru	equ	0xFF8
  5724                           tblptrh	equ	0xFF7
  5725                           tblptrl	equ	0xFF6
  5726                           tablat	equ	0xFF5
  5727                           prodh	equ	0xFF4
  5728                           prodl	equ	0xFF3
  5729                           intcon	equ	0xFF2
  5730                           postinc0	equ	0xFEE
  5731                           wreg	equ	0xFE8
  5732                           indf1	equ	0xFE7
  5733                           postdec1	equ	0xFE5
  5734                           fsr1h	equ	0xFE2
  5735                           fsr1l	equ	0xFE1
  5736                           indf2	equ	0xFDF
  5737                           postinc2	equ	0xFDE
  5738                           postdec2	equ	0xFDD
  5739                           fsr2h	equ	0xFDA
  5740                           fsr2l	equ	0xFD9
  5741                           status	equ	0xFD8
  5742                           
  5743 ;; *************** function _TMR1IntServer *****************
  5744 ;; Defined at:
  5745 ;;		line 253 in file "G:\working\YellowFlashingController\YellowFlash.C"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;		None
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;		None
  5750 ;; Return value:  Size  Location     Type
  5751 ;;		None               void
  5752 ;; Registers used:
  5753 ;;		wreg, status,2, status,0, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: FFFFFFF0/0
  5758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5763 ;;Total ram usage:        0 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:    2
  5766 ;; This function calls:
  5767 ;;		_YellowFlash
  5768 ;; This function is called by:
  5769 ;;		_IntServer
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           	psect	text29
  5774  000F4E                     __ptext29:
  5775                           	opt stack 0
  5776  000F4E                     _TMR1IntServer:
  5777                           	opt stack 22
  5778                           
  5779                           ;YellowFlash.C: 255: TMR1H = 0x3c;
  5780  000F4E  0E3C               	movlw	60
  5781  000F50  6ECF               	movwf	4047,c	;volatile
  5782                           
  5783                           ;YellowFlash.C: 256: TMR1L = 0xaf;
  5784  000F52  0EAF               	movlw	175
  5785  000F54  6ECE               	movwf	4046,c	;volatile
  5786                           
  5787                           ;YellowFlash.C: 259: t1_cont++;
  5788  000F56  4A3C               	infsnz	_t1_cont,f,c
  5789  000F58  2A3D               	incf	_t1_cont+1,f,c
  5790                           
  5791                           ;YellowFlash.C: 268: if(t1_cont>=time_counter)
  5792  000F5A  503E               	movf	_time_counter,w,c
  5793  000F5C  5C3C               	subwf	_t1_cont,w,c
  5794  000F5E  503F               	movf	_time_counter+1,w,c
  5795  000F60  583D               	subwfb	_t1_cont+1,w,c
  5796  000F62  A0D8               	btfss	status,0,c
  5797  000F64  0012               	return	
  5798                           
  5799                           ;YellowFlash.C: 269: {
  5800                           ;YellowFlash.C: 270: t1_cont=0;
  5801  000F66  6A3C               	clrf	_t1_cont,c
  5802  000F68  6A3D               	clrf	_t1_cont+1,c
  5803                           
  5804                           ;YellowFlash.C: 271: YellowFlash();
  5805  000F6A  EFD4  F007         	goto	_YellowFlash	;wreg free
  5806  000F6E                     __end_of_TMR1IntServer:
  5807                           	opt stack 0
  5808                           tblptru	equ	0xFF8
  5809                           tblptrh	equ	0xFF7
  5810                           tblptrl	equ	0xFF6
  5811                           tablat	equ	0xFF5
  5812                           prodh	equ	0xFF4
  5813                           prodl	equ	0xFF3
  5814                           intcon	equ	0xFF2
  5815                           postinc0	equ	0xFEE
  5816                           wreg	equ	0xFE8
  5817                           indf1	equ	0xFE7
  5818                           postdec1	equ	0xFE5
  5819                           fsr1h	equ	0xFE2
  5820                           fsr1l	equ	0xFE1
  5821                           indf2	equ	0xFDF
  5822                           postinc2	equ	0xFDE
  5823                           postdec2	equ	0xFDD
  5824                           fsr2h	equ	0xFDA
  5825                           fsr2l	equ	0xFD9
  5826                           status	equ	0xFD8
  5827                           
  5828 ;; *************** function _YellowFlash *****************
  5829 ;; Defined at:
  5830 ;;		line 224 in file "G:\working\YellowFlashingController\YellowFlash.C"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;		None
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;		None
  5835 ;; Return value:  Size  Location     Type
  5836 ;;		None               void
  5837 ;; Registers used:
  5838 ;;		wreg, status,2, status,0, cstack
  5839 ;; Tracked objects:
  5840 ;;		On entry : 0/0
  5841 ;;		On exit  : 0/0
  5842 ;;		Unchanged: FFFFFFF0/0
  5843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5848 ;;Total ram usage:        0 bytes
  5849 ;; Hardware stack levels used:    1
  5850 ;; Hardware stack levels required when called:    1
  5851 ;; This function calls:
  5852 ;;		_LED_On_Disp
  5853 ;;		_LED_Off_Disp
  5854 ;; This function is called by:
  5855 ;;		_TMR1IntServer
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           	psect	text30
  5860  000FA8                     __ptext30:
  5861                           	opt stack 0
  5862  000FA8                     _YellowFlash:
  5863                           	opt stack 22
  5864                           
  5865                           ;YellowFlash.C: 225: if(turnoff)
  5866  000FA8  505A               	movf	_turnoff,w,c
  5867  000FAA  B4D8               	btfsc	status,2,c
  5868  000FAC  0012               	return	
  5869                           
  5870                           ;YellowFlash.C: 226: {
  5871                           ;YellowFlash.C: 227: if(switchmode)
  5872  000FAE  B05D               	btfsc	_switchmode/(0+8),_switchmode& (0+7),c
  5873                           
  5874                           ;YellowFlash.C: 228: {
  5875                           ;YellowFlash.C: 229: LED_On_Disp();
  5876  000FB0  EF76  F007         	goto	i2l1763	;wreg free
  5877                           
  5878                           ;YellowFlash.C: 231: else
  5879                           ;YellowFlash.C: 232: {
  5880                           ;YellowFlash.C: 233: LED_Off_Disp();
  5881                           
  5882                           ;YellowFlash.C: 230: }
  5883  000FB4  EF62  F007         	goto	i2l1769	;wreg free
  5884  000FB8                     __end_of_YellowFlash:
  5885                           	opt stack 0
  5886                           tblptru	equ	0xFF8
  5887                           tblptrh	equ	0xFF7
  5888                           tblptrl	equ	0xFF6
  5889                           tablat	equ	0xFF5
  5890                           prodh	equ	0xFF4
  5891                           prodl	equ	0xFF3
  5892                           intcon	equ	0xFF2
  5893                           postinc0	equ	0xFEE
  5894                           wreg	equ	0xFE8
  5895                           indf1	equ	0xFE7
  5896                           postdec1	equ	0xFE5
  5897                           fsr1h	equ	0xFE2
  5898                           fsr1l	equ	0xFE1
  5899                           indf2	equ	0xFDF
  5900                           postinc2	equ	0xFDE
  5901                           postdec2	equ	0xFDD
  5902                           fsr2h	equ	0xFDA
  5903                           fsr2l	equ	0xFD9
  5904                           status	equ	0xFD8
  5905                           
  5906 ;; *************** function _LED_On_Disp *****************
  5907 ;; Defined at:
  5908 ;;		line 174 in file "G:\working\YellowFlashingController\YellowFlash.C"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;		None
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;		None
  5913 ;; Return value:  Size  Location     Type
  5914 ;;		None               void
  5915 ;; Registers used:
  5916 ;;		wreg, status,2, status,0
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: FFFFFFF0/0
  5921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5926 ;;Total ram usage:        0 bytes
  5927 ;; Hardware stack levels used:    1
  5928 ;; This function calls:
  5929 ;;		Nothing
  5930 ;; This function is called by:
  5931 ;;		_YellowFlash
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text31
  5936  000EDC                     __ptext31:
  5937                           	opt stack 0
  5938  000EDC                     _LED_On_Disp:
  5939                           	opt stack 22
  5940                           
  5941                           ;YellowFlash.C: 175: switch(run_mode)
  5942  000EDC  D007               	goto	i2l1763
  5943  000EDE                     i2l483:
  5944                           
  5945                           ;YellowFlash.C: 181: RC6=0;
  5946  000EDE  9C82               	bcf	3970,6,c	;volatile
  5947                           
  5948                           ;YellowFlash.C: 182: RC4=0;
  5949  000EE0  9882               	bcf	3970,4,c	;volatile
  5950  000EE2  D002               	goto	L7
  5951  000EE4                     i2l485:
  5952                           
  5953                           ;YellowFlash.C: 187: RC6=1;
  5954  000EE4  8C82               	bsf	3970,6,c	;volatile
  5955                           
  5956                           ;YellowFlash.C: 188: RC4=1;
  5957  000EE6  8882               	bsf	3970,4,c	;volatile
  5958  000EE8                     L7:
  5959                           
  5960                           ;YellowFlash.C: 189: RD3=0;
  5961  000EE8  9683               	bcf	3971,3,c	;volatile
  5962                           
  5963                           ;YellowFlash.C: 190: break;
  5964  000EEA  D005               	goto	i2l484
  5965  000EEC                     i2l1763:
  5966  000EEC  504C               	movf	_run_mode,w,c
  5967                           
  5968                           ; Switch size 1, requested type "space"
  5969                           ; Number of cases is 2, Range of values is 1 to 2
  5970                           ; switch strategies available:
  5971                           ; Name         Instructions Cycles
  5972                           ; simple_byte            7     4 (average)
  5973                           ;	Chosen strategy is simple_byte
  5974  000EEE  0A01               	xorlw	1	; case 1
  5975  000EF0  E0F6               	bz	i2l483
  5976  000EF2  0A03               	xorlw	3	; case 2
  5977  000EF4  E0F7               	bz	i2l485
  5978  000EF6                     i2l484:
  5979                           
  5980                           ;YellowFlash.C: 195: time_counter=time_on_counter;
  5981  000EF6  C044  F03E         	movff	_time_on_counter,_time_counter
  5982  000EFA  C045  F03F         	movff	_time_on_counter+1,_time_counter+1
  5983                           
  5984                           ;YellowFlash.C: 196: switchmode=0;
  5985  000EFE  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  5986  000F00  905D               	bcf	_switchmode/(0+8),_switchmode& (0+7),c
  5987  000F02  0012               	return	
  5988  000F04                     __end_of_LED_On_Disp:
  5989                           	opt stack 0
  5990                           tblptru	equ	0xFF8
  5991                           tblptrh	equ	0xFF7
  5992                           tblptrl	equ	0xFF6
  5993                           tablat	equ	0xFF5
  5994                           prodh	equ	0xFF4
  5995                           prodl	equ	0xFF3
  5996                           intcon	equ	0xFF2
  5997                           postinc0	equ	0xFEE
  5998                           wreg	equ	0xFE8
  5999                           indf1	equ	0xFE7
  6000                           postdec1	equ	0xFE5
  6001                           fsr1h	equ	0xFE2
  6002                           fsr1l	equ	0xFE1
  6003                           indf2	equ	0xFDF
  6004                           postinc2	equ	0xFDE
  6005                           postdec2	equ	0xFDD
  6006                           fsr2h	equ	0xFDA
  6007                           fsr2l	equ	0xFD9
  6008                           status	equ	0xFD8
  6009                           
  6010 ;; *************** function _LED_Off_Disp *****************
  6011 ;; Defined at:
  6012 ;;		line 199 in file "G:\working\YellowFlashingController\YellowFlash.C"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;		None
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;		None
  6017 ;; Return value:  Size  Location     Type
  6018 ;;		None               void
  6019 ;; Registers used:
  6020 ;;		wreg, status,2, status,0
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: FFFFFFF0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6030 ;;Total ram usage:        0 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; This function calls:
  6033 ;;		Nothing
  6034 ;; This function is called by:
  6035 ;;		_YellowFlash
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           	psect	text32
  6040  000EB4                     __ptext32:
  6041                           	opt stack 0
  6042  000EB4                     _LED_Off_Disp:
  6043                           	opt stack 22
  6044                           
  6045                           ;YellowFlash.C: 200: switch(run_mode)
  6046  000EB4  D007               	goto	i2l1769
  6047  000EB6                     i2l491:
  6048                           
  6049                           ;YellowFlash.C: 205: RC6=1;
  6050  000EB6  8C82               	bsf	3970,6,c	;volatile
  6051                           
  6052                           ;YellowFlash.C: 206: RC4=1;
  6053  000EB8  8882               	bsf	3970,4,c	;volatile
  6054  000EBA  D002               	goto	L8
  6055  000EBC                     i2l493:
  6056                           
  6057                           ;YellowFlash.C: 210: RC6=0;
  6058  000EBC  9C82               	bcf	3970,6,c	;volatile
  6059                           
  6060                           ;YellowFlash.C: 211: RC4=0;
  6061  000EBE  9882               	bcf	3970,4,c	;volatile
  6062  000EC0                     L8:
  6063                           
  6064                           ;YellowFlash.C: 212: RD3=1;
  6065  000EC0  8683               	bsf	3971,3,c	;volatile
  6066                           
  6067                           ;YellowFlash.C: 213: break;
  6068  000EC2  D005               	goto	i2l492
  6069  000EC4                     i2l1769:
  6070  000EC4  504C               	movf	_run_mode,w,c
  6071                           
  6072                           ; Switch size 1, requested type "space"
  6073                           ; Number of cases is 2, Range of values is 1 to 2
  6074                           ; switch strategies available:
  6075                           ; Name         Instructions Cycles
  6076                           ; simple_byte            7     4 (average)
  6077                           ;	Chosen strategy is simple_byte
  6078  000EC6  0A01               	xorlw	1	; case 1
  6079  000EC8  E0F6               	bz	i2l491
  6080  000ECA  0A03               	xorlw	3	; case 2
  6081  000ECC  E0F7               	bz	i2l493
  6082  000ECE                     i2l492:
  6083                           
  6084                           ;YellowFlash.C: 217: time_counter=time_off_counter;
  6085  000ECE  C042  F03E         	movff	_time_off_counter,_time_counter
  6086  000ED2  C043  F03F         	movff	_time_off_counter+1,_time_counter+1
  6087                           
  6088                           ;YellowFlash.C: 218: switchmode=1;
  6089  000ED6  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  6090  000ED8  805D               	bsf	_switchmode/(0+8),_switchmode& (0+7),c
  6091  000EDA  0012               	return	
  6092  000EDC                     __end_of_LED_Off_Disp:
  6093                           	opt stack 0
  6094                           tblptru	equ	0xFF8
  6095                           tblptrh	equ	0xFF7
  6096                           tblptrl	equ	0xFF6
  6097                           tablat	equ	0xFF5
  6098                           prodh	equ	0xFF4
  6099                           prodl	equ	0xFF3
  6100                           intcon	equ	0xFF2
  6101                           postinc0	equ	0xFEE
  6102                           wreg	equ	0xFE8
  6103                           indf1	equ	0xFE7
  6104                           postdec1	equ	0xFE5
  6105                           fsr1h	equ	0xFE2
  6106                           fsr1l	equ	0xFE1
  6107                           indf2	equ	0xFDF
  6108                           postinc2	equ	0xFDE
  6109                           postdec2	equ	0xFDD
  6110                           fsr2h	equ	0xFDA
  6111                           fsr2l	equ	0xFD9
  6112                           status	equ	0xFD8
  6113                           
  6114 ;; *************** function _ADIntServer *****************
  6115 ;; Defined at:
  6116 ;;		line 278 in file "G:\working\YellowFlashingController\YellowFlash.C"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;		None
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  adrel           2    0        unsigned int 
  6121 ;; Return value:  Size  Location     Type
  6122 ;;		None               void
  6123 ;; Registers used:
  6124 ;;		wreg
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: FFFFFFFF/0
  6129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6134 ;;Total ram usage:        0 bytes
  6135 ;; Hardware stack levels used:    1
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		_IntServer
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           	psect	text33
  6144  000FC6                     __ptext33:
  6145                           	opt stack 0
  6146  000FC6                     _ADIntServer:
  6147                           	opt stack 24
  6148                           
  6149                           ;YellowFlash.C: 281: adrel = (ADRESH<<8)|ADRESL;
  6150  000FC6  50C4               	movf	4036,w,c	;volatile
  6151  000FC8  50C3               	movf	4035,w,c	;volatile
  6152  000FCA  0012               	return	
  6153  000FCC                     __end_of_ADIntServer:
  6154                           	opt stack 0
  6155  0000                     tblptru	equ	0xFF8
  6156                           tblptrh	equ	0xFF7
  6157                           tblptrl	equ	0xFF6
  6158                           tablat	equ	0xFF5
  6159                           prodh	equ	0xFF4
  6160                           prodl	equ	0xFF3
  6161                           intcon	equ	0xFF2
  6162                           postinc0	equ	0xFEE
  6163                           wreg	equ	0xFE8
  6164                           indf1	equ	0xFE7
  6165                           postdec1	equ	0xFE5
  6166                           fsr1h	equ	0xFE2
  6167                           fsr1l	equ	0xFE1
  6168                           indf2	equ	0xFDF
  6169                           postinc2	equ	0xFDE
  6170                           postdec2	equ	0xFDD
  6171                           fsr2h	equ	0xFDA
  6172                           fsr2l	equ	0xFD9
  6173                           status	equ	0xFD8
  6174                           tblptru	equ	0xFF8
  6175                           tblptrh	equ	0xFF7
  6176                           tblptrl	equ	0xFF6
  6177                           tablat	equ	0xFF5
  6178                           prodh	equ	0xFF4
  6179                           prodl	equ	0xFF3
  6180                           intcon	equ	0xFF2
  6181                           postinc0	equ	0xFEE
  6182                           wreg	equ	0xFE8
  6183                           indf1	equ	0xFE7
  6184                           postdec1	equ	0xFE5
  6185                           fsr1h	equ	0xFE2
  6186                           fsr1l	equ	0xFE1
  6187                           indf2	equ	0xFDF
  6188                           postinc2	equ	0xFDE
  6189                           postdec2	equ	0xFDD
  6190                           fsr2h	equ	0xFDA
  6191                           fsr2l	equ	0xFD9
  6192                           status	equ	0xFD8
  6193                           
  6194                           	psect	text34
  6195  000000                     __ptext34:
  6196                           	opt stack 0
  6197                           tblptru	equ	0xFF8
  6198                           tblptrh	equ	0xFF7
  6199                           tblptrl	equ	0xFF6
  6200                           tablat	equ	0xFF5
  6201                           prodh	equ	0xFF4
  6202                           prodl	equ	0xFF3
  6203                           intcon	equ	0xFF2
  6204                           postinc0	equ	0xFEE
  6205                           wreg	equ	0xFE8
  6206                           indf1	equ	0xFE7
  6207                           postdec1	equ	0xFE5
  6208                           fsr1h	equ	0xFE2
  6209                           fsr1l	equ	0xFE1
  6210                           indf2	equ	0xFDF
  6211                           postinc2	equ	0xFDE
  6212                           postdec2	equ	0xFDD
  6213                           fsr2h	equ	0xFDA
  6214                           fsr2l	equ	0xFD9
  6215                           status	equ	0xFD8
  6216                           
  6217                           	psect	rparam
  6218  0000                     tblptru	equ	0xFF8
  6219                           tblptrh	equ	0xFF7
  6220                           tblptrl	equ	0xFF6
  6221                           tablat	equ	0xFF5
  6222                           prodh	equ	0xFF4
  6223                           prodl	equ	0xFF3
  6224                           intcon	equ	0xFF2
  6225                           postinc0	equ	0xFEE
  6226                           wreg	equ	0xFE8
  6227                           indf1	equ	0xFE7
  6228                           postdec1	equ	0xFE5
  6229                           fsr1h	equ	0xFE2
  6230                           fsr1l	equ	0xFE1
  6231                           indf2	equ	0xFDF
  6232                           postinc2	equ	0xFDE
  6233                           postdec2	equ	0xFDD
  6234                           fsr2h	equ	0xFDA
  6235                           fsr2l	equ	0xFD9
  6236                           status	equ	0xFD8
  6237                           tblptru	equ	0xFF8
  6238                           tblptrh	equ	0xFF7
  6239                           tblptrl	equ	0xFF6
  6240                           tablat	equ	0xFF5
  6241                           prodh	equ	0xFF4
  6242                           prodl	equ	0xFF3
  6243                           intcon	equ	0xFF2
  6244                           postinc0	equ	0xFEE
  6245                           wreg	equ	0xFE8
  6246                           indf1	equ	0xFE7
  6247                           postdec1	equ	0xFE5
  6248                           fsr1h	equ	0xFE2
  6249                           fsr1l	equ	0xFE1
  6250                           indf2	equ	0xFDF
  6251                           postinc2	equ	0xFDE
  6252                           postdec2	equ	0xFDD
  6253                           fsr2h	equ	0xFDA
  6254                           fsr2l	equ	0xFD9
  6255                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        130
    BSS         689
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     59      93
    BANK0           160      0     146
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ?___ftpack	float  size(1) Largest target is 0

    CANSend@id	PTR unsigned char  size(1) Largest target is 4
		 -> CANSid(COMRAM[4]), 

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 0

    ?___ftmul	float  size(1) Largest target is 0

    CANDATAAnalyzing@id	PTR unsigned char  size(1) Largest target is 4
		 -> CANRid(BANK0[4]), 

    CANDATAAnalyzing@dat	PTR unsigned char  size(1) Largest target is 8
		 -> CANRdata(BANK0[8]), 

    EEPROMWrite@num	PTR unsigned char  size(1) Largest target is 1
		 -> eeprom_num(COMRAM[1]), 

    EEPROMWrite@dat	PTR unsigned char  size(2) Largest target is 8
		 -> readwrite(COMRAM[2]), CANRdata(BANK0[8]), 

    EEPROMWrite@addr	PTR unsigned char  size(1) Largest target is 2
		 -> eeprom_addr(COMRAM[2]), 

    EEPROMRead@num	PTR unsigned char  size(1) Largest target is 1
		 -> eeprom_num(COMRAM[1]), 

    EEPROMRead@dat	PTR unsigned char  size(2) Largest target is 8
		 -> yflash_CFG(COMRAM[2]), readwrite(COMRAM[2]), CANSdata(BANK0[8]), 

    EEPROMRead@addr	PTR unsigned char  size(1) Largest target is 2
		 -> eeprom_addr(COMRAM[2]), 

    CANRecv@dat	PTR unsigned char  size(1) Largest target is 8
		 -> CANRdata(BANK0[8]), 

    CANRecv@dlc	PTR unsigned char  size(1) Largest target is 1
		 -> CANRdlc(COMRAM[1]), 

    CANRecv@id	PTR unsigned char  size(1) Largest target is 4
		 -> CANRid(BANK0[4]), 

    CANSend@dat	PTR unsigned char  size(1) Largest target is 8
		 -> CANSdata(BANK0[8]), 


Critical Paths under _main in COMRAM

    _main->_CANDATAAnalyzing
    _CANRecv->_GetAddr
    _GetAddr->_GetLampBoardAddr
    _CANInit->_CANSetID
    _delayms->_delayus
    _CANSendConfirm->_CANSend
    _CANWriteID->_CANSendID
    _CANSendID->_EEPROMRead
    _YFlashNewConfigure->_CalculateTime25msCounter
    _CalculateTime25msCounter->___fttol
    _Read_YFlash_CFG->_EEPROMRead
    ___ftmul->___ftpack
    ___fttol->___ftmul

Critical Paths under _IntServer in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _IntServer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _IntServer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _IntServer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IntServer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _IntServer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _IntServer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _IntServer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _IntServer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _IntServer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _IntServer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _IntServer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _IntServer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _IntServer in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _IntServer in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _IntServer in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6222
                            _delayms
                           _PORTInit
                         _IntManager
                            _GetAddr
                            _CANInit
                            _CANRecv
                   _CANDATAAnalyzing
                      _HeartbeatTest
 ---------------------------------------------------------------------------------
 (1) _CANRecv                                              3     1      2    1175
                                              5 COMRAM     3     1      2
                            _GetAddr
                            _CANInit
 ---------------------------------------------------------------------------------
 (2) _GetAddr                                              2     2      0     141
                                              3 COMRAM     2     2      0
                   _GetLampBoardAddr
 ---------------------------------------------------------------------------------
 (3) _GetLampBoardAddr                                     3     3      0      93
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _CANInit                                              1     1      0     176
                                              3 COMRAM     1     1      0
                           _CANSetID
                       _CANFilterSet
                          _CANErrClr
 ---------------------------------------------------------------------------------
 (3) _CANFilterSet                                         2     1      1      66
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _CANErrClr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CANSetID                                             3     2      1      66
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _delayms                                              4     2      2      93
                                              4 COMRAM     4     2      2
                            _delayus
 ---------------------------------------------------------------------------------
 (2) _delayus                                              4     2      2      47
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PORTInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IntManager                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANDATAAnalyzing                                     7     5      2    4548
                                             52 COMRAM     7     5      2
                     _CANSendConfirm
                          _CANSendID
                         _CANWriteID
                         _EEPROMRead
                            _CANSend
                 _YFlashNewConfigure
                    _Read_YFlash_CFG
 ---------------------------------------------------------------------------------
 (2) _CANSendConfirm                                       1     1      0     684
                                              2 COMRAM     1     1      0
                            _CANSend
 ---------------------------------------------------------------------------------
 (2) _CANWriteID                                           1     1      0     816
                                              5 COMRAM     1     1      0
                        _EEPROMWrite
                          _CANSendID
 ---------------------------------------------------------------------------------
 (3) _CANSendID                                            1     1      0     705
                                              4 COMRAM     1     1      0
                         _EEPROMRead
                            _CANSend
 ---------------------------------------------------------------------------------
 (2) _CANSend                                              3     1      2     594
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _YFlashNewConfigure                                   0     0      0    1483
                         _EEPROMRead
                        _EEPROMWrite
           _CalculateTime25msCounter
 ---------------------------------------------------------------------------------
 (3) _EEPROMWrite                                          4     1      3      89
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _CalculateTime25msCounter                            12    11      1    1305
                                             40 COMRAM    12    11      1
                            ___ftmul
                            ___fttol
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _HeartbeatTest                                        0     0      0      89
                    _Read_YFlash_CFG
 ---------------------------------------------------------------------------------
 (2) _Read_YFlash_CFG                                      0     0      0      89
                         _EEPROMRead
 ---------------------------------------------------------------------------------
 (3) _EEPROMRead                                           4     1      3      89
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             17    11      6     535
                                              8 COMRAM    17    11      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5     209
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     252
                                             25 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     162
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _IntServer                                            0     0      0       0
                      _TMR0IntServer
                      _TMR1IntServer
                        _ADIntServer
 ---------------------------------------------------------------------------------
 (7) _TMR0IntServer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1IntServer                                        0     0      0       0
                        _YellowFlash
 ---------------------------------------------------------------------------------
 (8) _YellowFlash                                          0     0      0       0
                        _LED_On_Disp
                       _LED_Off_Disp
 ---------------------------------------------------------------------------------
 (9) _LED_On_Disp                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _LED_Off_Disp                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADIntServer                                          2     2      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delayms
     _delayus
   _PORTInit
   _IntManager
   _GetAddr
     _GetLampBoardAddr
   _CANInit
     _CANSetID
     _CANFilterSet
     _CANErrClr
   _CANRecv
     _GetAddr
       _GetLampBoardAddr
     _CANInit
       _CANSetID
       _CANFilterSet
       _CANErrClr
   _CANDATAAnalyzing
     _CANSendConfirm
       _CANSend
     _CANSendID
       _EEPROMRead
       _CANSend
     _CANWriteID
       _EEPROMWrite
       _CANSendID
         _EEPROMRead
         _CANSend
     _EEPROMRead
     _CANSend
     _YFlashNewConfigure
       _EEPROMRead
       _EEPROMWrite
       _CalculateTime25msCounter
         ___ftmul
           ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
         ___lwdiv
     _Read_YFlash_CFG
       _EEPROMRead
   _HeartbeatTest
     _Read_YFlash_CFG
       _EEPROMRead

 _IntServer (ROOT)
   _TMR0IntServer
   _TMR1IntServer
     _YellowFlash
       _LED_On_Disp
       _LED_Off_Disp
   _ADIntServer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     280      35       17.5%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      92       5       91.3%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     3B      5D       1       97.9%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       D       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EF       6        0.0%
DATA                 0      0     37C       3        0.0%
CODE                 0      0       0       0        0.0%


HI-TECH Software PICC-18 Macro Assembler V9.80 build 11162 
Symbol Table                                                                                   Thu May 29 15:42:24 2014

         __size_of_Read_YFlash_CFG 0052                 __size_of_CANErrClr 0002  
                              l341 0CC8                                l325 0DFE  
                              l352 05AA                                l353 05A4  
                              l338 0C8A                                l362 00CC  
                              l371 0D6A                                l347 0574  
                              l348 056E                                l364 0142  
                              l357 05DA                                l377 0B7E  
                              l378 0BB4                                l475 03F6  
                              l556 0240                                l575 035E  
                              l577 0388                                l848 09FC  
                              _RD2 007C1A                                _RC4 007C14  
                              _RD3 007C1B                                _RC5 007C15  
                              _RC6 007C16                 __size_of_CANSendID 0040  
           __end_of_CANSendConfirm 0E88                                prod 000FF3  
                              wreg 000FE8                    __end_of_CANInit 0CCE  
                     ?_LED_On_Disp 0001                    __end_of_CANRecv 01BC  
                  __end_of_CANSend 05E0                               l1061 0D5C  
                             l3013 02E2                               l3007 02C8  
                             l3017 02EE                               l3027 031C  
                             l3019 02F4                               l2403 0C04  
                             l3205 067A                               l3109 03B8  
                             l3303 0D52                               l3223 06CA  
                             l3039 0342                               l2415 0C08  
                             l3233 06EA                               l3209 06A6  
                             l2409 0C06                               l2441 0DF8  
                             l3161 0C74                               l3227 06D2  
                             l2371 0BE2                               l3181 0A28  
                             l3173 0A04                               l3237 06F2  
                             l2429 0C0A                               l2437 0DEE  
                             l2445 0E02                               l3157 0C52  
                             l3247 0820                               l3183 0A3A  
                             l3175 0A08                               l2391 0C00  
                             l2439 0DF2                               l2447 0E1E  
                             l3281 088E                               l3273 086A  
                             l3265 0852                               l3249 082A  
                             l3185 0A44                               l3177 0A1C  
                             l2385 0BFE                               l3291 0D2C  
                             l3275 0876                               l2803 03FA  
                             l2379 0BFC                               l2723 01B8  
                             l3293 0D34                               l3277 087A  
                             l3269 0862                               l2397 0C02  
                             l3295 0D38                               l2649 00C8  
                             l2931 0780                               l2773 0BBE  
                             l2925 075E                               l2781 0F7C  
                             l2783 0F80                               l2791 0F40  
                             l2937 07A4                               l2873 0DBA  
                             l2875 0DC0                               l2859 0E5A  
                             l2787 0F30                               l2975 0244  
                             l2983 0252                               l2977 0248  
                             l2985 0288                               l2979 024C  
                             _ADIE 007CEE                               _ADIF 007CF6  
                   EEPROMWrite@dat 0002                               _T0CS 007EAD  
                             u1025 041C                               u1035 0452  
                             u1135 0260                               u1145 029A  
                             u1410 08BC                               u1350 0666  
                             u1415 08B4                               u1370 0692  
                             u1355 0664                               u1375 0690  
                   EEPROMWrite@num 0001                               _main 0C2E  
                     ___ftpack@arg 0001                       ___ftpack@exp 0004  
                             fsr1h 000FE2                               fsr2h 000FDA  
                             indf1 000FE7                               fsr1l 000FE1  
                             indf2 000FDF                               fsr2l 000FD9  
                             _rows 004B                               prodh 000FF4  
                             prodl 000FF3                               start 004E  
                    ?_LED_Off_Disp 0001                __size_of_CANWriteID 002C  
                    __CFG_FOSC$HS1 000000                   __end_of_CANSetID 0D1C  
                  __end_of_GetAddr 0E22                __size_of_EEPROMRead 0042  
                     ___ftmul@cntr 0018                       ___ftmul@sign 0019  
                     ___fttol@exp1 0028                       ___fttol@lval 0024  
                            ?_main 0001                      _yflash_status 004E  
                            _EEADR 000F74               GetLampBoardAddr@addr 0003  
                  EEPROMWrite@addr 0004                    __end_of___ftmul 072C  
                            _T1CON 000FCD                    __end_of___fttol 08A0  
                  __end_of___lwdiv 0D66                              _ERRIF 007BBD  
                    __CFG_WDTEN$ON 000000                              i2l516 0036  
                            i2l518 004C                              i2l491 0EB6  
                            i2l483 0EDE                              i2l492 0ECE  
                            i2l484 0EF6                              i2l493 0EBC  
                            i2l485 0EE4                              _TMR0H 000FD7  
                            _TMR1H 000FCF                              _TMR0L 000FD6  
                            _TMR1L 000FCE                              _PORTB 000F81  
                            _TRISB 000F93                              _TRISC 000F94  
                            _TRISD 000F95                    ?_CANSendConfirm 0001  
                  __end_of_delayms 0F4E                    __end_of_delayus 0F8E  
                    __CFG_WRTD$OFF 000000                   __end_of_PORTInit 0FA8  
                            _lines 0049                      ___ftpack@sign 0005  
                   __pbitbssCOMRAM 02E8                              tablat 000FF5  
                            status 000FD8           __end_of_CANDATAAnalyzing 03EE  
                __end_of_CANErrClr 0FD2                     ??_LED_Off_Disp 0001  
                __end_of_CANSendID 0DE8                         _IntManager 0F04  
             __size_of_EEPROMWrite 005E               __size_of_ADIntServer 0006  
                     __end_of_main 0052                      CANInit@b_addr 0004  
                        ??_CANInit 0004                          ??_CANRecv 0008  
                        ??_CANSend 0003                             ??_main 003C  
                    ___fttol@sign1 0023                  ??_Read_YFlash_CFG 0005  
                    __activetblptr 000000              __size_of_CANFilterSet 0096  
                           _CANCON 000F6F                             _ADRESH 000FC4  
                           _EEADRH 000F75                             _ADRESL 000FC3  
                           _EEDATA 000F73                             _EECON1 000F7F  
                           _EECON2 000F7E                             _ANCON1 000F5C  
                           _T08BIT 007EAE                             _CANRid 00EE  
                           _CIOCON 000F70                             _CANSid 004F  
                 __end_of___ftpack 0A78                             i2l2301 0030  
                           i2l2303 0034                             i2l2305 003E  
                           i2l2307 0046                             i2l2309 0048  
                           i2l2291 0018                             i2l2293 001A  
                           i2l2295 001E                             i2l2287 0008  
                           i2l2297 0026                             i2l2289 0010  
                           i2l1763 0EEC                             i2l2299 002E  
                           i2l1769 0EC4                             _INTCON 000FF2  
                        ??_GetAddr 0004                             _RXB0D0 000F66  
                           _RXB0D1 000F67                             _RXB0D2 000F68  
                           _RXB0D3 000F69                             _RXB1D0 000F36  
                           _RXB0D4 000F6A                             _RXB1D1 000F37  
                           _RXB0D5 000F6B                             _RXB1D2 000F38  
                           _RXB0D6 000F6C                             _RXB1D3 000F39  
                           _RXB0D7 000F6D                             _RXB1D4 000F3A  
                           _RXB1D5 000F3B                             _RXB1D6 000F3C  
                           _RXB1D7 000F3D                             _RXB0IF 007BB8  
                           _RXB1IF 007BB9                             _TMR0IE 007F95  
                           _TMR0IF 007F92                             _TMR1IE 007CE8  
                           _TMR1IF 007CF0                     __CFG_WDTPS$256 000000  
                           _TXB0D0 000F26                             _TXB0D1 000F27  
                           _TXB0D2 000F28                             _TXB0D3 000F29  
                           _TMR0ON 007EAF                             _TXB1D0 000F16  
                           _TXB0D4 000F2A                             _TXB1D1 000F17  
                           _TXB0D5 000F2B                             _TXB1D2 000F18  
                           _TXB0D6 000F2C                             _TXB1D3 000F19  
                           _TXB0D7 000F2D                             _TXB2D0 000F06  
                           _TXB1D4 000F1A                             _TXB2D1 000F07  
                           _TXB1D5 000F1B                             _TXB2D2 000F08  
                           _TXB1D6 000F1C                             _TXB2D3 000F09  
                           _TXB1D7 000F1D                             _TXB2D4 000F0A  
                           _TXB2D5 000F0B                             _TXB2D6 000F0C  
                           _TXB2D7 000F0D                             _TXB0IF 007BBA  
                           _TXB1IF 007BBB                             _TXB2IF 007BBC  
                           _SWDTEN 007E88                 __size_of_IntServer 0046  
        __size_of_GetLampBoardAddr 005C                     __CFG_XINST$OFF 000000  
                        CANRecv@id 0008                          CANSend@id 0001  
            __end_of_HeartbeatTest 0E58                          ??___ftmul 000F  
                        ??___fttol 001E                       _CANFilterSet 08C4  
                        ??___lwdiv 0005                             clear_0 0B08  
                           clear_1 0B1A                             clear_2 0B28  
                           _period 00C0                          ??_delayms 0007  
                        ??_delayus 0003                       ??_CANWriteID 0006  
            ___ftmul@f3_as_product 0015                       ??_EEPROMRead 0004  
                     __pdataCOMRAM 0059        __size_of_YFlashNewConfigure 00B4  
__size_of_CalculateTime25msCounter 00D2                             tblptrh 000FF7  
        ?_CalculateTime25msCounter 0029                             tblptrl 000FF6  
                           tblptru 000FF8                          ?_CANSetID 0001  
             __size_of_LED_On_Disp 0028              __end_of_TMR0IntServer 0FC6  
                       __accesstop 0060              __end_of_TMR1IntServer 0F6E  
                      ?_IntManager 0001                 __end_of_CANWriteID 0EB4  
                       ___ftmul@f1 0009                         ___ftmul@f2 000C  
               __end_of_EEPROMRead 0DA8                         ___fttol@f1 001A  
                   __pcstackCOMRAM 0001                       __pidataBANK0 0A82  
                        ?_PORTInit 0001                      ??_YellowFlash 0001  
                __end_of_IntServer 004E               __end_of_LED_Off_Disp 0EDC  
                       ??_CANSetID 0002                         __pbssBANK0 00DE  
                  __CFG_PLLCFG$OFF 000000          CalculateTime25msCounter@i 0031  
        CalculateTime25msCounter@j 0033                       _t500ms_count 004D  
                  _time_on_counter 0044                         ??_PORTInit 0001  
                 ??_CANSendConfirm 0003                            _ECANCON 000F72  
                          _CANSTAT 000F6E                          ?___ftpack 0001  
                          _CANInit 0C80                            _CANRdlc 005B  
                          _CANRecv 0052                            _CANSdlc 0059  
                          _CANSend 053C                            _BRGCON1 000E43  
                          _BRGCON2 000E44                            _BRGCON3 000E45  
                   CANSetID@f_type 0001                         _eeprom_num 005C  
              __size_of_IntManager 0026                            _RXB0DLC 000F65  
                          _RXB1DLC 000F35                            _RXB0CON 000F60  
                          _RXB1CON 000F30                            i2u80_40 0046  
                          i2u80_41 0044                            i2u75_40 0010  
                          i2u75_41 000E                            i2u76_40 0018  
                          i2u76_41 0016                            i2u77_40 0026  
                          i2u77_41 0024                            i2u78_40 002E  
                          i2u78_41 002C                            i2u79_40 003E  
                          i2u79_41 003C                            _TXB0DLC 000F25  
                          _TXB1DLC 000F15                            _TXB0CON 000F20  
                          _TXB2DLC 000F05                            _TXB1CON 000F10  
                          _TXB2CON 000F00                __end_of_YellowFlash 0FB8  
                          _GetAddr 0DE8                  ?_CANDATAAnalyzing 0035  
                 _GetLampBoardAddr 0BD2                            __Hparam 0000  
                          __Lparam 0000                 ??_CANDATAAnalyzing 0037  
                  _Read_YFlash_CFG 095A                         CANRecv@dat 0006  
                       CANRecv@dlc 0007                          _CANErrClr 0FD0  
                          _t1_cont 003C                         CANSend@dat 0001  
                       CANSend@dlc 0002                          _CANSendID 0DA8  
                          ___ftmul 064E                            ___fttol 0816  
                          ___lwdiv 0D1C                            __pcinit 0B00  
                       ??___ftpack 0006                            _f_r_mod 0046  
                          __ramtop 0F00                            _delayms 0F2A  
                          _delayus 0F6E                            __ptext0 0C2E  
                          __ptext1 0052                            __ptext2 0DE8  
                          __ptext3 0BD2                            __ptext4 0C80  
                          __ptext5 08C4                            __ptext6 0FD0  
                          __ptext7 0CCE                            __ptext8 0F2A  
                          __ptext9 0F6E                 CANFilterSet@f_type 0001  
                          _my_addr 004A                            _time5ms 02E9  
                          _time_on 0232               end_of_initialization 0B6E  
                          _turnoff 005A                      ??_EEPROMWrite 0004  
                    ??_ADIntServer 0001                CANDATAAnalyzing@dat 0035  
              CANDATAAnalyzing@dlc 0036                         ?_CANErrClr 0001  
                       ?_CANSendID 0001                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE   __end_of_CalculateTime25msCounter 04C0  
            __size_of_LED_Off_Disp 0028                      EEPROMRead@dat 0002  
                    EEPROMRead@num 0001                        _YellowFlash 0FA8  
                       _yflash_CFG 0057                  __size_of_CANSetID 004E  
          __end_of_Read_YFlash_CFG 09AC                       ??_IntManager 0001  
                     _LED_Off_Disp 0EB4                        ___ftmul@exp 0014  
                       _switchmode 02E8                __end_of_EEPROMWrite 0BD2  
              __end_of_ADIntServer 0FCC                      __pidataCOMRAM 0FCC  
       __end_of_YFlashNewConfigure 07F6                  __size_of_PORTInit 001A  
              start_initialization 0B00                      ??_LED_On_Disp 0001  
               __end_of_IntManager 0F2A                          _IntServer 0008  
                     _cycledutyoff 0060             __size_of_HeartbeatTest 0036  
                     _force_status 0047                        ??_CANErrClr 0001  
                      ??_CANSendID 0005                   _time_off_counter 0042  
                      __pdataBANK0 0060                           ?_CANInit 0001  
                         ?_CANRecv 0006                           ?_CANSend 0001  
           __size_of_TMR0IntServer 000E           _CalculateTime25msCounter 03EE  
                __size_of___ftpack 0088           __end_of_GetLampBoardAddr 0C2E  
                      __pbssBIGRAM 00F2             __size_of_TMR1IntServer 0020  
                      __pbssCOMRAM 003C                         ?_IntServer 0001  
              __end_of_LED_On_Disp 0F04                           ?_GetAddr 0001  
                 ?_Read_YFlash_CFG 0001                        _EEPROMWrite 0B74  
                      _ADIntServer 0FC6                   ___lwdiv@dividend 0001  
                        __pintcode 0008                           ?___ftmul 0009  
                         ?___fttol 001A                           ?___lwdiv 0001  
                        _heartbeat 0048                      _HeartbeatTest 0E22  
                         ?_delayms 0005                           ?_delayus 0001  
                GetAddr@board_type 0004          __size_of_CANDATAAnalyzing 01B4  
           CANFilterSet@board_addr 0002                           _CANSetID 0CCE  
                         _CANRdata 00DE                           _CANSdata 00E6  
                 ___lwdiv@quotient 0005                       CANWriteID@fm 0006  
                        _readwrite 0055                      _TMR0IntServer 0FB8  
                      _eeprom_addr 0053                          delayms@ms 0005  
                        delayus@us 0001                      _TMR1IntServer 0F4E  
               CANDATAAnalyzing@id 003B                           _RXB0EIDH 000F63  
                         _RXB0EIDL 000F64                           _RXB1EIDH 000F33  
                         _RXB1EIDL 000F34                           _RXB0SIDH 000F61  
                         _RXB0SIDL 000F62                           _RXF0EIDH 000EE2  
                         _RXB1SIDH 000F31                           _RXF0EIDL 000EE3  
                         _RXB1SIDL 000F32                           _RXF1EIDH 000EE6  
                         _RXF1EIDL 000EE7                           _RXF2EIDH 000EEA  
                         _RXF2EIDL 000EEB                           _RXF3EIDH 000EEE  
                         _RXF3EIDL 000EEF                           _RXF4EIDH 000EF2  
                         _RXF4EIDL 000EF3                           _RXF5EIDH 000EF6  
                         _RXF5EIDL 000EF7                           _RXF0SIDH 000EE0  
                         _RXF0SIDL 000EE1                           _TXB0EIDH 000F23  
                         _RXF1SIDH 000EE4                           _TXB0EIDL 000F24  
                         _RXF1SIDL 000EE5                           _TXB1EIDH 000F13  
                         _RXF2SIDH 000EE8                           _TXB1EIDL 000F14  
                         _RXF2SIDL 000EE9                           _TXB2EIDH 000F03  
                         _RXF3SIDH 000EEC                           _TXB2EIDL 000F04  
                         _RXF3SIDL 000EED                           _RXF4SIDH 000EF0  
                         _RXF4SIDL 000EF1                           _RXF5SIDH 000EF4  
                         _RXF5SIDL 000EF5                      ?_CANFilterSet 0001  
                         _RXM0EIDH 000EFA                           _RXM0EIDL 000EFB  
                         _TXB0SIDH 000F21                           _RXM1EIDH 000EFE  
                         _TXB0SIDL 000F22                           _RXM1EIDL 000EFF  
                   ?_HeartbeatTest 0001                           _TXB1SIDH 000F11  
                         _TXB1SIDL 000F12                           _TXB2SIDH 000F01  
                         _TXB2SIDL 000F02                           _RXM0SIDH 000EF8  
                         _RXM0SIDL 000EF9                           _RXM1SIDH 000EFC  
                         _RXM1SIDL 000EFD                           _PORTInit 0F8E  
                 __CFG_SOSCSEL$DIG 000000                   __size_of_CANInit 004E  
                     ?_YellowFlash 0001                   __size_of_CANRecv 016A  
                 __size_of_CANSend 00A4       CalculateTime25msCounter@line 0029  
               CANSetID@board_addr 0003                        _LED_On_Disp 0EDC  
                      ??_IntServer 0001            __size_of_CANSendConfirm 0030  
                        copy_data0 0B42                          copy_data1 0B62  
                   ?_TMR0IntServer 0001                        _cycledutyon 0090  
                 __size_of_GetAddr 003A                     ?_TMR1IntServer 0001  
                         __Hrparam 0000                           __Lrparam 0000  
                      CANSendID@sm 0005                     ??_CANFilterSet 0002  
                 __size_of___ftmul 00DE                   __size_of___fttol 008A  
                 __size_of___lwdiv 004A                           ___ftpack 09F0  
                 __size_of_delayms 0024                   __size_of_delayus 0020  
                       _CANWriteID 0E88                      _time_counters 0040  
                       _EEPROMRead 0D66                    ___lwdiv@divisor 0003  
                  ___lwdiv@counter 0007                           __ptext10 0F8E  
                         __ptext11 0F04                           __ptext20 0E22  
                         __ptext12 023A                           __ptext21 095A  
                         __ptext13 0E58                           __ptext30 0FA8  
                         __ptext22 0D66                           __ptext14 0E88  
                         __ptext31 0EDC                           __ptext23 064E  
                         __ptext15 0DA8                           __ptext32 0EB4  
                         __ptext24 09F0                           __ptext16 053C  
                         __ptext33 0FC6                           __ptext25 0816  
                         __ptext17 0742                           __ptext34 0000  
                         __ptext26 0D1C                           __ptext18 0B74  
                         __ptext19 03EE                           __ptext28 0FB8  
                         __ptext29 0F4E                 _YFlashNewConfigure 0742  
                    __size_of_main F424                ?_YFlashNewConfigure 0001  
                         delayms@i 0007                           delayus@i 0003  
       ??_CalculateTime25msCounter 002A                    ??_HeartbeatTest 0005  
                         _time_off 00F2                           _run_mode 004C  
      CalculateTime25msCounter@row 0030                  GetLampBoardAddr@i 0001  
                 _CANDATAAnalyzing 023A               ??_YFlashNewConfigure 0035  
                ?_GetLampBoardAddr 0001                         GetAddr@rel 0005  
               ??_GetLampBoardAddr 0001                    ??_TMR0IntServer 0001  
                     _time_counter 003E                           intlevel2 0000  
                  ??_TMR1IntServer 0001                       ?_EEPROMWrite 0001  
                     ?_ADIntServer 0001                    CANSendConfirm@i 0003  
                      ?_CANWriteID 0001                        ?_EEPROMRead 0001  
             __size_of_YellowFlash 0010                     _CANSendConfirm 0E58  
                   EEPROMRead@addr 0004               __end_of_CANFilterSet 095A  
