

HI-TECH Software PIC18 PRO Macro Assembler V9.80 build 11162 
                                                                                               Wed Jul 02 17:11:08 2014

HI-TECH Software Omniscient Code Generator (PRO mode) build 11162
     1                           	processor	18F45K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53                           	psect	pa_nodes,global,class=CODE,delta=1
    54  0000                     tblptrh	equ	0xFF7
    55                           tblptrl	equ	0xFF6
    56                           tablat	equ	0xFF5
    57                           prodh	equ	0xFF4
    58                           prodl	equ	0xFF3
    59                           intcon	equ	0xFF2
    60                           wreg	equ	0xFE8
    61                           indf1	equ	0xFE7
    62                           fsr1h	equ	0xFE2
    63                           fsr1l	equ	0xFE1
    64                           indf2	equ	0xFDF
    65                           postinc2	equ	0xFDE
    66                           postdec2	equ	0xFDD
    67                           fsr2h	equ	0xFDA
    68                           fsr2l	equ	0xFD9
    69                           status	equ	0xFD8
    70                           
    71                           	psect	idataCOMRAM
    72  001ECE                     __pidataCOMRAM:
    73                           	opt stack 0
    74                           
    75                           ;initializer for _CANSdlc
    76  001ECE  08                 	db	8
    77                           
    78                           ;initializer for _turnoff
    79  001ECF  01                 	db	1
    80                           
    81                           ;initializer for _CANRdlc
    82  001ED0  08                 	db	8
    83                           
    84                           ;initializer for _eeprom_num
    85  001ED1  04                 	db	4
    86                           tblptrh	equ	0xFF7
    87                           tblptrl	equ	0xFF6
    88                           tablat	equ	0xFF5
    89                           prodh	equ	0xFF4
    90                           prodl	equ	0xFF3
    91                           intcon	equ	0xFF2
    92                           wreg	equ	0xFE8
    93                           indf1	equ	0xFE7
    94                           fsr1h	equ	0xFE2
    95                           fsr1l	equ	0xFE1
    96                           indf2	equ	0xFDF
    97                           postinc2	equ	0xFDE
    98                           postdec2	equ	0xFDD
    99                           fsr2h	equ	0xFDA
   100                           fsr2l	equ	0xFD9
   101                           status	equ	0xFD8
   102                           
   103                           	psect	idataBANK0
   104  0018A0                     __pidataBANK0:
   105                           	opt stack 0
   106                           
   107                           ;initializer for _cycledutyoff
   108  0018A0  00                 	db	0
   109  0018A1  80                 	db	128
   110  0018A2  3F                 	db	63
   111  0018A3  00                 	db	0
   112  0018A4  70                 	db	112
   113  0018A5  3F                 	db	63
   114  0018A6  00                 	db	0
   115  0018A7  60                 	db	96
   116  0018A8  3F                 	db	63
   117  0018A9  00                 	db	0
   118  0018AA  50                 	db	80
   119  0018AB  3F                 	db	63
   120  0018AC  00                 	db	0
   121  0018AD  40                 	db	64
   122  0018AE  3F                 	db	63
   123  0018AF  00                 	db	0
   124  0018B0  30                 	db	48
   125  0018B1  3F                 	db	63
   126  0018B2  00                 	db	0
   127  0018B3  20                 	db	32
   128  0018B4  3F                 	db	63
   129  0018B5  00                 	db	0
   130  0018B6  10                 	db	16
   131  0018B7  3F                 	db	63
   132  0018B8  00                 	db	0
   133  0018B9  00                 	db	0
   134  0018BA  3F                 	db	63
   135  0018BB  00                 	db	0
   136  0018BC  E0                 	db	224
   137  0018BD  3E                 	db	62
   138  0018BE  00                 	db	0
   139  0018BF  C0                 	db	192
   140  0018C0  3E                 	db	62
   141  0018C1  00                 	db	0
   142  0018C2  A0                 	db	160
   143  0018C3  3E                 	db	62
   144  0018C4  00                 	db	0
   145  0018C5  80                 	db	128
   146  0018C6  3E                 	db	62
   147  0018C7  00                 	db	0
   148  0018C8  40                 	db	64
   149  0018C9  3E                 	db	62
   150  0018CA  00                 	db	0
   151  0018CB  00                 	db	0
   152  0018CC  3E                 	db	62
   153  0018CD  00                 	db	0
   154  0018CE  00                 	db	0
   155  0018CF  00                 	db	0
   156                           
   157                           ;initializer for _cycledutyon
   158  0018D0  00                 	db	0
   159  0018D1  00                 	db	0
   160  0018D2  00                 	db	0
   161  0018D3  00                 	db	0
   162  0018D4  80                 	db	128
   163  0018D5  3D                 	db	61
   164  0018D6  00                 	db	0
   165  0018D7  00                 	db	0
   166  0018D8  3E                 	db	62
   167  0018D9  00                 	db	0
   168  0018DA  40                 	db	64
   169  0018DB  3E                 	db	62
   170  0018DC  00                 	db	0
   171  0018DD  80                 	db	128
   172  0018DE  3E                 	db	62
   173  0018DF  00                 	db	0
   174  0018E0  A0                 	db	160
   175  0018E1  3E                 	db	62
   176  0018E2  00                 	db	0
   177  0018E3  C0                 	db	192
   178  0018E4  3E                 	db	62
   179  0018E5  00                 	db	0
   180  0018E6  E0                 	db	224
   181  0018E7  3E                 	db	62
   182  0018E8  00                 	db	0
   183  0018E9  00                 	db	0
   184  0018EA  3F                 	db	63
   185  0018EB  00                 	db	0
   186  0018EC  10                 	db	16
   187  0018ED  3F                 	db	63
   188  0018EE  00                 	db	0
   189  0018EF  20                 	db	32
   190  0018F0  3F                 	db	63
   191  0018F1  00                 	db	0
   192  0018F2  30                 	db	48
   193  0018F3  3F                 	db	63
   194  0018F4  00                 	db	0
   195  0018F5  40                 	db	64
   196  0018F6  3F                 	db	63
   197  0018F7  00                 	db	0
   198  0018F8  50                 	db	80
   199  0018F9  3F                 	db	63
   200  0018FA  00                 	db	0
   201  0018FB  60                 	db	96
   202  0018FC  3F                 	db	63
   203  0018FD  00                 	db	0
   204  0018FE  80                 	db	128
   205  0018FF  3F                 	db	63
   206                           
   207                           ;initializer for _period
   208  001900  40                 	db	64
   209  001901  9C                 	db	156
   210  001902  45                 	db	69
   211  001903  50                 	db	80
   212  001904  50                 	db	80
   213  001905  45                 	db	69
   214  001906  40                 	db	64
   215  001907  1C                 	db	28
   216  001908  45                 	db	69
   217  001909  00                 	db	0
   218  00190A  FA                 	db	250
   219  00190B  44                 	db	68
   220  00190C  00                 	db	0
   221  00190D  7A                 	db	122
   222  00190E  44                 	db	68
   223  00190F  AD                 	db	173
   224  001910  26                 	db	38
   225  001911  44                 	db	68
   226  001912  00                 	db	0
   227  001913  FA                 	db	250
   228  001914  43                 	db	67
   229  001915  00                 	db	0
   230  001916  C8                 	db	200
   231  001917  43                 	db	67
   232  001918  A6                 	db	166
   233  001919  A6                 	db	166
   234  00191A  43                 	db	67
   235  00191B  00                 	db	0
   236  00191C  48                 	db	72
   237  00191D  43                 	db	67
   238                           tblptrh	equ	0xFF7
   239                           tblptrl	equ	0xFF6
   240                           tablat	equ	0xFF5
   241                           prodh	equ	0xFF4
   242                           prodl	equ	0xFF3
   243                           intcon	equ	0xFF2
   244                           wreg	equ	0xFE8
   245                           indf1	equ	0xFE7
   246                           fsr1h	equ	0xFE2
   247                           fsr1l	equ	0xFE1
   248                           indf2	equ	0xFDF
   249                           postinc2	equ	0xFDE
   250                           postdec2	equ	0xFDD
   251                           fsr2h	equ	0xFDA
   252                           fsr2l	equ	0xFD9
   253                           status	equ	0xFD8
   254                           
   255                           	psect	smallconst
   256  000F00                     __psmallconst:
   257                           	opt stack 0
   258  000F00                     _board_version:
   259                           	opt stack 0
   260  000F00  06                 	db	6
   261  000F01  14                 	db	20
   262  000F02  07                 	db	7
   263  000F03  02                 	db	2
   264  000F04  00                 	db	0
   265  0000                     _ADRESH	set	4036
   266  0000                     _ADRESL	set	4035
   267  0000                     _ANCON1	set	3932
   268  0000                     _BRGCON1	set	3651
   269  0000                     _BRGCON2	set	3652
   270  0000                     _BRGCON3	set	3653
   271  0000                     _CANCON	set	3951
   272  0000                     _CANSTAT	set	3950
   273  0000                     _CIOCON	set	3952
   274  0000                     _ECANCON	set	3954
   275  0000                     _EEADR	set	3956
   276  0000                     _EEADRH	set	3957
   277  0000                     _EECON1	set	3967
   278  0000                     _EECON2	set	3966
   279  0000                     _EEDATA	set	3955
   280  0000                     _INTCON	set	4082
   281  0000                     _PORTB	set	3969
   282  0000                     _RXB0CON	set	3936
   283  0000                     _RXB0D0	set	3942
   284  0000                     _RXB0D1	set	3943
   285  0000                     _RXB0D2	set	3944
   286  0000                     _RXB0D3	set	3945
   287  0000                     _RXB0D4	set	3946
   288  0000                     _RXB0D5	set	3947
   289  0000                     _RXB0D6	set	3948
   290  0000                     _RXB0D7	set	3949
   291  0000                     _RXB0DLC	set	3941
   292  0000                     _RXB0EIDH	set	3939
   293  0000                     _RXB0EIDL	set	3940
   294  0000                     _RXB0SIDH	set	3937
   295  0000                     _RXB0SIDL	set	3938
   296  0000                     _RXB1CON	set	3888
   297  0000                     _RXB1D0	set	3894
   298  0000                     _RXB1D1	set	3895
   299  0000                     _RXB1D2	set	3896
   300  0000                     _RXB1D3	set	3897
   301  0000                     _RXB1D4	set	3898
   302  0000                     _RXB1D5	set	3899
   303  0000                     _RXB1D6	set	3900
   304  0000                     _RXB1D7	set	3901
   305  0000                     _RXB1DLC	set	3893
   306  0000                     _RXB1EIDH	set	3891
   307  0000                     _RXB1EIDL	set	3892
   308  0000                     _RXB1SIDH	set	3889
   309  0000                     _RXB1SIDL	set	3890
   310  0000                     _RXF0EIDH	set	3810
   311  0000                     _RXF0EIDL	set	3811
   312  0000                     _RXF0SIDH	set	3808
   313  0000                     _RXF0SIDL	set	3809
   314  0000                     _RXF1EIDH	set	3814
   315  0000                     _RXF1EIDL	set	3815
   316  0000                     _RXF1SIDH	set	3812
   317  0000                     _RXF1SIDL	set	3813
   318  0000                     _RXF2EIDH	set	3818
   319  0000                     _RXF2EIDL	set	3819
   320  0000                     _RXF2SIDH	set	3816
   321  0000                     _RXF2SIDL	set	3817
   322  0000                     _RXF3EIDH	set	3822
   323  0000                     _RXF3EIDL	set	3823
   324  0000                     _RXF3SIDH	set	3820
   325  0000                     _RXF3SIDL	set	3821
   326  0000                     _RXF4EIDH	set	3826
   327  0000                     _RXF4EIDL	set	3827
   328  0000                     _RXF4SIDH	set	3824
   329  0000                     _RXF4SIDL	set	3825
   330  0000                     _RXF5EIDH	set	3830
   331  0000                     _RXF5EIDL	set	3831
   332  0000                     _RXF5SIDH	set	3828
   333  0000                     _RXF5SIDL	set	3829
   334  0000                     _RXM0EIDH	set	3834
   335  0000                     _RXM0EIDL	set	3835
   336  0000                     _RXM0SIDH	set	3832
   337  0000                     _RXM0SIDL	set	3833
   338  0000                     _RXM1EIDH	set	3838
   339  0000                     _RXM1EIDL	set	3839
   340  0000                     _RXM1SIDH	set	3836
   341  0000                     _RXM1SIDL	set	3837
   342  0000                     _T1CON	set	4045
   343  0000                     _TMR0H	set	4055
   344  0000                     _TMR0L	set	4054
   345  0000                     _TMR1H	set	4047
   346  0000                     _TMR1L	set	4046
   347  0000                     _TRISB	set	3987
   348  0000                     _TRISC	set	3988
   349  0000                     _TRISD	set	3989
   350  0000                     _TXB0CON	set	3872
   351  0000                     _TXB0D0	set	3878
   352  0000                     _TXB0D1	set	3879
   353  0000                     _TXB0D2	set	3880
   354  0000                     _TXB0D3	set	3881
   355  0000                     _TXB0D4	set	3882
   356  0000                     _TXB0D5	set	3883
   357  0000                     _TXB0D6	set	3884
   358  0000                     _TXB0D7	set	3885
   359  0000                     _TXB0DLC	set	3877
   360  0000                     _TXB0EIDH	set	3875
   361  0000                     _TXB0EIDL	set	3876
   362  0000                     _TXB0SIDH	set	3873
   363  0000                     _TXB0SIDL	set	3874
   364  0000                     _TXB1CON	set	3856
   365  0000                     _TXB1D0	set	3862
   366  0000                     _TXB1D1	set	3863
   367  0000                     _TXB1D2	set	3864
   368  0000                     _TXB1D3	set	3865
   369  0000                     _TXB1D4	set	3866
   370  0000                     _TXB1D5	set	3867
   371  0000                     _TXB1D6	set	3868
   372  0000                     _TXB1D7	set	3869
   373  0000                     _TXB1DLC	set	3861
   374  0000                     _TXB1EIDH	set	3859
   375  0000                     _TXB1EIDL	set	3860
   376  0000                     _TXB1SIDH	set	3857
   377  0000                     _TXB1SIDL	set	3858
   378  0000                     _TXB2CON	set	3840
   379  0000                     _TXB2D0	set	3846
   380  0000                     _TXB2D1	set	3847
   381  0000                     _TXB2D2	set	3848
   382  0000                     _TXB2D3	set	3849
   383  0000                     _TXB2D4	set	3850
   384  0000                     _TXB2D5	set	3851
   385  0000                     _TXB2D6	set	3852
   386  0000                     _TXB2D7	set	3853
   387  0000                     _TXB2DLC	set	3845
   388  0000                     _TXB2EIDH	set	3843
   389  0000                     _TXB2EIDL	set	3844
   390  0000                     _TXB2SIDH	set	3841
   391  0000                     _TXB2SIDL	set	3842
   392  0000                     _ADIE	set	31982
   393  0000                     _ADIF	set	31990
   394  0000                     _ERRIF	set	31677
   395  0000                     _RC4	set	31764
   396  0000                     _RC5	set	31765
   397  0000                     _RC6	set	31766
   398  0000                     _RD2	set	31770
   399  0000                     _RD3	set	31771
   400  0000                     _RXB0IF	set	31672
   401  0000                     _RXB1IF	set	31673
   402  0000                     _SWDTEN	set	32392
   403  0000                     _T08BIT	set	32430
   404  0000                     _T0CS	set	32429
   405  0000                     _TMR0IE	set	32661
   406  0000                     _TMR0IF	set	32658
   407  0000                     _TMR0ON	set	32431
   408  0000                     _TMR1IE	set	31976
   409  0000                     _TMR1IF	set	31984
   410  0000                     _TXB0IF	set	31674
   411  0000                     _TXB1IF	set	31675
   412  0000                     _TXB2IF	set	31676
   413                           
   414                           ; #config settings
   415  000F05  00                 	db	0	; dummy byte at the end
   416  0000                     tblptrh	equ	0xFF7
   417                           tblptrl	equ	0xFF6
   418                           tablat	equ	0xFF5
   419                           prodh	equ	0xFF4
   420                           prodl	equ	0xFF3
   421                           intcon	equ	0xFF2
   422                           wreg	equ	0xFE8
   423                           indf1	equ	0xFE7
   424                           fsr1h	equ	0xFE2
   425                           fsr1l	equ	0xFE1
   426                           indf2	equ	0xFDF
   427                           postinc2	equ	0xFDE
   428                           postdec2	equ	0xFDD
   429                           fsr2h	equ	0xFDA
   430                           fsr2l	equ	0xFD9
   431                           status	equ	0xFD8
   432                           
   433                           	psect	cinit
   434  001996                     __pcinit:
   435                           	opt stack 0
   436  001996                     start_initialization:
   437                           	opt stack 0
   438                           
   439                           ; Clear objects allocated to BIGRAM (640 bytes)
   440  001996  EE0B  F0C1         	lfsr	0,__pbssBIGRAM
   441  00199A  EE12 F080          	lfsr	1,640
   442  00199E                     clear_0:
   443  00199E  6AEE               	clrf	postinc0,c
   444  0019A0  50E5               	movf	postdec1,w,c
   445  0019A2  50E1               	movf	fsr1l,w,c
   446  0019A4  E1FC               	bnz	clear_0
   447  0019A6  50E2               	movf	fsr1h,w,c
   448  0019A8  E1FA               	bnz	clear_0
   449                           
   450                           ; Clear objects allocated to BANK0 (18 bytes)
   451  0019AA  EE00  F0DE         	lfsr	0,__pbssBANK0
   452  0019AE  0E12               	movlw	18
   453  0019B0                     clear_1:
   454  0019B0  6AEE               	clrf	postinc0,c
   455  0019B2  06E8               	decf	wreg,f,c
   456  0019B4  E1FD               	bnz	clear_1
   457                           
   458                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   459  0019B6  6A5F               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   460                           
   461                           ; Clear objects allocated to COMRAM (31 bytes)
   462  0019B8  EE00  F03C         	lfsr	0,__pbssCOMRAM
   463  0019BC  0E1F               	movlw	31
   464  0019BE                     clear_2:
   465  0019BE  6AEE               	clrf	postinc0,c
   466  0019C0  06E8               	decf	wreg,f,c
   467  0019C2  E1FD               	bnz	clear_2
   468                           
   469                           ; Initialize objects allocated to BANK0 (126 bytes)
   470                           ; load TBLPTR registers with __pidataBANK0
   471  0019C4  0EA0               	movlw	low __pidataBANK0
   472  0019C6  6EF6               	movwf	tblptrl,c
   473  0019C8  0E18               	movlw	high __pidataBANK0
   474  0019CA  6EF7               	movwf	tblptrh,c
   475  0019CC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   476  0019CE  6EF8               	movwf	tblptru,c
   477  0019D0  EE00  F060         	lfsr	0,__pdataBANK0
   478  0019D4  EE10 F07E          	lfsr	1,126
   479  0019D8                     copy_data0:
   480  0019D8  0009               	tblrd		*+
   481  0019DA  CFF5 FFEE          	movff	tablat,postinc0
   482  0019DE  50E5               	movf	postdec1,w,c
   483  0019E0  50E1               	movf	fsr1l,w,c
   484  0019E2  E1FA               	bnz	copy_data0
   485                           
   486                           ; Initialize objects allocated to COMRAM (4 bytes)
   487                           ; load TBLPTR registers with __pidataCOMRAM
   488  0019E4  0ECE               	movlw	low __pidataCOMRAM
   489  0019E6  6EF6               	movwf	tblptrl,c
   490  0019E8  0E1E               	movlw	high __pidataCOMRAM
   491  0019EA  6EF7               	movwf	tblptrh,c
   492  0019EC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   493  0019EE  6EF8               	movwf	tblptru,c
   494  0019F0  EE00  F05B         	lfsr	0,__pdataCOMRAM
   495  0019F4  EE10 F004          	lfsr	1,4
   496  0019F8                     copy_data1:
   497  0019F8  0009               	tblrd		*+
   498  0019FA  CFF5 FFEE          	movff	tablat,postinc0
   499  0019FE  50E5               	movf	postdec1,w,c
   500  001A00  50E1               	movf	fsr1l,w,c
   501  001A02  E1FA               	bnz	copy_data1
   502  001A04                     end_of_initialization:
   503                           	opt stack 0
   504  001A04  0E00               	movlw	low (__Lmediumconst shr (0+16))
   505  001A06  6EF8               	movwf	tblptru,c
   506  001A08  0100               	movlb	0
   507  001A0A  EF9D  F00D         	goto	_main	;jump to C main() function
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           prodh	equ	0xFF4
   513                           prodl	equ	0xFF3
   514                           intcon	equ	0xFF2
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           indf1	equ	0xFE7
   518                           postdec1	equ	0xFE5
   519                           fsr1h	equ	0xFE2
   520                           fsr1l	equ	0xFE1
   521                           indf2	equ	0xFDF
   522                           postinc2	equ	0xFDE
   523                           postdec2	equ	0xFDD
   524                           fsr2h	equ	0xFDA
   525                           fsr2l	equ	0xFD9
   526                           status	equ	0xFD8
   527                           
   528                           	psect	bitbssCOMRAM
   529  0002F8                     __pbitbssCOMRAM:
   530                           	opt stack 0
   531  0002F8                     _switchmode:
   532                           	opt stack 0
   533  0002F8                     	ds	1
   534  0002F9                     _time5ms:
   535                           	opt stack 0
   536  0002F9                     	ds	1
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           prodh	equ	0xFF4
   542                           prodl	equ	0xFF3
   543                           intcon	equ	0xFF2
   544                           postinc0	equ	0xFEE
   545                           wreg	equ	0xFE8
   546                           indf1	equ	0xFE7
   547                           postdec1	equ	0xFE5
   548                           fsr1h	equ	0xFE2
   549                           fsr1l	equ	0xFE1
   550                           indf2	equ	0xFDF
   551                           postinc2	equ	0xFDE
   552                           postdec2	equ	0xFDD
   553                           fsr2h	equ	0xFDA
   554                           fsr2l	equ	0xFD9
   555                           status	equ	0xFD8
   556                           
   557                           	psect	bssCOMRAM
   558  00003C                     __pbssCOMRAM:
   559                           	opt stack 0
   560  00003C                     _time_counter:
   561                           	opt stack 0
   562  00003C                     	ds	2
   563  00003E                     _time_counters:
   564                           	opt stack 0
   565  00003E                     	ds	2
   566  000040                     _time_off_counter:
   567                           	opt stack 0
   568  000040                     	ds	2
   569  000042                     _time_on_counter:
   570                           	opt stack 0
   571  000042                     	ds	2
   572  000044                     _f_r_mod:
   573                           	opt stack 0
   574  000044                     	ds	1
   575  000045                     _force_status:
   576                           	opt stack 0
   577  000045                     	ds	1
   578  000046                     _heartbeat:
   579                           	opt stack 0
   580  000046                     	ds	1
   581  000047                     _lines:
   582                           	opt stack 0
   583  000047                     	ds	1
   584  000048                     _my_addr:
   585                           	opt stack 0
   586  000048                     	ds	1
   587  000049                     _rows:
   588                           	opt stack 0
   589  000049                     	ds	1
   590  00004A                     _run_mode:
   591                           	opt stack 0
   592  00004A                     	ds	1
   593  00004B                     _t500ms_count:
   594                           	opt stack 0
   595  00004B                     	ds	1
   596  00004C                     _yflash_status:
   597                           	opt stack 0
   598  00004C                     	ds	1
   599  00004D                     _CANSdata:
   600                           	opt stack 0
   601  00004D                     	ds	8
   602  000055                     _eeprom_addr:
   603                           	opt stack 0
   604  000055                     	ds	2
   605  000057                     _readwrite:
   606                           	opt stack 0
   607  000057                     	ds	2
   608  000059                     _yflash_CFG:
   609                           	opt stack 0
   610  000059                     	ds	2
   611                           tblptru	equ	0xFF8
   612                           tblptrh	equ	0xFF7
   613                           tblptrl	equ	0xFF6
   614                           tablat	equ	0xFF5
   615                           prodh	equ	0xFF4
   616                           prodl	equ	0xFF3
   617                           intcon	equ	0xFF2
   618                           postinc0	equ	0xFEE
   619                           wreg	equ	0xFE8
   620                           indf1	equ	0xFE7
   621                           postdec1	equ	0xFE5
   622                           fsr1h	equ	0xFE2
   623                           fsr1l	equ	0xFE1
   624                           indf2	equ	0xFDF
   625                           postinc2	equ	0xFDE
   626                           postdec2	equ	0xFDD
   627                           fsr2h	equ	0xFDA
   628                           fsr2l	equ	0xFD9
   629                           status	equ	0xFD8
   630                           
   631                           	psect	dataCOMRAM
   632  00005B                     __pdataCOMRAM:
   633                           	opt stack 0
   634  00005B                     _CANSdlc:
   635                           	opt stack 0
   636  00005B                     	ds	1
   637  00005C                     _turnoff:
   638                           	opt stack 0
   639  00005C                     	ds	1
   640  00005D                     _CANRdlc:
   641                           	opt stack 0
   642  00005D                     	ds	1
   643  00005E                     _eeprom_num:
   644                           	opt stack 0
   645  00005E                     	ds	1
   646                           tblptru	equ	0xFF8
   647                           tblptrh	equ	0xFF7
   648                           tblptrl	equ	0xFF6
   649                           tablat	equ	0xFF5
   650                           prodh	equ	0xFF4
   651                           prodl	equ	0xFF3
   652                           intcon	equ	0xFF2
   653                           postinc0	equ	0xFEE
   654                           wreg	equ	0xFE8
   655                           indf1	equ	0xFE7
   656                           postdec1	equ	0xFE5
   657                           fsr1h	equ	0xFE2
   658                           fsr1l	equ	0xFE1
   659                           indf2	equ	0xFDF
   660                           postinc2	equ	0xFDE
   661                           postdec2	equ	0xFDD
   662                           fsr2h	equ	0xFDA
   663                           fsr2l	equ	0xFD9
   664                           status	equ	0xFD8
   665                           
   666                           	psect	bssBANK0
   667  0000DE                     __pbssBANK0:
   668                           	opt stack 0
   669  0000DE                     _t1_cont:
   670                           	opt stack 0
   671  0000DE                     	ds	2
   672  0000E0                     _CANRdata:
   673                           	opt stack 0
   674  0000E0                     	ds	8
   675  0000E8                     _CANRid:
   676                           	opt stack 0
   677  0000E8                     	ds	4
   678  0000EC                     _CANSid:
   679                           	opt stack 0
   680  0000EC                     	ds	4
   681                           tblptru	equ	0xFF8
   682                           tblptrh	equ	0xFF7
   683                           tblptrl	equ	0xFF6
   684                           tablat	equ	0xFF5
   685                           prodh	equ	0xFF4
   686                           prodl	equ	0xFF3
   687                           intcon	equ	0xFF2
   688                           postinc0	equ	0xFEE
   689                           wreg	equ	0xFE8
   690                           indf1	equ	0xFE7
   691                           postdec1	equ	0xFE5
   692                           fsr1h	equ	0xFE2
   693                           fsr1l	equ	0xFE1
   694                           indf2	equ	0xFDF
   695                           postinc2	equ	0xFDE
   696                           postdec2	equ	0xFDD
   697                           fsr2h	equ	0xFDA
   698                           fsr2l	equ	0xFD9
   699                           status	equ	0xFD8
   700                           
   701                           	psect	dataBANK0
   702  000060                     __pdataBANK0:
   703                           	opt stack 0
   704  000060                     _cycledutyoff:
   705                           	opt stack 0
   706  000060                     	ds	48
   707  000090                     _cycledutyon:
   708                           	opt stack 0
   709  000090                     	ds	48
   710  0000C0                     _period:
   711                           	opt stack 0
   712  0000C0                     	ds	30
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           tblptrl	equ	0xFF6
   716                           tablat	equ	0xFF5
   717                           prodh	equ	0xFF4
   718                           prodl	equ	0xFF3
   719                           intcon	equ	0xFF2
   720                           postinc0	equ	0xFEE
   721                           wreg	equ	0xFE8
   722                           indf1	equ	0xFE7
   723                           postdec1	equ	0xFE5
   724                           fsr1h	equ	0xFE2
   725                           fsr1l	equ	0xFE1
   726                           indf2	equ	0xFDF
   727                           postinc2	equ	0xFDE
   728                           postdec2	equ	0xFDD
   729                           fsr2h	equ	0xFDA
   730                           fsr2l	equ	0xFD9
   731                           status	equ	0xFD8
   732                           
   733                           	psect	bssBIGRAM
   734  000BC1                     __pbssBIGRAM:
   735                           	opt stack 0
   736  000BC1                     _time_off:
   737                           	opt stack 0
   738  000BC1                     	ds	320
   739  000D01                     _time_on:
   740                           	opt stack 0
   741  000D01                     	ds	320
   742                           tblptru	equ	0xFF8
   743                           tblptrh	equ	0xFF7
   744                           tblptrl	equ	0xFF6
   745                           tablat	equ	0xFF5
   746                           prodh	equ	0xFF4
   747                           prodl	equ	0xFF3
   748                           intcon	equ	0xFF2
   749                           postinc0	equ	0xFEE
   750                           wreg	equ	0xFE8
   751                           indf1	equ	0xFE7
   752                           postdec1	equ	0xFE5
   753                           fsr1h	equ	0xFE2
   754                           fsr1l	equ	0xFE1
   755                           indf2	equ	0xFDF
   756                           postinc2	equ	0xFDE
   757                           postdec2	equ	0xFDD
   758                           fsr2h	equ	0xFDA
   759                           fsr2l	equ	0xFD9
   760                           status	equ	0xFD8
   761                           
   762                           	psect	cstackCOMRAM
   763  000001                     __pcstackCOMRAM:
   764                           	opt stack 0
   765  000001                     ??_GetLampBoardAddr:
   766                           	opt stack 0
   767  000001                     ?_CANFilterSet:
   768                           	opt stack 0
   769  000001                     ?_CANErrClr:
   770                           	opt stack 0
   771  000001                     ??_CANErrClr:
   772                           	opt stack 0
   773  000001                     ?_CANSetID:
   774                           	opt stack 0
   775  000001                     ?_CANInit:
   776                           	opt stack 0
   777  000001                     ?_EEPROMRead:
   778                           	opt stack 0
   779  000001                     ?_EEPROMWrite:
   780                           	opt stack 0
   781  000001                     ?_delayus:
   782                           	opt stack 0
   783  000001                     ?_LED_On_Disp:
   784                           	opt stack 0
   785  000001                     ??_LED_On_Disp:
   786                           	opt stack 0
   787  000001                     ?_LED_Off_Disp:
   788                           	opt stack 0
   789  000001                     ??_LED_Off_Disp:
   790                           	opt stack 0
   791  000001                     ?_YellowFlash:
   792                           	opt stack 0
   793  000001                     ??_YellowFlash:
   794                           	opt stack 0
   795  000001                     ?_TMR0IntServer:
   796                           	opt stack 0
   797  000001                     ??_TMR0IntServer:
   798                           	opt stack 0
   799  000001                     ?_TMR1IntServer:
   800                           	opt stack 0
   801  000001                     ??_TMR1IntServer:
   802                           	opt stack 0
   803  000001                     ?_ADIntServer:
   804                           	opt stack 0
   805  000001                     ??_ADIntServer:
   806                           	opt stack 0
   807  000001                     ?_IntServer:
   808                           	opt stack 0
   809  000001                     ??_IntServer:
   810                           	opt stack 0
   811  000001                     ?_PORTInit:
   812                           	opt stack 0
   813  000001                     ??_PORTInit:
   814                           	opt stack 0
   815  000001                     ?_IntManager:
   816                           	opt stack 0
   817  000001                     ??_IntManager:
   818                           	opt stack 0
   819  000001                     ?_CANSendConfirm:
   820                           	opt stack 0
   821  000001                     ?_CANSendID:
   822                           	opt stack 0
   823  000001                     ?_CANWriteID:
   824                           	opt stack 0
   825  000001                     ?_Read_YFlash_CFG:
   826                           	opt stack 0
   827  000001                     ?_YFlashNewConfigure:
   828                           	opt stack 0
   829  000001                     ?_CANReadVersion:
   830                           	opt stack 0
   831  000001                     ?_HeartbeatTest:
   832                           	opt stack 0
   833  000001                     ?_main:
   834                           	opt stack 0
   835  000001                     ?_GetLampBoardAddr:
   836                           	opt stack 0
   837  000001                     ?_GetAddr:
   838                           	opt stack 0
   839  000001                     ?_CANSend:
   840                           	opt stack 0
   841  000001                     ?___lwdiv:
   842                           	opt stack 0
   843  000001                     ?___ftpack:
   844                           	opt stack 0
   845  000001                     CANFilterSet@f_type:
   846                           	opt stack 0
   847  000001                     CANSetID@f_type:
   848                           	opt stack 0
   849  000001                     CANSend@id:
   850                           	opt stack 0
   851  000001                     CANSend@dat:
   852                           	opt stack 0
   853  000001                     EEPROMRead@num:
   854                           	opt stack 0
   855  000001                     EEPROMWrite@num:
   856                           	opt stack 0
   857  000001                     GetLampBoardAddr@i:
   858                           	opt stack 0
   859  000001                     delayus@us:
   860                           	opt stack 0
   861  000001                     ___lwdiv@dividend:
   862                           	opt stack 0
   863  000001                     ___ftpack@arg:
   864                           	opt stack 0
   865                           
   866                           ; 3 bytes @ 0x0
   867  000001                     	ds	1
   868  000002                     ??_CANFilterSet:
   869                           	opt stack 0
   870  000002                     ??_CANSetID:
   871                           	opt stack 0
   872  000002                     CANFilterSet@board_addr:
   873                           	opt stack 0
   874  000002                     CANSend@dlc:
   875                           	opt stack 0
   876  000002                     EEPROMRead@dat:
   877                           	opt stack 0
   878  000002                     EEPROMWrite@dat:
   879                           	opt stack 0
   880                           
   881                           ; 2 bytes @ 0x1
   882  000002                     	ds	1
   883  000003                     ??_CANSend:
   884                           	opt stack 0
   885  000003                     ??_EEPROMRead:
   886                           	opt stack 0
   887  000003                     ??_delayus:
   888                           	opt stack 0
   889  000003                     ??_CANSendConfirm:
   890                           	opt stack 0
   891  000003                     ??_CANReadVersion:
   892                           	opt stack 0
   893  000003                     GetLampBoardAddr@addr:
   894                           	opt stack 0
   895  000003                     CANSetID@board_addr:
   896                           	opt stack 0
   897  000003                     EEPROMRead@addr:
   898                           	opt stack 0
   899  000003                     CANSendConfirm@i:
   900                           	opt stack 0
   901  000003                     delayus@i:
   902                           	opt stack 0
   903  000003                     ___lwdiv@divisor:
   904                           	opt stack 0
   905                           
   906                           ; 2 bytes @ 0x2
   907  000003                     	ds	1
   908  000004                     ??_GetAddr:
   909                           	opt stack 0
   910  000004                     ??_CANInit:
   911                           	opt stack 0
   912  000004                     ??_EEPROMWrite:
   913                           	opt stack 0
   914  000004                     ??_CANSendID:
   915                           	opt stack 0
   916  000004                     ??_Read_YFlash_CFG:
   917                           	opt stack 0
   918  000004                     ??_HeartbeatTest:
   919                           	opt stack 0
   920  000004                     GetAddr@board_type:
   921                           	opt stack 0
   922  000004                     CANInit@b_addr:
   923                           	opt stack 0
   924  000004                     EEPROMWrite@addr:
   925                           	opt stack 0
   926  000004                     CANSendID@sm:
   927                           	opt stack 0
   928  000004                     ___ftpack@exp:
   929                           	opt stack 0
   930                           
   931                           ; 1 bytes @ 0x3
   932  000004                     	ds	1
   933  000005                     ?_delayms:
   934                           	opt stack 0
   935  000005                     ??_CANWriteID:
   936                           	opt stack 0
   937  000005                     ??___lwdiv:
   938                           	opt stack 0
   939  000005                     GetAddr@rel:
   940                           	opt stack 0
   941  000005                     CANWriteID@fm:
   942                           	opt stack 0
   943  000005                     ___ftpack@sign:
   944                           	opt stack 0
   945  000005                     delayms@ms:
   946                           	opt stack 0
   947  000005                     ___lwdiv@quotient:
   948                           	opt stack 0
   949                           
   950                           ; 2 bytes @ 0x4
   951  000005                     	ds	1
   952  000006                     ??___ftpack:
   953                           	opt stack 0
   954  000006                     ?_CANRecv:
   955                           	opt stack 0
   956  000006                     CANRecv@dat:
   957                           	opt stack 0
   958                           
   959                           ; 1 bytes @ 0x5
   960  000006                     	ds	1
   961  000007                     ??_delayms:
   962                           	opt stack 0
   963  000007                     CANRecv@dlc:
   964                           	opt stack 0
   965  000007                     ___lwdiv@counter:
   966                           	opt stack 0
   967  000007                     delayms@i:
   968                           	opt stack 0
   969                           
   970                           ; 2 bytes @ 0x6
   971  000007                     	ds	1
   972  000008                     ??_CANRecv:
   973                           	opt stack 0
   974  000008                     CANRecv@id:
   975                           	opt stack 0
   976                           
   977                           ; 1 bytes @ 0x7
   978  000008                     	ds	1
   979  000009                     ?___ftmul:
   980                           	opt stack 0
   981  000009                     ___ftmul@f1:
   982                           	opt stack 0
   983                           
   984                           ; 3 bytes @ 0x8
   985  000009                     	ds	3
   986  00000C                     ___ftmul@f2:
   987                           	opt stack 0
   988                           
   989                           ; 3 bytes @ 0xB
   990  00000C                     	ds	3
   991  00000F                     ??___ftmul:
   992                           	opt stack 0
   993                           
   994                           ; 0 bytes @ 0xE
   995  00000F                     	ds	5
   996  000014                     ___ftmul@exp:
   997                           	opt stack 0
   998                           
   999                           ; 1 bytes @ 0x13
  1000  000014                     	ds	1
  1001  000015                     ___ftmul@f3_as_product:
  1002                           	opt stack 0
  1003                           
  1004                           ; 3 bytes @ 0x14
  1005  000015                     	ds	3
  1006  000018                     ___ftmul@cntr:
  1007                           	opt stack 0
  1008                           
  1009                           ; 1 bytes @ 0x17
  1010  000018                     	ds	1
  1011  000019                     ___ftmul@sign:
  1012                           	opt stack 0
  1013                           
  1014                           ; 1 bytes @ 0x18
  1015  000019                     	ds	1
  1016  00001A                     ?___fttol:
  1017                           	opt stack 0
  1018  00001A                     ___fttol@f1:
  1019                           	opt stack 0
  1020                           
  1021                           ; 3 bytes @ 0x19
  1022  00001A                     	ds	4
  1023  00001E                     ??___fttol:
  1024                           	opt stack 0
  1025                           
  1026                           ; 0 bytes @ 0x1D
  1027  00001E                     	ds	5
  1028  000023                     ___fttol@sign1:
  1029                           	opt stack 0
  1030                           
  1031                           ; 1 bytes @ 0x22
  1032  000023                     	ds	1
  1033  000024                     ___fttol@lval:
  1034                           	opt stack 0
  1035                           
  1036                           ; 4 bytes @ 0x23
  1037  000024                     	ds	4
  1038  000028                     ___fttol@exp1:
  1039                           	opt stack 0
  1040                           
  1041                           ; 1 bytes @ 0x27
  1042  000028                     	ds	1
  1043  000029                     ?_CalculateTime25msCounter:
  1044                           	opt stack 0
  1045  000029                     CalculateTime25msCounter@line:
  1046                           	opt stack 0
  1047                           
  1048                           ; 1 bytes @ 0x28
  1049  000029                     	ds	1
  1050  00002A                     ??_CalculateTime25msCounter:
  1051                           	opt stack 0
  1052                           
  1053                           ; 0 bytes @ 0x29
  1054  00002A                     	ds	6
  1055  000030                     CalculateTime25msCounter@row:
  1056                           	opt stack 0
  1057                           
  1058                           ; 1 bytes @ 0x2F
  1059  000030                     	ds	1
  1060  000031                     CalculateTime25msCounter@i:
  1061                           	opt stack 0
  1062                           
  1063                           ; 2 bytes @ 0x30
  1064  000031                     	ds	2
  1065  000033                     CalculateTime25msCounter@j:
  1066                           	opt stack 0
  1067                           
  1068                           ; 2 bytes @ 0x32
  1069  000033                     	ds	2
  1070  000035                     ??_YFlashNewConfigure:
  1071                           	opt stack 0
  1072  000035                     ?_CANDATAAnalyzing:
  1073                           	opt stack 0
  1074  000035                     CANDATAAnalyzing@dat:
  1075                           	opt stack 0
  1076                           
  1077                           ; 1 bytes @ 0x34
  1078  000035                     	ds	1
  1079  000036                     CANDATAAnalyzing@dlc:
  1080                           	opt stack 0
  1081                           
  1082                           ; 1 bytes @ 0x35
  1083  000036                     	ds	1
  1084  000037                     ??_CANDATAAnalyzing:
  1085                           	opt stack 0
  1086                           
  1087                           ; 0 bytes @ 0x36
  1088  000037                     	ds	4
  1089  00003B                     CANDATAAnalyzing@id:
  1090                           	opt stack 0
  1091                           
  1092                           ; 1 bytes @ 0x3A
  1093  00003B                     	ds	1
  1094  00003C                     ??_main:
  1095                           	opt stack 0
  1096                           tblptru	equ	0xFF8
  1097                           tblptrh	equ	0xFF7
  1098                           tblptrl	equ	0xFF6
  1099                           tablat	equ	0xFF5
  1100                           prodh	equ	0xFF4
  1101                           prodl	equ	0xFF3
  1102                           intcon	equ	0xFF2
  1103                           postinc0	equ	0xFEE
  1104                           wreg	equ	0xFE8
  1105                           indf1	equ	0xFE7
  1106                           postdec1	equ	0xFE5
  1107                           fsr1h	equ	0xFE2
  1108                           fsr1l	equ	0xFE1
  1109                           indf2	equ	0xFDF
  1110                           postinc2	equ	0xFDE
  1111                           postdec2	equ	0xFDD
  1112                           fsr2h	equ	0xFDA
  1113                           fsr2l	equ	0xFD9
  1114                           status	equ	0xFD8
  1115                           
  1116                           ; 0 bytes @ 0x3B
  1117 ;;
  1118 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1119 ;;
  1120 ;; *************** function _main *****************
  1121 ;; Defined at:
  1122 ;;		line 811 in file "G:\working\YellowFlashingController\YellowFlash.C"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;		None               void
  1129 ;; Registers used:
  1130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1140 ;;Total ram usage:        0 bytes
  1141 ;; Hardware stack levels required when called:    9
  1142 ;; This function calls:
  1143 ;;		_delayms
  1144 ;;		_PORTInit
  1145 ;;		_IntManager
  1146 ;;		_GetAddr
  1147 ;;		_CANInit
  1148 ;;		_CANRecv
  1149 ;;		_CANDATAAnalyzing
  1150 ;;		_HeartbeatTest
  1151 ;; This function is called by:
  1152 ;;		Startup code after reset
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text0
  1157  001B3A                     __ptext0:
  1158                           	opt stack 0
  1159  001B3A                     _main:
  1160                           	opt stack 22
  1161                           
  1162                           ;YellowFlash.C: 814: delayms(500);
  1163  001B3A  0E01               	movlw	1
  1164  001B3C  6E06               	movwf	?_delayms+1,c
  1165  001B3E  0EF4               	movlw	244
  1166  001B40  6E05               	movwf	?_delayms,c
  1167  001B42  EC15  F00F         	call	_delayms	;wreg free
  1168                           
  1169                           ;YellowFlash.C: 815: PORTInit();
  1170  001B46  EC48  F00F         	call	_PORTInit	;wreg free
  1171                           
  1172                           ; BSR set to: 15
  1173                           ;YellowFlash.C: 816: IntManager();
  1174  001B4A  EC02  F00F         	call	_IntManager	;wreg free
  1175                           
  1176                           ; BSR set to: 15
  1177                           ;YellowFlash.C: 817: my_addr =GetAddr(0x06);
  1178  001B4E  0E06               	movlw	6
  1179  001B50  EC58  F00E         	call	_GetAddr
  1180  001B54  6E48               	movwf	_my_addr,c
  1181                           
  1182                           ; BSR set to: 15
  1183                           ;YellowFlash.C: 819: sta = 0X01;
  1184  001B56  5048               	movf	_my_addr,w,c
  1185  001B58  ECC6  F00D         	call	_CANInit
  1186                           
  1187                           ;YellowFlash.C: 820: SWDTEN =1;
  1188  001B5C  80D1               	bsf	4049,0,c	;volatile
  1189  001B5E                     l3211:
  1190                           
  1191                           ;YellowFlash.C: 826: if(CANRecv(CANRid,CANRdata,&CANRdlc))
  1192  001B5E  0100               	movlb	0	; () banked
  1193  001B60  0EE0               	movlw	low _CANRdata
  1194  001B62  6E06               	movwf	?_CANRecv,c
  1195  001B64  0E5D               	movlw	low _CANRdlc
  1196  001B66  6E07               	movwf	?_CANRecv+1,c
  1197  001B68  0EE8               	movlw	_CANRid& (0+255)
  1198  001B6A  EC83  F007         	call	_CANRecv
  1199  001B6E  E308               	bnc	l3215
  1200                           
  1201                           ;YellowFlash.C: 827: {
  1202                           ;YellowFlash.C: 829: CANDATAAnalyzing(CANRid,CANRdata,CANRdlc);
  1203  001B70  0100               	movlb	0	; () banked
  1204  001B72  0EE0               	movlw	low _CANRdata
  1205  001B74  6E35               	movwf	?_CANDATAAnalyzing,c
  1206  001B76  C05D  F036         	movff	_CANRdlc,?_CANDATAAnalyzing+1
  1207  001B7A  0EE8               	movlw	_CANRid& (0+255)
  1208  001B7C  EC77  F008         	call	_CANDATAAnalyzing
  1209  001B80                     l3215:
  1210  001B80  0004               	clrwdt		;# 
  1211                           
  1212                           ;YellowFlash.C: 832: if(force_status)
  1213  001B82  5045               	movf	_force_status,w,c
  1214  001B84  E1EC               	bnz	l3211
  1215                           
  1216                           ;YellowFlash.C: 834: else
  1217                           ;YellowFlash.C: 835: {
  1218                           ;YellowFlash.C: 836: HeartbeatTest();
  1219  001B86  EC91  F00E         	call	_HeartbeatTest	;wreg free
  1220  001B8A  D7E9               	goto	l3211
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           prodh	equ	0xFF4
  1226                           prodl	equ	0xFF3
  1227                           intcon	equ	0xFF2
  1228                           postinc0	equ	0xFEE
  1229                           wreg	equ	0xFE8
  1230                           indf1	equ	0xFE7
  1231                           postdec1	equ	0xFE5
  1232                           fsr1h	equ	0xFE2
  1233                           fsr1l	equ	0xFE1
  1234                           indf2	equ	0xFDF
  1235                           postinc2	equ	0xFDE
  1236                           postdec2	equ	0xFDD
  1237                           fsr2h	equ	0xFDA
  1238                           fsr2l	equ	0xFD9
  1239                           status	equ	0xFD8
  1240                           
  1241 ;; *************** function _CANRecv *****************
  1242 ;; Defined at:
  1243 ;;		line 259 in file "G:\working\YellowFlashingController\CAN.H"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  id              1    wreg     PTR unsigned char 
  1246 ;;		 -> CANRid(4), 
  1247 ;;  dat             1    5[COMRAM] PTR unsigned char 
  1248 ;;		 -> CANRdata(8), 
  1249 ;;  dlc             1    6[COMRAM] PTR unsigned char 
  1250 ;;		 -> CANRdlc(1), 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  id              1    7[COMRAM] PTR unsigned char 
  1253 ;;		 -> CANRid(4), 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;		None               void
  1256 ;; Registers used:
  1257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : F/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: FFFFFFF0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1263 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1264 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1266 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1267 ;;Total ram usage:        3 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:    6
  1270 ;; This function calls:
  1271 ;;		_GetAddr
  1272 ;;		_CANInit
  1273 ;; This function is called by:
  1274 ;;		_main
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text1
  1279  000F06                     __ptext1:
  1280                           	opt stack 0
  1281  000F06                     __end_of_main:
  1282                           	opt stack 0
  1283  000F06                     _CANRecv:
  1284                           	opt stack 24
  1285                           
  1286                           ;CANRecv@id stored from wreg
  1287  000F06  CFE8 F008          	movff	wreg,CANRecv@id
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;CAN.H: 262: if(RXB0IF ==1)
  1291  000F0A  A077               	btfss	3959,0,c	;volatile
  1292  000F0C  D039               	goto	l362
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;CAN.H: 263: {
  1296                           ;CAN.H: 264: RXB0IF =0;
  1297  000F0E  9077               	bcf	3959,0,c	;volatile
  1298                           
  1299                           ; BSR set to: 0
  1300                           ;CAN.H: 265: RXB0CON &= 0x7f;
  1301  000F10  9E60               	bcf	3936,7,c	;volatile
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;CAN.H: 266: id[0] = RXB0SIDH;
  1305  000F12  5008               	movf	CANRecv@id,w,c
  1306  000F14  6ED9               	movwf	fsr2l,c
  1307  000F16  6ADA               	clrf	fsr2h,c
  1308  000F18  CF61 FFDF          	movff	3937,indf2	;volatile
  1309                           
  1310                           ;CAN.H: 267: id[1] = RXB0SIDL;
  1311  000F1C  5008               	movf	CANRecv@id,w,c
  1312  000F1E  6ED9               	movwf	fsr2l,c
  1313  000F20  6ADA               	clrf	fsr2h,c
  1314  000F22  2AD9               	incf	fsr2l,f,c
  1315  000F24  6ADA               	clrf	fsr2h,c
  1316  000F26  CF62 FFDF          	movff	3938,indf2	;volatile
  1317                           
  1318                           ;CAN.H: 268: id[2] = RXB0EIDH;
  1319  000F2A  D8D3               	call	PL23	;call to abstracted procedure
  1320  000F2C  CF63 FFDF          	movff	3939,indf2	;volatile
  1321                           
  1322                           ;CAN.H: 269: id[3] = RXB0EIDL;
  1323  000F30  D8D7               	call	PL24	;call to abstracted procedure
  1324  000F32  CF64 FFDF          	movff	3940,indf2	;volatile
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;CAN.H: 271: *dlc =RXB0DLC;
  1328  000F36  5007               	movf	CANRecv@dlc,w,c
  1329  000F38  6ED9               	movwf	fsr2l,c
  1330  000F3A  6ADA               	clrf	fsr2h,c
  1331  000F3C  CF65 FFDF          	movff	3941,indf2	;volatile
  1332                           
  1333                           ; BSR set to: 0
  1334                           ;CAN.H: 273: dat[0] = RXB0D0;
  1335  000F40  5006               	movf	CANRecv@dat,w,c
  1336  000F42  6ED9               	movwf	fsr2l,c
  1337  000F44  6ADA               	clrf	fsr2h,c
  1338  000F46  CF66 FFDF          	movff	3942,indf2	;volatile
  1339                           
  1340                           ;CAN.H: 274: dat[1] = RXB0D1;
  1341  000F4A  5006               	movf	CANRecv@dat,w,c
  1342  000F4C  6ED9               	movwf	fsr2l,c
  1343  000F4E  6ADA               	clrf	fsr2h,c
  1344  000F50  2AD9               	incf	fsr2l,f,c
  1345  000F52  6ADA               	clrf	fsr2h,c
  1346  000F54  CF67 FFDF          	movff	3943,indf2	;volatile
  1347                           
  1348                           ;CAN.H: 275: dat[2] = RXB0D2;
  1349  000F58  D892               	call	PL16	;call to abstracted procedure
  1350  000F5A  CF68 FFDF          	movff	3944,indf2	;volatile
  1351                           
  1352                           ;CAN.H: 276: dat[3] = RXB0D3;
  1353  000F5E  D896               	call	PL17	;call to abstracted procedure
  1354  000F60  CF69 FFDF          	movff	3945,indf2	;volatile
  1355                           
  1356                           ;CAN.H: 277: dat[4] = RXB0D4;
  1357  000F64  D8A1               	call	PL20	;call to abstracted procedure
  1358  000F66  CF6A FFDF          	movff	3946,indf2	;volatile
  1359                           
  1360                           ;CAN.H: 278: dat[5] = RXB0D5;
  1361  000F6A  D897               	call	PL19	;call to abstracted procedure
  1362  000F6C  CF6B FFDF          	movff	3947,indf2	;volatile
  1363                           
  1364                           ;CAN.H: 279: dat[6] = RXB0D6;
  1365  000F70  D8A2               	call	PL21	;call to abstracted procedure
  1366  000F72  CF6C FFDF          	movff	3948,indf2	;volatile
  1367                           
  1368                           ;CAN.H: 280: dat[7] = RXB0D7;
  1369  000F76  D8A6               	call	PL22	;call to abstracted procedure
  1370  000F78  CF6D FFDF          	movff	3949,indf2	;volatile
  1371  000F7C                     l2673:
  1372                           
  1373                           ;CAN.H: 281: return 1;
  1374  000F7C  80D8               	bsf	status,0,c
  1375  000F7E  0012               	return	
  1376  000F80                     l362:
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;CAN.H: 282: }
  1380                           ;CAN.H: 283: if(RXB1IF ==1)
  1381  000F80  A277               	btfss	3959,1,c	;volatile
  1382  000F82  D039               	goto	l364
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;CAN.H: 284: {
  1386                           ;CAN.H: 285: RXB1IF =0;
  1387  000F84  9277               	bcf	3959,1,c	;volatile
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;CAN.H: 286: RXB1CON &= 0x7f;
  1391  000F86  010F               	movlb	15	; () banked
  1392  000F88  9F30               	bcf	48,7,b	;volatile
  1393                           
  1394                           ; BSR set to: 15
  1395                           ;CAN.H: 287: id[0] = RXB1SIDH;
  1396  000F8A  5008               	movf	CANRecv@id,w,c
  1397  000F8C  6ED9               	movwf	fsr2l,c
  1398  000F8E  6ADA               	clrf	fsr2h,c
  1399  000F90  CF31 FFDF          	movff	3889,indf2	;volatile
  1400                           
  1401                           ; BSR set to: 15
  1402                           ;CAN.H: 288: id[1] = RXB1SIDL;
  1403  000F94  5008               	movf	CANRecv@id,w,c
  1404  000F96  6ED9               	movwf	fsr2l,c
  1405  000F98  6ADA               	clrf	fsr2h,c
  1406  000F9A  2AD9               	incf	fsr2l,f,c
  1407  000F9C  6ADA               	clrf	fsr2h,c
  1408  000F9E  CF32 FFDF          	movff	3890,indf2	;volatile
  1409                           
  1410                           ; BSR set to: 15
  1411                           ;CAN.H: 289: id[2] = RXB1EIDH;
  1412  000FA2  D897               	call	PL23	;call to abstracted procedure
  1413  000FA4  CF33 FFDF          	movff	3891,indf2	;volatile
  1414                           
  1415                           ; BSR set to: 15
  1416                           ;CAN.H: 290: id[3] = RXB1EIDL;
  1417  000FA8  D89B               	call	PL24	;call to abstracted procedure
  1418  000FAA  CF34 FFDF          	movff	3892,indf2	;volatile
  1419                           
  1420                           ; BSR set to: 15
  1421                           ;CAN.H: 292: *dlc =RXB1DLC;
  1422  000FAE  5007               	movf	CANRecv@dlc,w,c
  1423  000FB0  6ED9               	movwf	fsr2l,c
  1424  000FB2  6ADA               	clrf	fsr2h,c
  1425  000FB4  CF35 FFDF          	movff	3893,indf2	;volatile
  1426                           
  1427                           ; BSR set to: 15
  1428                           ;CAN.H: 294: dat[0] = RXB1D0;
  1429  000FB8  5006               	movf	CANRecv@dat,w,c
  1430  000FBA  6ED9               	movwf	fsr2l,c
  1431  000FBC  6ADA               	clrf	fsr2h,c
  1432  000FBE  CF36 FFDF          	movff	3894,indf2	;volatile
  1433                           
  1434                           ; BSR set to: 15
  1435                           ;CAN.H: 295: dat[1] = RXB1D1;
  1436  000FC2  5006               	movf	CANRecv@dat,w,c
  1437  000FC4  6ED9               	movwf	fsr2l,c
  1438  000FC6  6ADA               	clrf	fsr2h,c
  1439  000FC8  2AD9               	incf	fsr2l,f,c
  1440  000FCA  6ADA               	clrf	fsr2h,c
  1441  000FCC  CF37 FFDF          	movff	3895,indf2	;volatile
  1442                           
  1443                           ; BSR set to: 15
  1444                           ;CAN.H: 296: dat[2] = RXB1D2;
  1445  000FD0  D856               	call	PL16	;call to abstracted procedure
  1446  000FD2  CF38 FFDF          	movff	3896,indf2	;volatile
  1447                           
  1448                           ; BSR set to: 15
  1449                           ;CAN.H: 297: dat[3] = RXB1D3;
  1450  000FD6  D85A               	call	PL17	;call to abstracted procedure
  1451  000FD8  CF39 FFDF          	movff	3897,indf2	;volatile
  1452                           
  1453                           ; BSR set to: 15
  1454                           ;CAN.H: 298: dat[4] = RXB1D4;
  1455  000FDC  D865               	call	PL20	;call to abstracted procedure
  1456  000FDE  CF3A FFDF          	movff	3898,indf2	;volatile
  1457                           
  1458                           ; BSR set to: 15
  1459                           ;CAN.H: 299: dat[5] = RXB1D5;
  1460  000FE2  D85B               	call	PL19	;call to abstracted procedure
  1461  000FE4  CF3B FFDF          	movff	3899,indf2	;volatile
  1462                           
  1463                           ; BSR set to: 15
  1464                           ;CAN.H: 300: dat[6] = RXB1D6;
  1465  000FE8  D866               	call	PL21	;call to abstracted procedure
  1466  000FEA  CF3C FFDF          	movff	3900,indf2	;volatile
  1467                           
  1468                           ; BSR set to: 15
  1469                           ;CAN.H: 301: dat[7] = RXB1D7;
  1470  000FEE  D86A               	call	PL22	;call to abstracted procedure
  1471  000FF0  CF3D FFDF          	movff	3901,indf2	;volatile
  1472  000FF4  D7C3               	goto	l2673
  1473  000FF6                     l364:
  1474                           
  1475                           ; BSR set to: 0
  1476                           ;CAN.H: 304: }
  1477                           ;CAN.H: 305: if(TXB0IF ==1)
  1478  000FF6  B477               	btfsc	3959,2,c	;volatile
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;CAN.H: 306: {
  1482                           ;CAN.H: 307: TXB0IF =0;
  1483  000FF8  9477               	bcf	3959,2,c	;volatile
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;CAN.H: 308: }
  1487                           ;CAN.H: 309: if(TXB1IF ==1)
  1488  000FFA  B677               	btfsc	3959,3,c	;volatile
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;CAN.H: 310: {
  1492                           ;CAN.H: 311: TXB1IF =0;
  1493  000FFC  9677               	bcf	3959,3,c	;volatile
  1494                           
  1495                           ; BSR set to: 0
  1496                           ;CAN.H: 312: }
  1497                           ;CAN.H: 313: if(TXB2IF ==1)
  1498  000FFE  B877               	btfsc	3959,4,c	;volatile
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;CAN.H: 314: {
  1502                           ;CAN.H: 315: TXB2IF =0;
  1503  001000  9877               	bcf	3959,4,c	;volatile
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;CAN.H: 316: }
  1507                           ;CAN.H: 318: if(ERRIF ==1)
  1508  001002  AA77               	btfss	3959,5,c	;volatile
  1509  001004  D033               	goto	l2747
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;CAN.H: 319: {
  1513                           ;CAN.H: 320: ERRIF =0;
  1514  001006  9A77               	bcf	3959,5,c	;volatile
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;CAN.H: 322: id[0] = 0;
  1518  001008  5008               	movf	CANRecv@id,w,c
  1519  00100A  6ED9               	movwf	fsr2l,c
  1520  00100C  6ADA               	clrf	fsr2h,c
  1521  00100E  6ADF               	clrf	indf2,c
  1522                           
  1523                           ; BSR set to: 0
  1524                           ;CAN.H: 323: id[1] = 0;
  1525  001010  5008               	movf	CANRecv@id,w,c
  1526  001012  6ED9               	movwf	fsr2l,c
  1527  001014  6ADA               	clrf	fsr2h,c
  1528  001016  2AD9               	incf	fsr2l,f,c
  1529  001018  6ADA               	clrf	fsr2h,c
  1530  00101A  6ADF               	clrf	indf2,c
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;CAN.H: 324: id[2] = 0;
  1534  00101C  D85A               	call	PL23	;call to abstracted procedure
  1535  00101E  6ADF               	clrf	indf2,c
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;CAN.H: 325: id[3] = 0;
  1539  001020  D85F               	call	PL24	;call to abstracted procedure
  1540  001022  6ADF               	clrf	indf2,c
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;CAN.H: 327: *dlc =0;
  1544  001024  5007               	movf	CANRecv@dlc,w,c
  1545  001026  6ED9               	movwf	fsr2l,c
  1546  001028  6ADA               	clrf	fsr2h,c
  1547  00102A  6ADF               	clrf	indf2,c
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;CAN.H: 329: dat[0] = 0;
  1551  00102C  5006               	movf	CANRecv@dat,w,c
  1552  00102E  6ED9               	movwf	fsr2l,c
  1553  001030  6ADA               	clrf	fsr2h,c
  1554  001032  6ADF               	clrf	indf2,c
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;CAN.H: 330: dat[1] = 0;
  1558  001034  5006               	movf	CANRecv@dat,w,c
  1559  001036  6ED9               	movwf	fsr2l,c
  1560  001038  6ADA               	clrf	fsr2h,c
  1561  00103A  2AD9               	incf	fsr2l,f,c
  1562  00103C  6ADA               	clrf	fsr2h,c
  1563  00103E  6ADF               	clrf	indf2,c
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;CAN.H: 331: dat[2] = 0;
  1567  001040  5006               	movf	CANRecv@dat,w,c
  1568  001042  6ED9               	movwf	fsr2l,c
  1569  001044  6ADA               	clrf	fsr2h,c
  1570  001046  0E02               	movlw	2
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;CAN.H: 332: dat[3] = 0;
  1574  001048  D813               	call	PL6	;call to abstracted procedure
  1575  00104A  0E03               	movlw	3
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;CAN.H: 333: dat[4] = 0;
  1579  00104C  D811               	call	PL6	;call to abstracted procedure
  1580  00104E  0E04               	movlw	4
  1581                           
  1582                           ; BSR set to: 0
  1583                           ;CAN.H: 334: dat[5] = 0;
  1584  001050  D80F               	call	PL6	;call to abstracted procedure
  1585  001052  0E05               	movlw	5
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;CAN.H: 335: dat[6] = 0;
  1589  001054  D80D               	call	PL6	;call to abstracted procedure
  1590  001056  0E06               	movlw	6
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;CAN.H: 336: dat[7] = 0;
  1594  001058  D80B               	call	PL6	;call to abstracted procedure
  1595  00105A  0E07               	movlw	7
  1596  00105C  26D9               	addwf	fsr2l,f,c
  1597  00105E  6ADA               	clrf	fsr2h,c
  1598  001060  6ADF               	clrf	indf2,c
  1599                           
  1600                           ; BSR set to: 0
  1601                           ;CAN.H: 338: CANInit(GetAddr(0x06));
  1602  001062  0E06               	movlw	6
  1603  001064  EC58  F00E         	call	_GetAddr
  1604  001068  ECC6  F00D         	call	_CANInit
  1605  00106C                     l2747:
  1606                           
  1607                           ;CAN.H: 340: return 0;
  1608  00106C  90D8               	bcf	status,0,c
  1609  00106E  0012               	return	
  1610  001070                     __end_of_CANRecv:
  1611                           	opt stack 0
  1612  001070                     PL6:
  1613  001070  26D9               	addwf	fsr2l,f,c
  1614  001072  6ADA               	clrf	fsr2h,c
  1615  001074  6ADF               	clrf	indf2,c
  1616  001076  5006               	movf	CANRecv@dat,w,c
  1617  001078  6ED9               	movwf	fsr2l,c
  1618  00107A  6ADA               	clrf	fsr2h,c
  1619  00107C  0012               	return	
  1620  00107E                     PL16:
  1621  00107E  5006               	movf	CANRecv@dat,w,c
  1622  001080  6ED9               	movwf	fsr2l,c
  1623  001082  6ADA               	clrf	fsr2h,c
  1624  001084  0E02               	movlw	2
  1625  001086  26D9               	addwf	fsr2l,f,c
  1626  001088  6ADA               	clrf	fsr2h,c
  1627  00108A  0012               	return	
  1628  00108C                     PL17:
  1629  00108C  5006               	movf	CANRecv@dat,w,c
  1630  00108E  6ED9               	movwf	fsr2l,c
  1631  001090  6ADA               	clrf	fsr2h,c
  1632  001092  0E03               	movlw	3
  1633  001094  26D9               	addwf	fsr2l,f,c
  1634  001096  6ADA               	clrf	fsr2h,c
  1635  001098  0012               	return	
  1636  00109A                     PL19:
  1637  00109A  5006               	movf	CANRecv@dat,w,c
  1638  00109C  6ED9               	movwf	fsr2l,c
  1639  00109E  6ADA               	clrf	fsr2h,c
  1640  0010A0  0E05               	movlw	5
  1641  0010A2  26D9               	addwf	fsr2l,f,c
  1642  0010A4  6ADA               	clrf	fsr2h,c
  1643  0010A6  0012               	return	
  1644  0010A8                     PL20:
  1645  0010A8  5006               	movf	CANRecv@dat,w,c
  1646  0010AA  6ED9               	movwf	fsr2l,c
  1647  0010AC  6ADA               	clrf	fsr2h,c
  1648  0010AE  0E04               	movlw	4
  1649  0010B0  26D9               	addwf	fsr2l,f,c
  1650  0010B2  6ADA               	clrf	fsr2h,c
  1651  0010B4  0012               	return	
  1652  0010B6                     PL21:
  1653  0010B6  5006               	movf	CANRecv@dat,w,c
  1654  0010B8  6ED9               	movwf	fsr2l,c
  1655  0010BA  6ADA               	clrf	fsr2h,c
  1656  0010BC  0E06               	movlw	6
  1657  0010BE  26D9               	addwf	fsr2l,f,c
  1658  0010C0  6ADA               	clrf	fsr2h,c
  1659  0010C2  0012               	return	
  1660  0010C4                     PL22:
  1661  0010C4  5006               	movf	CANRecv@dat,w,c
  1662  0010C6  6ED9               	movwf	fsr2l,c
  1663  0010C8  6ADA               	clrf	fsr2h,c
  1664  0010CA  0E07               	movlw	7
  1665  0010CC  26D9               	addwf	fsr2l,f,c
  1666  0010CE  6ADA               	clrf	fsr2h,c
  1667  0010D0  0012               	return	
  1668  0010D2                     PL23:
  1669  0010D2  5008               	movf	CANRecv@id,w,c
  1670  0010D4  6ED9               	movwf	fsr2l,c
  1671  0010D6  6ADA               	clrf	fsr2h,c
  1672  0010D8  0E02               	movlw	2
  1673  0010DA  26D9               	addwf	fsr2l,f,c
  1674  0010DC  6ADA               	clrf	fsr2h,c
  1675  0010DE  0012               	return	
  1676  0010E0                     PL24:
  1677  0010E0  5008               	movf	CANRecv@id,w,c
  1678  0010E2  6ED9               	movwf	fsr2l,c
  1679  0010E4  6ADA               	clrf	fsr2h,c
  1680  0010E6  0E03               	movlw	3
  1681  0010E8  26D9               	addwf	fsr2l,f,c
  1682  0010EA  6ADA               	clrf	fsr2h,c
  1683  0010EC  0012               	return	
  1684                           tblptru	equ	0xFF8
  1685                           tblptrh	equ	0xFF7
  1686                           tblptrl	equ	0xFF6
  1687                           tablat	equ	0xFF5
  1688                           prodh	equ	0xFF4
  1689                           prodl	equ	0xFF3
  1690                           intcon	equ	0xFF2
  1691                           postinc0	equ	0xFEE
  1692                           wreg	equ	0xFE8
  1693                           indf1	equ	0xFE7
  1694                           postdec1	equ	0xFE5
  1695                           fsr1h	equ	0xFE2
  1696                           fsr1l	equ	0xFE1
  1697                           indf2	equ	0xFDF
  1698                           postinc2	equ	0xFDE
  1699                           postdec2	equ	0xFDD
  1700                           fsr2h	equ	0xFDA
  1701                           fsr2l	equ	0xFD9
  1702                           status	equ	0xFD8
  1703                           
  1704 ;; *************** function _GetAddr *****************
  1705 ;; Defined at:
  1706 ;;		line 143 in file "G:\working\YellowFlashingController\TSC.H"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  board_type      1    wreg     unsigned char 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  board_type      1    3[COMRAM] unsigned char 
  1711 ;;  rel             1    4[COMRAM] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      unsigned char 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, status,0, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/F
  1718 ;;		On exit  : 0/F
  1719 ;;		Unchanged: FFFFFFFF/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1722 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1724 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1725 ;;Total ram usage:        2 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    5
  1728 ;; This function calls:
  1729 ;;		_GetLampBoardAddr
  1730 ;; This function is called by:
  1731 ;;		_CANRecv
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text2
  1737  001CB0                     __ptext2:
  1738                           	opt stack 0
  1739  001CB0                     _GetAddr:
  1740                           	opt stack 24
  1741                           
  1742                           ;GetAddr@board_type stored from wreg
  1743  001CB0  CFE8 F004          	movff	wreg,GetAddr@board_type
  1744                           
  1745                           ;TSC.H: 144: unsigned char rel;
  1746                           ;TSC.H: 145: switch (board_type)
  1747  001CB4  D00A               	goto	l2469
  1748  001CB6                     l2461:
  1749                           
  1750                           ;TSC.H: 148: rel = 0x20;
  1751  001CB6  0E20               	movlw	32
  1752  001CB8  D004               	goto	L2
  1753  001CBA                     l2463:
  1754                           
  1755                           ;TSC.H: 152: rel = GetLampBoardAddr();
  1756  001CBA  EC6F  F00D         	call	_GetLampBoardAddr	;wreg free
  1757  001CBE  D001               	goto	L2
  1758  001CC0                     l2465:
  1759                           
  1760                           ;TSC.H: 155: rel= 0x2E;
  1761  001CC0  0E2E               	movlw	46
  1762  001CC2                     L2:
  1763  001CC2  6E05               	movwf	GetAddr@rel,c
  1764  001CC4  D010               	goto	l2471
  1765  001CC6                     l325:
  1766                           
  1767                           ;TSC.H: 166: rel = 0;
  1768  001CC6  6A05               	clrf	GetAddr@rel,c
  1769                           
  1770                           ;TSC.H: 167: break;
  1771  001CC8  D00E               	goto	l2471
  1772  001CCA                     l2469:
  1773  001CCA  5004               	movf	GetAddr@board_type,w,c
  1774                           
  1775                           ; Switch size 1, requested type "space"
  1776                           ; Number of cases is 6, Range of values is 1 to 6
  1777                           ; switch strategies available:
  1778                           ; Name         Instructions Cycles
  1779                           ; simple_byte           19    10 (average)
  1780                           ;	Chosen strategy is simple_byte
  1781  001CCC  0A01               	xorlw	1	; case 1
  1782  001CCE  E0F3               	bz	l2461
  1783  001CD0  0A03               	xorlw	3	; case 2
  1784  001CD2  E0F3               	bz	l2463
  1785  001CD4  0A01               	xorlw	1	; case 3
  1786  001CD6  E007               	bz	l2471
  1787  001CD8  0A07               	xorlw	7	; case 4
  1788  001CDA  E005               	bz	l2471
  1789  001CDC  0A01               	xorlw	1	; case 5
  1790  001CDE  E003               	bz	l2471
  1791  001CE0  0A03               	xorlw	3	; case 6
  1792  001CE2  E0EE               	bz	l2465
  1793  001CE4  D7F0               	goto	l325
  1794  001CE6                     l2471:
  1795                           
  1796                           ;TSC.H: 170: return rel;
  1797  001CE6  5005               	movf	GetAddr@rel,w,c
  1798  001CE8  0012               	return	
  1799  001CEA                     __end_of_GetAddr:
  1800                           	opt stack 0
  1801                           tblptru	equ	0xFF8
  1802                           tblptrh	equ	0xFF7
  1803                           tblptrl	equ	0xFF6
  1804                           tablat	equ	0xFF5
  1805                           prodh	equ	0xFF4
  1806                           prodl	equ	0xFF3
  1807                           intcon	equ	0xFF2
  1808                           postinc0	equ	0xFEE
  1809                           wreg	equ	0xFE8
  1810                           indf1	equ	0xFE7
  1811                           postdec1	equ	0xFE5
  1812                           fsr1h	equ	0xFE2
  1813                           fsr1l	equ	0xFE1
  1814                           indf2	equ	0xFDF
  1815                           postinc2	equ	0xFDE
  1816                           postdec2	equ	0xFDD
  1817                           fsr2h	equ	0xFDA
  1818                           fsr2l	equ	0xFD9
  1819                           status	equ	0xFD8
  1820                           
  1821 ;; *************** function _GetLampBoardAddr *****************
  1822 ;; Defined at:
  1823 ;;		line 82 in file "G:\working\YellowFlashingController\TSC.H"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  i               2    0[COMRAM] unsigned int 
  1828 ;;  addr            1    2[COMRAM] unsigned char 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  1    wreg      unsigned char 
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/F
  1835 ;;		On exit  : 0/F
  1836 ;;		Unchanged: FFFFFFFF/0
  1837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1839 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1841 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1842 ;;Total ram usage:        3 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    4
  1845 ;; This function calls:
  1846 ;;		Nothing
  1847 ;; This function is called by:
  1848 ;;		_GetAddr
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           	psect	text3
  1853  001ADE                     __ptext3:
  1854                           	opt stack 0
  1855  001ADE                     _GetLampBoardAddr:
  1856                           	opt stack 24
  1857                           
  1858                           ;TSC.H: 84: unsigned int i=0;
  1859  001ADE  6A01               	clrf	GetLampBoardAddr@i,c
  1860  001AE0  6A02               	clrf	GetLampBoardAddr@i+1,c
  1861                           
  1862                           ;TSC.H: 86: addr = (PORTB>>5) & 0x07;
  1863  001AE2  3881               	swapf	3969,w,c	;volatile
  1864  001AE4  42E8               	rrncf	wreg,f,c
  1865  001AE6  0B07               	andlw	7
  1866  001AE8  6E03               	movwf	GetLampBoardAddr@addr,c
  1867                           
  1868                           ;TSC.H: 89: for(i=0;i<1000;i++)
  1869  001AEA  6A01               	clrf	GetLampBoardAddr@i,c
  1870  001AEC  6A02               	clrf	GetLampBoardAddr@i+1,c
  1871  001AEE                     l2395:
  1872                           
  1873                           ;TSC.H: 90: {;}
  1874  001AEE  4A01               	infsnz	GetLampBoardAddr@i,f,c
  1875  001AF0  2A02               	incf	GetLampBoardAddr@i+1,f,c
  1876  001AF2  0EE8               	movlw	232
  1877  001AF4  5C01               	subwf	GetLampBoardAddr@i,w,c
  1878  001AF6  0E03               	movlw	3
  1879  001AF8  5802               	subwfb	GetLampBoardAddr@i+1,w,c
  1880  001AFA  E3F9               	bnc	l2395
  1881                           
  1882                           ;TSC.H: 92: if(addr ==((PORTB>>5) & 0x07))
  1883  001AFC  3881               	swapf	3969,w,c	;volatile
  1884  001AFE  42E8               	rrncf	wreg,f,c
  1885  001B00  0B07               	andlw	7
  1886  001B02  1803               	xorwf	GetLampBoardAddr@addr,w,c
  1887  001B04  E008               	bz	l2453
  1888  001B06  0CFF               	retlw	255
  1889  001B08                     l2403:
  1890                           
  1891                           ;TSC.H: 97: return 0x13;
  1892  001B08  0C13               	retlw	19
  1893  001B0A                     l2409:
  1894                           
  1895                           ;TSC.H: 100: return 0x14;
  1896  001B0A  0C14               	retlw	20
  1897  001B0C                     l2415:
  1898                           
  1899                           ;TSC.H: 103: return 0x15;
  1900  001B0C  0C15               	retlw	21
  1901  001B0E                     l2421:
  1902                           
  1903                           ;TSC.H: 106: return 0x16;
  1904  001B0E  0C16               	retlw	22
  1905  001B10                     l2427:
  1906                           
  1907                           ;TSC.H: 109: return 0x17;
  1908  001B10  0C17               	retlw	23
  1909  001B12                     l2433:
  1910                           
  1911                           ;TSC.H: 112: return 0x18;
  1912  001B12  0C18               	retlw	24
  1913  001B14                     l2439:
  1914                           
  1915                           ;TSC.H: 115: return 0x1a;
  1916  001B14  0C1A               	retlw	26
  1917  001B16                     l2453:
  1918  001B16  5003               	movf	GetLampBoardAddr@addr,w,c
  1919                           
  1920                           ; Switch size 1, requested type "space"
  1921                           ; Number of cases is 8, Range of values is 0 to 7
  1922                           ; switch strategies available:
  1923                           ; Name         Instructions Cycles
  1924                           ; simple_byte           25    13 (average)
  1925                           ;	Chosen strategy is simple_byte
  1926  001B18  E0F7               	bz	l2403
  1927  001B1A  0A01               	xorlw	1	; case 1
  1928  001B1C  E0F6               	bz	l2409
  1929  001B1E  0A03               	xorlw	3	; case 2
  1930  001B20  E0F5               	bz	l2415
  1931  001B22  0A01               	xorlw	1	; case 3
  1932  001B24  E0F4               	bz	l2421
  1933  001B26  0A07               	xorlw	7	; case 4
  1934  001B28  E0F3               	bz	l2427
  1935  001B2A  0A01               	xorlw	1	; case 5
  1936  001B2C  E0F2               	bz	l2433
  1937  001B2E  0A03               	xorlw	3	; case 6
  1938  001B30  E0F1               	bz	l2439
  1939  001B32  0A01               	xorlw	1	; case 7
  1940  001B34  A4D8               	btfss	status,2,c
  1941  001B36  0012               	return	
  1942  001B38  0C1B               	retlw	27
  1943  001B3A                     __end_of_GetLampBoardAddr:
  1944                           	opt stack 0
  1945                           tblptru	equ	0xFF8
  1946                           tblptrh	equ	0xFF7
  1947                           tblptrl	equ	0xFF6
  1948                           tablat	equ	0xFF5
  1949                           prodh	equ	0xFF4
  1950                           prodl	equ	0xFF3
  1951                           intcon	equ	0xFF2
  1952                           postinc0	equ	0xFEE
  1953                           wreg	equ	0xFE8
  1954                           indf1	equ	0xFE7
  1955                           postdec1	equ	0xFE5
  1956                           fsr1h	equ	0xFE2
  1957                           fsr1l	equ	0xFE1
  1958                           indf2	equ	0xFDF
  1959                           postinc2	equ	0xFDE
  1960                           postdec2	equ	0xFDD
  1961                           fsr2h	equ	0xFDA
  1962                           fsr2l	equ	0xFD9
  1963                           status	equ	0xFD8
  1964                           
  1965 ;; *************** function _CANInit *****************
  1966 ;; Defined at:
  1967 ;;		line 117 in file "G:\working\YellowFlashingController\CAN.H"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  b_addr          1    wreg     unsigned char 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  b_addr          1    3[COMRAM] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;		None               void
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/F
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: FFFFFFF0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1985 ;;Total ram usage:        1 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    5
  1988 ;; This function calls:
  1989 ;;		_CANSetID
  1990 ;;		_CANFilterSet
  1991 ;;		_CANErrClr
  1992 ;; This function is called by:
  1993 ;;		_CANRecv
  1994 ;;		_main
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text4
  1999  001B8C                     __ptext4:
  2000                           	opt stack 0
  2001  001B8C                     _CANInit:
  2002                           	opt stack 24
  2003                           
  2004                           ;CANInit@b_addr stored from wreg
  2005  001B8C  CFE8 F004          	movff	wreg,CANInit@b_addr
  2006                           
  2007                           ;CAN.H: 118: TRISB |= 0x08;
  2008  001B90  8693               	bsf	3987,3,c	;volatile
  2009                           
  2010                           ;CAN.H: 119: TRISB &= 0xfb;
  2011  001B92  9493               	bcf	3987,2,c	;volatile
  2012                           
  2013                           ;CAN.H: 121: CANCON |=0x80;
  2014  001B94  8E6F               	bsf	3951,7,c	;volatile
  2015  001B96                     l338:
  2016  001B96  AE6E               	btfss	3950,7,c	;volatile
  2017  001B98  D7FE               	goto	l338
  2018                           
  2019                           ;CAN.H: 126: ECANCON &= 0x3f;
  2020  001B9A  0E3F               	movlw	63
  2021  001B9C  1672               	andwf	3954,f,c	;volatile
  2022                           
  2023                           ;CAN.H: 128: BRGCON1 = 0x00;
  2024  001B9E  010E               	movlb	14	; () banked
  2025  001BA0  6B43               	clrf	67,b	;volatile
  2026                           
  2027                           ; BSR set to: 14
  2028                           ;CAN.H: 129: BRGCON2 = 0xd1;;
  2029  001BA2  0ED1               	movlw	209
  2030  001BA4  6F44               	movwf	68,b	;volatile
  2031                           
  2032                           ; BSR set to: 14
  2033                           ;CAN.H: 130: BRGCON3 = 0xc1;
  2034  001BA6  0EC1               	movlw	193
  2035  001BA8  6F45               	movwf	69,b	;volatile
  2036                           
  2037                           ; BSR set to: 14
  2038                           ;CAN.H: 131: CIOCON = 0x21;
  2039  001BAA  0E21               	movlw	33
  2040  001BAC  6E70               	movwf	3952,c	;volatile
  2041                           
  2042                           ; BSR set to: 14
  2043                           ;CAN.H: 133: RXB0CON |= 0x06;
  2044  001BAE  0E06               	movlw	6
  2045  001BB0  1260               	iorwf	3936,f,c	;volatile
  2046                           
  2047                           ; BSR set to: 14
  2048                           ;CAN.H: 134: RXB1CON |= 0x06;
  2049  001BB2  010F               	movlb	15	; () banked
  2050  001BB4  1330               	iorwf	48,f,b	;volatile
  2051                           
  2052                           ; BSR set to: 15
  2053                           ;CAN.H: 136: CANSetID(b_addr,0x03);
  2054  001BB6  0E03               	movlw	3
  2055  001BB8  6E01               	movwf	?_CANSetID,c
  2056  001BBA  5004               	movf	CANInit@b_addr,w,c
  2057  001BBC  ECED  F00D         	call	_CANSetID
  2058                           
  2059                           ; BSR set to: 15
  2060                           ;CAN.H: 137: CANFilterSet(b_addr,0x03);
  2061  001BC0  0E03               	movlw	3
  2062  001BC2  6E01               	movwf	?_CANFilterSet,c
  2063  001BC4  5004               	movf	CANInit@b_addr,w,c
  2064  001BC6  ECBC  F00B         	call	_CANFilterSet
  2065                           
  2066                           ; BSR set to: 14
  2067                           ;CAN.H: 138: CANErrClr();
  2068  001BCA  EC69  F00F         	call	_CANErrClr	;wreg free
  2069                           
  2070                           ; BSR set to: 14
  2071                           ;CAN.H: 141: CIOCON=0X00;
  2072  001BCE  6A70               	clrf	3952,c	;volatile
  2073                           
  2074                           ; BSR set to: 14
  2075                           ;CAN.H: 145: CANCON &= 0x1f;
  2076  001BD0  0E1F               	movlw	31
  2077  001BD2  166F               	andwf	3951,f,c	;volatile
  2078  001BD4                     l341:
  2079  001BD4  A06E               	btfss	3950,0,c	;volatile
  2080  001BD6  0012               	return	
  2081  001BD8  D7FD               	goto	l341
  2082  001BDA                     __end_of_CANInit:
  2083                           	opt stack 0
  2084                           tblptru	equ	0xFF8
  2085                           tblptrh	equ	0xFF7
  2086                           tblptrl	equ	0xFF6
  2087                           tablat	equ	0xFF5
  2088                           prodh	equ	0xFF4
  2089                           prodl	equ	0xFF3
  2090                           intcon	equ	0xFF2
  2091                           postinc0	equ	0xFEE
  2092                           wreg	equ	0xFE8
  2093                           indf1	equ	0xFE7
  2094                           postdec1	equ	0xFE5
  2095                           fsr1h	equ	0xFE2
  2096                           fsr1l	equ	0xFE1
  2097                           indf2	equ	0xFDF
  2098                           postinc2	equ	0xFDE
  2099                           postdec2	equ	0xFDD
  2100                           fsr2h	equ	0xFDA
  2101                           fsr2l	equ	0xFD9
  2102                           status	equ	0xFD8
  2103                           
  2104 ;; *************** function _CANFilterSet *****************
  2105 ;; Defined at:
  2106 ;;		line 15 in file "G:\working\YellowFlashingController\CAN.H"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  board_addr      1    wreg     unsigned char 
  2109 ;;  f_type          1    0[COMRAM] unsigned char 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  board_addr      1    1[COMRAM] unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;		None               void
  2114 ;; Registers used:
  2115 ;;		wreg, status,2, status,0
  2116 ;; Tracked objects:
  2117 ;;		On entry : F/F
  2118 ;;		On exit  : F/E
  2119 ;;		Unchanged: FFFFFFF0/0
  2120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2121 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2124 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2125 ;;Total ram usage:        2 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    4
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_CANInit
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text5
  2136  001778                     __ptext5:
  2137                           	opt stack 0
  2138  001778                     _CANFilterSet:
  2139                           	opt stack 24
  2140                           
  2141                           ;CANFilterSet@board_addr stored from wreg
  2142  001778  CFE8 F002          	movff	wreg,CANFilterSet@board_addr
  2143                           
  2144                           ; BSR set to: 15
  2145                           ;CAN.H: 20: RXF0SIDH = 0;
  2146  00177C  010E               	movlb	14	; () banked
  2147  00177E  6BE0               	clrf	224,b	;volatile
  2148                           
  2149                           ; BSR set to: 14
  2150                           ;CAN.H: 21: RXF0SIDH = (f_type<<5)|(0x10>>1);
  2151  001780  3801               	swapf	CANFilterSet@f_type,w,c
  2152  001782  46E8               	rlncf	wreg,f,c
  2153  001784  0BE0               	andlw	224
  2154  001786  0908               	iorlw	8
  2155  001788  6FE0               	movwf	224,b	;volatile
  2156                           
  2157                           ; BSR set to: 14
  2158                           ;CAN.H: 22: RXF0SIDL = 0;
  2159  00178A  6BE1               	clrf	225,b	;volatile
  2160                           
  2161                           ;CAN.H: 23: RXF0SIDL = (0x10<<7)|(0x00<<5)|0x08|(board_addr>>4);
  2162  00178C  3802               	swapf	CANFilterSet@board_addr,w,c
  2163  00178E  0B0F               	andlw	15
  2164  001790  0908               	iorlw	8
  2165  001792  6FE1               	movwf	225,b	;volatile
  2166                           
  2167                           ; BSR set to: 14
  2168                           ;CAN.H: 24: RXF0EIDH = 0;
  2169  001794  6BE2               	clrf	226,b	;volatile
  2170                           
  2171                           ;CAN.H: 25: RXF0EIDH = (board_addr<<4)|0x0f;
  2172  001796  3802               	swapf	CANFilterSet@board_addr,w,c
  2173  001798  0BF0               	andlw	240
  2174  00179A  090F               	iorlw	15
  2175  00179C  6FE2               	movwf	226,b	;volatile
  2176                           
  2177                           ; BSR set to: 14
  2178                           ;CAN.H: 26: RXF0EIDL = 0;
  2179  00179E  6BE3               	clrf	227,b	;volatile
  2180                           
  2181                           ; BSR set to: 14
  2182                           ;CAN.H: 27: RXF0EIDL = 0xF0|0x0f;
  2183  0017A0  69E3               	setf	227,b	;volatile
  2184                           
  2185                           ; BSR set to: 14
  2186                           ;CAN.H: 31: RXF1SIDH = RXF0SIDH;
  2187  0017A2  CEE0 FEE4          	movff	3808,3812	;volatile
  2188                           
  2189                           ; BSR set to: 14
  2190                           ;CAN.H: 32: RXF1SIDL = RXF0SIDL;
  2191  0017A6  CEE1 FEE5          	movff	3809,3813	;volatile
  2192                           
  2193                           ; BSR set to: 14
  2194                           ;CAN.H: 33: RXF1EIDH = RXF0EIDH;
  2195  0017AA  CEE2 FEE6          	movff	3810,3814	;volatile
  2196                           
  2197                           ; BSR set to: 14
  2198                           ;CAN.H: 34: RXF1EIDL = RXF0EIDL;
  2199  0017AE  CEE3 FEE7          	movff	3811,3815	;volatile
  2200                           
  2201                           ; BSR set to: 14
  2202                           ;CAN.H: 39: RXF2SIDH = RXF0SIDH;
  2203  0017B2  CEE0 FEE8          	movff	3808,3816	;volatile
  2204                           
  2205                           ; BSR set to: 14
  2206                           ;CAN.H: 40: RXF2SIDL = RXF0SIDL;
  2207  0017B6  CEE1 FEE9          	movff	3809,3817	;volatile
  2208                           
  2209                           ; BSR set to: 14
  2210                           ;CAN.H: 41: RXF2EIDH = RXF0EIDH;
  2211  0017BA  CEE2 FEEA          	movff	3810,3818	;volatile
  2212                           
  2213                           ; BSR set to: 14
  2214                           ;CAN.H: 42: RXF2EIDL = RXF0EIDL;
  2215  0017BE  CEE3 FEEB          	movff	3811,3819	;volatile
  2216                           
  2217                           ; BSR set to: 14
  2218                           ;CAN.H: 46: RXF3SIDH = RXF0SIDH;
  2219  0017C2  CEE0 FEEC          	movff	3808,3820	;volatile
  2220                           
  2221                           ; BSR set to: 14
  2222                           ;CAN.H: 47: RXF3SIDL = RXF0SIDL;
  2223  0017C6  CEE1 FEED          	movff	3809,3821	;volatile
  2224                           
  2225                           ; BSR set to: 14
  2226                           ;CAN.H: 48: RXF3EIDH = RXF0EIDH;
  2227  0017CA  CEE2 FEEE          	movff	3810,3822	;volatile
  2228                           
  2229                           ; BSR set to: 14
  2230                           ;CAN.H: 49: RXF3EIDL = RXF0EIDL;
  2231  0017CE  CEE3 FEEF          	movff	3811,3823	;volatile
  2232                           
  2233                           ; BSR set to: 14
  2234                           ;CAN.H: 53: RXF4SIDH = 0x68;
  2235  0017D2  0E68               	movlw	104
  2236  0017D4  6FF0               	movwf	240,b	;volatile
  2237                           
  2238                           ; BSR set to: 14
  2239                           ;CAN.H: 54: RXF4SIDL = 0x6a;
  2240  0017D6  0E6A               	movlw	106
  2241  0017D8  6FF1               	movwf	241,b	;volatile
  2242                           
  2243                           ; BSR set to: 14
  2244                           ;CAN.H: 55: RXF4EIDH = 0x0f;
  2245  0017DA  0E0F               	movlw	15
  2246  0017DC  6FF2               	movwf	242,b	;volatile
  2247                           
  2248                           ; BSR set to: 14
  2249                           ;CAN.H: 56: RXF4EIDL = 0xff;
  2250  0017DE  69F3               	setf	243,b	;volatile
  2251                           
  2252                           ; BSR set to: 14
  2253                           ;CAN.H: 59: RXF5SIDH = RXF0SIDH;
  2254  0017E0  CEE0 FEF4          	movff	3808,3828	;volatile
  2255                           
  2256                           ; BSR set to: 14
  2257                           ;CAN.H: 60: RXF5SIDL = RXF0SIDL;
  2258  0017E4  CEE1 FEF5          	movff	3809,3829	;volatile
  2259                           
  2260                           ; BSR set to: 14
  2261                           ;CAN.H: 61: RXF5EIDH = RXF0EIDH;
  2262  0017E8  CEE2 FEF6          	movff	3810,3830	;volatile
  2263                           
  2264                           ; BSR set to: 14
  2265                           ;CAN.H: 62: RXF5EIDL = RXF0EIDL;
  2266  0017EC  CEE3 FEF7          	movff	3811,3831	;volatile
  2267                           
  2268                           ; BSR set to: 14
  2269                           ;CAN.H: 65: RXM0SIDH = 0x1f;
  2270  0017F0  0E1F               	movlw	31
  2271  0017F2  6FF8               	movwf	248,b	;volatile
  2272                           
  2273                           ; BSR set to: 14
  2274                           ;CAN.H: 66: RXM0SIDL = 0x83;
  2275  0017F4  0E83               	movlw	131
  2276  0017F6  6FF9               	movwf	249,b	;volatile
  2277                           
  2278                           ; BSR set to: 14
  2279                           ;CAN.H: 67: RXM0EIDH = 0xf0;
  2280  0017F8  0EF0               	movlw	240
  2281  0017FA  6FFA               	movwf	250,b	;volatile
  2282                           
  2283                           ; BSR set to: 14
  2284                           ;CAN.H: 68: RXM0EIDL = 0x00;
  2285  0017FC  6BFB               	clrf	251,b	;volatile
  2286                           
  2287                           ; BSR set to: 14
  2288                           ;CAN.H: 71: RXM1SIDH = 0x1f;
  2289  0017FE  0E1F               	movlw	31
  2290  001800  6FFC               	movwf	252,b	;volatile
  2291                           
  2292                           ; BSR set to: 14
  2293                           ;CAN.H: 72: RXM1SIDL = 0xe3;
  2294  001802  0EE3               	movlw	227
  2295  001804  6FFD               	movwf	253,b	;volatile
  2296                           
  2297                           ; BSR set to: 14
  2298                           ;CAN.H: 73: RXM1EIDH = 0xf0;
  2299  001806  0EF0               	movlw	240
  2300  001808  6FFE               	movwf	254,b	;volatile
  2301                           
  2302                           ; BSR set to: 14
  2303                           ;CAN.H: 74: RXM1EIDL = 0x00;
  2304  00180A  6BFF               	clrf	255,b	;volatile
  2305                           
  2306                           ; BSR set to: 14
  2307  00180C  0012               	return	
  2308  00180E                     __end_of_CANFilterSet:
  2309                           	opt stack 0
  2310                           tblptru	equ	0xFF8
  2311                           tblptrh	equ	0xFF7
  2312                           tblptrl	equ	0xFF6
  2313                           tablat	equ	0xFF5
  2314                           prodh	equ	0xFF4
  2315                           prodl	equ	0xFF3
  2316                           intcon	equ	0xFF2
  2317                           postinc0	equ	0xFEE
  2318                           wreg	equ	0xFE8
  2319                           indf1	equ	0xFE7
  2320                           postdec1	equ	0xFE5
  2321                           fsr1h	equ	0xFE2
  2322                           fsr1l	equ	0xFE1
  2323                           indf2	equ	0xFDF
  2324                           postinc2	equ	0xFDE
  2325                           postdec2	equ	0xFDD
  2326                           fsr2h	equ	0xFDA
  2327                           fsr2l	equ	0xFD9
  2328                           status	equ	0xFD8
  2329                           
  2330 ;; *************** function _CANErrClr *****************
  2331 ;; Defined at:
  2332 ;;		line 80 in file "G:\working\YellowFlashingController\CAN.H"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;		None
  2337 ;; Return value:  Size  Location     Type
  2338 ;;		None               void
  2339 ;; Registers used:
  2340 ;;		None
  2341 ;; Tracked objects:
  2342 ;;		On entry : F/E
  2343 ;;		On exit  : F/E
  2344 ;;		Unchanged: FFFFFFF0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2350 ;;Total ram usage:        0 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:    4
  2353 ;; This function calls:
  2354 ;;		Nothing
  2355 ;; This function is called by:
  2356 ;;		_CANInit
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text6
  2361  001ED2                     __ptext6:
  2362                           	opt stack 0
  2363  001ED2                     _CANErrClr:
  2364                           	opt stack 24
  2365                           
  2366                           ; BSR set to: 14
  2367                           
  2368                           ; BSR set to: 14
  2369  001ED2  0012               	return	
  2370  001ED4                     __end_of_CANErrClr:
  2371                           	opt stack 0
  2372                           tblptru	equ	0xFF8
  2373                           tblptrh	equ	0xFF7
  2374                           tblptrl	equ	0xFF6
  2375                           tablat	equ	0xFF5
  2376                           prodh	equ	0xFF4
  2377                           prodl	equ	0xFF3
  2378                           intcon	equ	0xFF2
  2379                           postinc0	equ	0xFEE
  2380                           wreg	equ	0xFE8
  2381                           indf1	equ	0xFE7
  2382                           postdec1	equ	0xFE5
  2383                           fsr1h	equ	0xFE2
  2384                           fsr1l	equ	0xFE1
  2385                           indf2	equ	0xFDF
  2386                           postinc2	equ	0xFDE
  2387                           postdec2	equ	0xFDD
  2388                           fsr2h	equ	0xFDA
  2389                           fsr2l	equ	0xFD9
  2390                           status	equ	0xFD8
  2391                           
  2392 ;; *************** function _CANSetID *****************
  2393 ;; Defined at:
  2394 ;;		line 89 in file "G:\working\YellowFlashingController\CAN.H"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;  board_addr      1    wreg     unsigned char 
  2397 ;;  f_type          1    0[COMRAM] unsigned char 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  board_addr      1    2[COMRAM] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;		None               void
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0
  2404 ;; Tracked objects:
  2405 ;;		On entry : F/F
  2406 ;;		On exit  : F/F
  2407 ;;		Unchanged: FFFFFFF0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2409 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2412 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2413 ;;Total ram usage:        3 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    4
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_CANInit
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text7
  2424  001BDA                     __ptext7:
  2425                           	opt stack 0
  2426  001BDA                     _CANSetID:
  2427                           	opt stack 24
  2428                           
  2429                           ; BSR set to: 14
  2430                           ;CANSetID@board_addr stored from wreg
  2431  001BDA  CFE8 F003          	movff	wreg,CANSetID@board_addr
  2432                           
  2433                           ; BSR set to: 15
  2434                           ;CAN.H: 91: TXB0SIDH = 0;
  2435  001BDE  6B21               	clrf	33,b	;volatile
  2436                           
  2437                           ; BSR set to: 15
  2438                           ;CAN.H: 92: TXB0SIDH = (f_type<<5)|(board_addr>>1);
  2439  001BE0  C003  F002         	movff	CANSetID@board_addr,??_CANSetID
  2440  001BE4  90D8               	bcf	status,0,c
  2441  001BE6  3202               	rrcf	??_CANSetID,f,c
  2442  001BE8  3801               	swapf	CANSetID@f_type,w,c
  2443  001BEA  46E8               	rlncf	wreg,f,c
  2444  001BEC  0BE0               	andlw	224
  2445  001BEE  1002               	iorwf	??_CANSetID,w,c
  2446  001BF0  6F21               	movwf	33,b	;volatile
  2447                           
  2448                           ; BSR set to: 15
  2449                           ;CAN.H: 93: TXB0SIDL = 0;
  2450  001BF2  6B22               	clrf	34,b	;volatile
  2451                           
  2452                           ;CAN.H: 94: TXB0SIDL = (board_addr<<7)|(0x00<<5)|0x08|(0x10>>4);
  2453  001BF4  4003               	rrncf	CANSetID@board_addr,w,c
  2454  001BF6  0B80               	andlw	128
  2455  001BF8  0909               	iorlw	9
  2456  001BFA  6F22               	movwf	34,b	;volatile
  2457                           
  2458                           ; BSR set to: 15
  2459                           ;CAN.H: 95: TXB0EIDH = 0;
  2460  001BFC  6B23               	clrf	35,b	;volatile
  2461                           
  2462                           ; BSR set to: 15
  2463                           ;CAN.H: 96: TXB0EIDH = (0x10<<4)|0x0f;
  2464  001BFE  0E0F               	movlw	15
  2465  001C00  6F23               	movwf	35,b	;volatile
  2466                           
  2467                           ; BSR set to: 15
  2468                           ;CAN.H: 97: TXB0EIDL = 0;
  2469  001C02  6B24               	clrf	36,b	;volatile
  2470                           
  2471                           ; BSR set to: 15
  2472                           ;CAN.H: 98: TXB0EIDL = 0xF0|0x0f;
  2473  001C04  6924               	setf	36,b	;volatile
  2474                           
  2475                           ; BSR set to: 15
  2476                           ;CAN.H: 101: TXB1SIDH = TXB0SIDH;
  2477  001C06  CF21 FF11          	movff	3873,3857	;volatile
  2478                           
  2479                           ; BSR set to: 15
  2480                           ;CAN.H: 102: TXB1SIDL = TXB0SIDL;
  2481  001C0A  CF22 FF12          	movff	3874,3858	;volatile
  2482                           
  2483                           ; BSR set to: 15
  2484                           ;CAN.H: 103: TXB1EIDH = TXB0EIDH;
  2485  001C0E  CF23 FF13          	movff	3875,3859	;volatile
  2486                           
  2487                           ; BSR set to: 15
  2488                           ;CAN.H: 104: TXB1EIDL = TXB0EIDL;
  2489  001C12  CF24 FF14          	movff	3876,3860	;volatile
  2490                           
  2491                           ; BSR set to: 15
  2492                           ;CAN.H: 107: TXB2SIDH = TXB0SIDH;
  2493  001C16  CF21 FF01          	movff	3873,3841	;volatile
  2494                           
  2495                           ; BSR set to: 15
  2496                           ;CAN.H: 108: TXB2SIDL = TXB0SIDL;
  2497  001C1A  CF22 FF02          	movff	3874,3842	;volatile
  2498                           
  2499                           ; BSR set to: 15
  2500                           ;CAN.H: 109: TXB2EIDH = TXB0EIDH;
  2501  001C1E  CF23 FF03          	movff	3875,3843	;volatile
  2502                           
  2503                           ; BSR set to: 15
  2504                           ;CAN.H: 110: TXB2EIDL = TXB0EIDL;
  2505  001C22  CF24 FF04          	movff	3876,3844	;volatile
  2506                           
  2507                           ; BSR set to: 15
  2508  001C26  0012               	return	
  2509  001C28                     __end_of_CANSetID:
  2510                           	opt stack 0
  2511                           tblptru	equ	0xFF8
  2512                           tblptrh	equ	0xFF7
  2513                           tblptrl	equ	0xFF6
  2514                           tablat	equ	0xFF5
  2515                           prodh	equ	0xFF4
  2516                           prodl	equ	0xFF3
  2517                           intcon	equ	0xFF2
  2518                           postinc0	equ	0xFEE
  2519                           wreg	equ	0xFE8
  2520                           indf1	equ	0xFE7
  2521                           postdec1	equ	0xFE5
  2522                           fsr1h	equ	0xFE2
  2523                           fsr1l	equ	0xFE1
  2524                           indf2	equ	0xFDF
  2525                           postinc2	equ	0xFDE
  2526                           postdec2	equ	0xFDD
  2527                           fsr2h	equ	0xFDA
  2528                           fsr2l	equ	0xFD9
  2529                           status	equ	0xFD8
  2530                           
  2531 ;; *************** function _delayms *****************
  2532 ;; Defined at:
  2533 ;;		line 108 in file "G:\working\YellowFlashingController\mcu.h"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  ms              2    4[COMRAM] unsigned int 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  i               2    6[COMRAM] unsigned int 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;		None               void
  2540 ;; Registers used:
  2541 ;;		wreg, status,2, status,0, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: FFFFFFFF/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2548 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2550 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2551 ;;Total ram usage:        4 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:    5
  2554 ;; This function calls:
  2555 ;;		_delayus
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text8
  2562  001E2A                     __ptext8:
  2563                           	opt stack 0
  2564  001E2A                     _delayms:
  2565                           	opt stack 25
  2566                           
  2567                           ;mcu.h: 109: unsigned int i;
  2568                           ;mcu.h: 112: for(i=0;i<ms;i++)
  2569                           
  2570                           ; BSR set to: 15
  2571  001E2A  6A07               	clrf	delayms@i,c
  2572  001E2C  6A08               	clrf	delayms@i+1,c
  2573  001E2E  D008               	goto	l2815
  2574  001E30                     l2811:
  2575                           
  2576                           ;mcu.h: 113: {
  2577                           ;mcu.h: 114: delayus(997);
  2578  001E30  0E03               	movlw	3
  2579  001E32  6E02               	movwf	?_delayus+1,c
  2580  001E34  0EE5               	movlw	229
  2581  001E36  6E01               	movwf	?_delayus,c
  2582  001E38  EC38  F00F         	call	_delayus	;wreg free
  2583  001E3C  4A07               	infsnz	delayms@i,f,c
  2584  001E3E  2A08               	incf	delayms@i+1,f,c
  2585  001E40                     l2815:
  2586  001E40  5005               	movf	delayms@ms,w,c
  2587  001E42  5C07               	subwf	delayms@i,w,c
  2588  001E44  5006               	movf	delayms@ms+1,w,c
  2589  001E46  5808               	subwfb	delayms@i+1,w,c
  2590  001E48  B0D8               	btfsc	status,0,c
  2591  001E4A  0012               	return	
  2592  001E4C  D7F1               	goto	l2811
  2593  001E4E                     __end_of_delayms:
  2594                           	opt stack 0
  2595                           tblptru	equ	0xFF8
  2596                           tblptrh	equ	0xFF7
  2597                           tblptrl	equ	0xFF6
  2598                           tablat	equ	0xFF5
  2599                           prodh	equ	0xFF4
  2600                           prodl	equ	0xFF3
  2601                           intcon	equ	0xFF2
  2602                           postinc0	equ	0xFEE
  2603                           wreg	equ	0xFE8
  2604                           indf1	equ	0xFE7
  2605                           postdec1	equ	0xFE5
  2606                           fsr1h	equ	0xFE2
  2607                           fsr1l	equ	0xFE1
  2608                           indf2	equ	0xFDF
  2609                           postinc2	equ	0xFDE
  2610                           postdec2	equ	0xFDD
  2611                           fsr2h	equ	0xFDA
  2612                           fsr2l	equ	0xFD9
  2613                           status	equ	0xFD8
  2614                           
  2615 ;; *************** function _delayus *****************
  2616 ;; Defined at:
  2617 ;;		line 92 in file "G:\working\YellowFlashingController\mcu.h"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  us              2    0[COMRAM] unsigned int 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  i               2    2[COMRAM] unsigned int 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;		None               void
  2624 ;; Registers used:
  2625 ;;		wreg, status,2, status,0
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: FFFFFFFF/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2634 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2635 ;;Total ram usage:        4 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    4
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_delayms
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text9
  2646  001E70                     __ptext9:
  2647                           	opt stack 0
  2648  001E70                     _delayus:
  2649                           	opt stack 25
  2650                           
  2651                           ;mcu.h: 94: unsigned int i;
  2652                           ;mcu.h: 95: us=us-5;
  2653  001E70  0EFB               	movlw	251
  2654  001E72  2601               	addwf	delayus@us,f,c
  2655  001E74  0EFF               	movlw	255
  2656  001E76  2202               	addwfc	delayus@us+1,f,c
  2657                           
  2658                           ;mcu.h: 97: for(i=0;i<us;i++)
  2659  001E78  6A03               	clrf	delayus@i,c
  2660  001E7A  6A04               	clrf	delayus@i+1,c
  2661  001E7C  D002               	goto	l2807
  2662  001E7E                     l2805:
  2663                           
  2664                           ;mcu.h: 98: {
  2665                           ;mcu.h: 99: ;
  2666  001E7E  4A03               	infsnz	delayus@i,f,c
  2667  001E80  2A04               	incf	delayus@i+1,f,c
  2668  001E82                     l2807:
  2669  001E82  5001               	movf	delayus@us,w,c
  2670  001E84  5C03               	subwf	delayus@i,w,c
  2671  001E86  5002               	movf	delayus@us+1,w,c
  2672  001E88  5804               	subwfb	delayus@i+1,w,c
  2673  001E8A  B0D8               	btfsc	status,0,c
  2674  001E8C  0012               	return	
  2675  001E8E  D7F7               	goto	l2805
  2676  001E90                     __end_of_delayus:
  2677                           	opt stack 0
  2678                           tblptru	equ	0xFF8
  2679                           tblptrh	equ	0xFF7
  2680                           tblptrl	equ	0xFF6
  2681                           tablat	equ	0xFF5
  2682                           prodh	equ	0xFF4
  2683                           prodl	equ	0xFF3
  2684                           intcon	equ	0xFF2
  2685                           postinc0	equ	0xFEE
  2686                           wreg	equ	0xFE8
  2687                           indf1	equ	0xFE7
  2688                           postdec1	equ	0xFE5
  2689                           fsr1h	equ	0xFE2
  2690                           fsr1l	equ	0xFE1
  2691                           indf2	equ	0xFDF
  2692                           postinc2	equ	0xFDE
  2693                           postdec2	equ	0xFDD
  2694                           fsr2h	equ	0xFDA
  2695                           fsr2l	equ	0xFD9
  2696                           status	equ	0xFD8
  2697                           
  2698 ;; *************** function _PORTInit *****************
  2699 ;; Defined at:
  2700 ;;		line 326 in file "G:\working\YellowFlashingController\YellowFlash.C"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;		None               void
  2707 ;; Registers used:
  2708 ;;		wreg, status,2
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : F/F
  2712 ;;		Unchanged: FFFFFFF0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2718 ;;Total ram usage:        0 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    4
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_main
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text10
  2729  001E90                     __ptext10:
  2730                           	opt stack 0
  2731  001E90                     _PORTInit:
  2732                           	opt stack 26
  2733                           
  2734                           ;YellowFlash.C: 330: TRISB = 0xe0;
  2735  001E90  0EE0               	movlw	224
  2736  001E92  6E93               	movwf	3987,c	;volatile
  2737                           
  2738                           ;YellowFlash.C: 331: TRISC = 0x8f;
  2739  001E94  0E8F               	movlw	143
  2740  001E96  6E94               	movwf	3988,c	;volatile
  2741                           
  2742                           ;YellowFlash.C: 332: TRISD = 0xf3;
  2743  001E98  0EF3               	movlw	243
  2744  001E9A  6E95               	movwf	3989,c	;volatile
  2745                           
  2746                           ;YellowFlash.C: 334: ANCON1 = 0X00;
  2747  001E9C  010F               	movlb	15	; () banked
  2748  001E9E  6B5C               	clrf	92,b	;volatile
  2749                           
  2750                           ; BSR set to: 15
  2751                           ;YellowFlash.C: 335: RC5=0;
  2752  001EA0  9A82               	bcf	3970,5,c	;volatile
  2753                           
  2754                           ; BSR set to: 15
  2755                           ;YellowFlash.C: 336: RC6=1;
  2756  001EA2  8C82               	bsf	3970,6,c	;volatile
  2757                           
  2758                           ; BSR set to: 15
  2759                           ;YellowFlash.C: 337: RC4=1;
  2760  001EA4  8882               	bsf	3970,4,c	;volatile
  2761                           
  2762                           ; BSR set to: 15
  2763                           ;YellowFlash.C: 338: RD3=1;
  2764  001EA6  8683               	bsf	3971,3,c	;volatile
  2765                           
  2766                           ; BSR set to: 15
  2767  001EA8  0012               	return	
  2768  001EAA                     __end_of_PORTInit:
  2769                           	opt stack 0
  2770                           tblptru	equ	0xFF8
  2771                           tblptrh	equ	0xFF7
  2772                           tblptrl	equ	0xFF6
  2773                           tablat	equ	0xFF5
  2774                           prodh	equ	0xFF4
  2775                           prodl	equ	0xFF3
  2776                           intcon	equ	0xFF2
  2777                           postinc0	equ	0xFEE
  2778                           wreg	equ	0xFE8
  2779                           indf1	equ	0xFE7
  2780                           postdec1	equ	0xFE5
  2781                           fsr1h	equ	0xFE2
  2782                           fsr1l	equ	0xFE1
  2783                           indf2	equ	0xFDF
  2784                           postinc2	equ	0xFDE
  2785                           postdec2	equ	0xFDD
  2786                           fsr2h	equ	0xFDA
  2787                           fsr2l	equ	0xFD9
  2788                           status	equ	0xFD8
  2789                           
  2790 ;; *************** function _IntManager *****************
  2791 ;; Defined at:
  2792 ;;		line 372 in file "G:\working\YellowFlashingController\YellowFlash.C"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;		None
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;		None               void
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0
  2801 ;; Tracked objects:
  2802 ;;		On entry : F/F
  2803 ;;		On exit  : F/F
  2804 ;;		Unchanged: FFFFFFF0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2810 ;;Total ram usage:        0 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    4
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_main
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text11
  2821  001E04                     __ptext11:
  2822                           	opt stack 0
  2823  001E04                     _IntManager:
  2824                           	opt stack 26
  2825                           
  2826                           ; BSR set to: 15
  2827                           ;YellowFlash.C: 374: INTCON |= 0xc0;
  2828                           
  2829                           ; BSR set to: 15
  2830  001E04  0EC0               	movlw	192
  2831  001E06  12F2               	iorwf	intcon,f,c	;volatile
  2832                           
  2833                           ; BSR set to: 15
  2834                           ;YellowFlash.C: 378: TMR0IE = 1;
  2835  001E08  8AF2               	bsf	intcon,5,c	;volatile
  2836                           
  2837                           ; BSR set to: 15
  2838                           ;YellowFlash.C: 379: TMR0IF = 0;
  2839  001E0A  94F2               	bcf	intcon,2,c	;volatile
  2840                           
  2841                           ; BSR set to: 15
  2842                           ;YellowFlash.C: 380: T08BIT = 0;
  2843  001E0C  9CD5               	bcf	4053,6,c	;volatile
  2844                           
  2845                           ; BSR set to: 15
  2846                           ;YellowFlash.C: 381: T0CS = 0;
  2847  001E0E  9AD5               	bcf	4053,5,c	;volatile
  2848                           
  2849                           ; BSR set to: 15
  2850                           ;YellowFlash.C: 383: TMR0H = 0xd8;
  2851  001E10  0ED8               	movlw	216
  2852  001E12  6ED7               	movwf	4055,c	;volatile
  2853                           
  2854                           ; BSR set to: 15
  2855                           ;YellowFlash.C: 384: TMR0L = 0xef;
  2856  001E14  0EEF               	movlw	239
  2857  001E16  6ED6               	movwf	4054,c	;volatile
  2858                           
  2859                           ; BSR set to: 15
  2860                           ;YellowFlash.C: 386: TMR0ON = 1;
  2861  001E18  8ED5               	bsf	4053,7,c	;volatile
  2862                           
  2863                           ; BSR set to: 15
  2864                           ;YellowFlash.C: 389: TMR1IE = 1;
  2865  001E1A  809D               	bsf	3997,0,c	;volatile
  2866                           
  2867                           ; BSR set to: 15
  2868                           ;YellowFlash.C: 390: TMR1IF = 0;
  2869  001E1C  909E               	bcf	3998,0,c	;volatile
  2870                           
  2871                           ; BSR set to: 15
  2872                           ;YellowFlash.C: 391: T1CON = 0x00;
  2873  001E1E  6ACD               	clrf	4045,c	;volatile
  2874                           
  2875                           ; BSR set to: 15
  2876                           ;YellowFlash.C: 393: TMR1H = 0x3c;
  2877  001E20  0E3C               	movlw	60
  2878  001E22  6ECF               	movwf	4047,c	;volatile
  2879                           
  2880                           ; BSR set to: 15
  2881                           ;YellowFlash.C: 394: TMR1L = 0xaf;
  2882  001E24  0EAF               	movlw	175
  2883  001E26  6ECE               	movwf	4046,c	;volatile
  2884                           
  2885                           ; BSR set to: 15
  2886  001E28  0CAF               	retlw	175
  2887  001E2A                     __end_of_IntManager:
  2888                           	opt stack 0
  2889                           tblptru	equ	0xFF8
  2890                           tblptrh	equ	0xFF7
  2891                           tblptrl	equ	0xFF6
  2892                           tablat	equ	0xFF5
  2893                           prodh	equ	0xFF4
  2894                           prodl	equ	0xFF3
  2895                           intcon	equ	0xFF2
  2896                           postinc0	equ	0xFEE
  2897                           wreg	equ	0xFE8
  2898                           indf1	equ	0xFE7
  2899                           postdec1	equ	0xFE5
  2900                           fsr1h	equ	0xFE2
  2901                           fsr1l	equ	0xFE1
  2902                           indf2	equ	0xFDF
  2903                           postinc2	equ	0xFDE
  2904                           postdec2	equ	0xFDD
  2905                           fsr2h	equ	0xFDA
  2906                           fsr2l	equ	0xFD9
  2907                           status	equ	0xFD8
  2908                           
  2909 ;; *************** function _CANDATAAnalyzing *****************
  2910 ;; Defined at:
  2911 ;;		line 573 in file "G:\working\YellowFlashingController\YellowFlash.C"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  id              1    wreg     PTR unsigned char 
  2914 ;;		 -> CANRid(4), 
  2915 ;;  dat             1   52[COMRAM] PTR unsigned char 
  2916 ;;		 -> CANRdata(8), 
  2917 ;;  dlc             1   53[COMRAM] unsigned char 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  id              1   58[COMRAM] PTR unsigned char 
  2920 ;;		 -> CANRid(4), 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;		None               void
  2923 ;; Registers used:
  2924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : F/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2931 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2932 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2933 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2934 ;;Total ram usage:        7 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    8
  2937 ;; This function calls:
  2938 ;;		_CANSendConfirm
  2939 ;;		_CANSendID
  2940 ;;		_CANWriteID
  2941 ;;		_EEPROMRead
  2942 ;;		_CANSend
  2943 ;;		_YFlashNewConfigure
  2944 ;;		_Read_YFlash_CFG
  2945 ;;		_CANReadVersion
  2946 ;; This function is called by:
  2947 ;;		_main
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           	psect	text12
  2952  0010EE                     __ptext12:
  2953                           	opt stack 0
  2954  0010EE                     _CANDATAAnalyzing:
  2955                           	opt stack 22
  2956                           
  2957                           ; BSR set to: 15
  2958                           ;CANDATAAnalyzing@id stored from wreg
  2959  0010EE  CFE8 F03B          	movff	wreg,CANDATAAnalyzing@id
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;YellowFlash.C: 580: switch (((dat[0] & 0xc0)>>6))
  2963  0010F2  D009               	goto	l3035
  2964  0010F4                     l561:
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;YellowFlash.C: 583: f_r_mod = 0x00;
  2968  0010F4  6A44               	clrf	_f_r_mod,c
  2969                           
  2970                           ;YellowFlash.C: 584: break;
  2971  0010F6  D022               	goto	l3037
  2972  0010F8                     l3027:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;YellowFlash.C: 586: f_r_mod = 0x01;
  2976  0010F8  0E01               	movlw	1
  2977  0010FA  D003               	goto	L4
  2978  0010FC                     l3029:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;YellowFlash.C: 589: f_r_mod = 0x02;
  2982  0010FC  0E02               	movlw	2
  2983  0010FE  D001               	goto	L4
  2984  001100                     l3031:
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;YellowFlash.C: 592: f_r_mod = 0x03;
  2988  001100  0E03               	movlw	3
  2989  001102                     L4:
  2990  001102  6E44               	movwf	_f_r_mod,c
  2991                           
  2992                           ;YellowFlash.C: 593: break;
  2993  001104  D01B               	goto	l3037
  2994  001106                     l3035:
  2995                           
  2996                           ; BSR set to: 0
  2997  001106  5035               	movf	CANDATAAnalyzing@dat,w,c
  2998  001108  6ED9               	movwf	fsr2l,c
  2999  00110A  6ADA               	clrf	fsr2h,c
  3000  00110C  50DF               	movf	indf2,w,c
  3001  00110E  6E37               	movwf	??_CANDATAAnalyzing& (0+255),c
  3002  001110  0E06               	movlw	6
  3003  001112  6E38               	movwf	(??_CANDATAAnalyzing+1)& (0+255),c
  3004  001114                     u1135:
  3005  001114  90D8               	bcf	status,0,c
  3006  001116  3237               	rrcf	??_CANDATAAnalyzing,f,c
  3007  001118  2E38               	decfsz	(??_CANDATAAnalyzing+1)& (0+255),f,c
  3008  00111A  D7FC               	goto	u1135
  3009  00111C  0E03               	movlw	3
  3010  00111E  1637               	andwf	??_CANDATAAnalyzing,f,c
  3011  001120  C037  F039         	movff	??_CANDATAAnalyzing,??_CANDATAAnalyzing+2
  3012  001124  6A3A               	clrf	(??_CANDATAAnalyzing+3)& (0+255),c
  3013                           
  3014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3015                           ; Switch size 1, requested type "space"
  3016                           ; Number of cases is 1, Range of values is 0 to 0
  3017                           ; switch strategies available:
  3018                           ; Name         Instructions Cycles
  3019                           ; simple_byte            4     3 (average)
  3020                           ;	Chosen strategy is simple_byte
  3021  001126  503A               	movf	??_CANDATAAnalyzing+3,w,c
  3022  001128  E1E5               	bnz	l561
  3023                           
  3024                           ; BSR set to: 0
  3025                           ; Switch size 1, requested type "space"
  3026                           ; Number of cases is 4, Range of values is 0 to 3
  3027                           ; switch strategies available:
  3028                           ; Name         Instructions Cycles
  3029                           ; simple_byte           13     7 (average)
  3030                           ;	Chosen strategy is simple_byte
  3031  00112A  5039               	movf	??_CANDATAAnalyzing+2,w,c
  3032  00112C  E0E3               	bz	l561
  3033  00112E  0A01               	xorlw	1	; case 1
  3034  001130  E0E3               	bz	l3027
  3035  001132  0A03               	xorlw	3	; case 2
  3036  001134  E0E3               	bz	l3029
  3037  001136  0A01               	xorlw	1	; case 3
  3038  001138  E0E3               	bz	l3031
  3039  00113A  D7DC               	goto	l561
  3040  00113C                     l3037:
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;YellowFlash.C: 600: if(((id[1]>>5)&0x03)==0x03)
  3044  00113C  503B               	movf	CANDATAAnalyzing@id,w,c
  3045  00113E  6ED9               	movwf	fsr2l,c
  3046  001140  6ADA               	clrf	fsr2h,c
  3047  001142  2AD9               	incf	fsr2l,f,c
  3048  001144  6ADA               	clrf	fsr2h,c
  3049  001146  50DF               	movf	indf2,w,c
  3050  001148  6E37               	movwf	??_CANDATAAnalyzing& (0+255),c
  3051  00114A  0E05               	movlw	5
  3052  00114C  6E38               	movwf	(??_CANDATAAnalyzing+1)& (0+255),c
  3053  00114E                     u1145:
  3054  00114E  90D8               	bcf	status,0,c
  3055  001150  3237               	rrcf	??_CANDATAAnalyzing,f,c
  3056  001152  2E38               	decfsz	(??_CANDATAAnalyzing+1)& (0+255),f,c
  3057  001154  D7FC               	goto	u1145
  3058  001156  5037               	movf	??_CANDATAAnalyzing,w,c
  3059  001158  0B03               	andlw	3
  3060  00115A  0A03               	xorlw	3
  3061  00115C  E10F               	bnz	l3059
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;YellowFlash.C: 601: {
  3065                           ;YellowFlash.C: 602: if(force_status)
  3066  00115E  5045               	movf	_force_status,w,c
  3067  001160  A4D8               	btfss	status,2,c
  3068  001162  0012               	return	
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;YellowFlash.C: 604: else
  3072                           ;YellowFlash.C: 605: {
  3073                           ;YellowFlash.C: 606: heartbeat=0;
  3074  001164  6A46               	clrf	_heartbeat,c
  3075                           
  3076                           ;YellowFlash.C: 607: TMR0ON = 1;
  3077  001166  8ED5               	bsf	4053,7,c	;volatile
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;YellowFlash.C: 608: T1CON |= 0x00;
  3081  001168  50CD               	movf	4045,w,c	;volatile
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;YellowFlash.C: 609: turnoff=0x00;
  3085  00116A  6A5C               	clrf	_turnoff,c
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;YellowFlash.C: 610: switchmode=0;
  3089  00116C  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  3090  00116E  905F               	bcf	_switchmode/(0+8),_switchmode& (0+7),c
  3091                           
  3092                           ;YellowFlash.C: 611: yflash_status=0x00;
  3093  001170  6A4C               	clrf	_yflash_status,c
  3094                           
  3095                           ;YellowFlash.C: 612: RC6=1;
  3096  001172  8C82               	bsf	3970,6,c	;volatile
  3097                           
  3098                           ;YellowFlash.C: 613: RC4=1;
  3099  001174  8882               	bsf	3970,4,c	;volatile
  3100                           
  3101                           ;YellowFlash.C: 614: RD3=1;
  3102  001176  8683               	bsf	3971,3,c	;volatile
  3103                           
  3104                           ;YellowFlash.C: 615: RD2=0;
  3105  001178  9483               	bcf	3971,2,c	;volatile
  3106  00117A  0012               	return	
  3107  00117C                     l3059:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;YellowFlash.C: 619: else
  3111                           ;YellowFlash.C: 620: {
  3112                           ;YellowFlash.C: 623: if((f_r_mod ==0x02)&&((dat[0] & 0x3f)!=0x02))
  3113  00117C  5044               	movf	_f_r_mod,w,c
  3114  00117E  0A02               	xorlw	2
  3115  001180  E171               	bnz	l3163
  3116                           
  3117                           ; BSR set to: 0
  3118  001182  5035               	movf	CANDATAAnalyzing@dat,w,c
  3119  001184  6ED9               	movwf	fsr2l,c
  3120  001186  6ADA               	clrf	fsr2h,c
  3121  001188  50DF               	movf	indf2,w,c
  3122  00118A  0B3F               	andlw	63
  3123  00118C  0A02               	xorlw	2
  3124  00118E  E06A               	bz	l3163
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;YellowFlash.C: 624: {
  3128                           ;YellowFlash.C: 625: CANSendConfirm();
  3129  001190  ECAC  F00E         	call	_CANSendConfirm	;wreg free
  3130  001194  D067               	goto	l3163
  3131  001196                     l3065:
  3132                           
  3133                           ;YellowFlash.C: 633: if(f_r_mod ==0x01)
  3134  001196  0444               	decf	_f_r_mod,w,c
  3135  001198  A4D8               	btfss	status,2,c
  3136  00119A  0012               	return	
  3137                           
  3138                           ;YellowFlash.C: 634: {
  3139                           ;YellowFlash.C: 635: CANSendID(0X00);
  3140  00119C  0E00               	movlw	0
  3141  00119E  EF75  F00E         	goto	_CANSendID
  3142  0011A2                     l3069:
  3143                           
  3144                           ;YellowFlash.C: 640: CANWriteID(f_r_mod);
  3145  0011A2  5044               	movf	_f_r_mod,w,c
  3146  0011A4  EFC4  F00E         	goto	_CANWriteID
  3147  0011A8                     l3071:
  3148                           
  3149                           ;YellowFlash.C: 644: CANSdlc=4;
  3150  0011A8  0E04               	movlw	4
  3151  0011AA  6E5B               	movwf	_CANSdlc,c
  3152                           
  3153                           ;YellowFlash.C: 645: CANSdata[0]=0x02;
  3154  0011AC  0E02               	movlw	2
  3155  0011AE  6E4D               	movwf	_CANSdata,c
  3156                           
  3157                           ;YellowFlash.C: 646: eeprom_addr = 0x0009;
  3158  0011B0  6A56               	clrf	_eeprom_addr+1,c
  3159  0011B2  0E09               	movlw	9
  3160  0011B4  6E55               	movwf	_eeprom_addr,c
  3161                           
  3162                           ;YellowFlash.C: 647: eeprom_num = 2;
  3163  0011B6  0E02               	movlw	2
  3164  0011B8  6E5E               	movwf	_eeprom_num,c
  3165                           
  3166                           ;YellowFlash.C: 648: EEPROMRead(&eeprom_addr,&eeprom_num,(CANSdata+1));
  3167  0011BA  0E5E               	movlw	low _eeprom_num
  3168  0011BC  6E01               	movwf	?_EEPROMRead,c
  3169  0011BE  0E4E               	movlw	low (_CANSdata+1)
  3170  0011C0  6E02               	movwf	?_EEPROMRead+1,c
  3171  0011C2  0E55               	movlw	_eeprom_addr& (0+255)
  3172  0011C4  EC39  F00E         	call	_EEPROMRead
  3173  0011C8  D02D               	goto	L5
  3174  0011CA                     l3079:
  3175                           
  3176                           ;YellowFlash.C: 655: YFlashNewConfigure();
  3177  0011CA  ECFA  F00A         	call	_YFlashNewConfigure	;wreg free
  3178                           
  3179                           ;YellowFlash.C: 657: if(f_r_mod==0x01)
  3180  0011CE  0444               	decf	_f_r_mod,w,c
  3181  0011D0  E10F               	bnz	l3091
  3182                           
  3183                           ;YellowFlash.C: 658: {
  3184                           ;YellowFlash.C: 659: CANSdlc=3;
  3185  0011D2  0E03               	movlw	3
  3186  0011D4  6E5B               	movwf	_CANSdlc,c
  3187                           
  3188                           ;YellowFlash.C: 660: CANSdata[0]=0x03;
  3189  0011D6  6E4D               	movwf	_CANSdata,c
  3190                           
  3191                           ;YellowFlash.C: 661: CANSdata[1]=yflash_CFG[0];
  3192  0011D8  C059  F04E         	movff	_yflash_CFG,_CANSdata+1
  3193                           
  3194                           ;YellowFlash.C: 662: CANSdata[2]=yflash_CFG[1];
  3195  0011DC  C05A  F04F         	movff	_yflash_CFG+1,_CANSdata+2
  3196                           
  3197                           ;YellowFlash.C: 664: CANSend(CANSid,CANSdata,CANSdlc);
  3198  0011E0  0E4D               	movlw	low _CANSdata
  3199  0011E2  6E01               	movwf	?_CANSend,c
  3200  0011E4  C05B  F002         	movff	_CANSdlc,?_CANSend+1
  3201  0011E8  0100               	movlb	0	; () banked
  3202  0011EA  0EEC               	movlw	_CANSid& (0+255)
  3203  0011EC  ECF7  F009         	call	_CANSend
  3204  0011F0                     l3091:
  3205                           
  3206                           ;YellowFlash.C: 665: }
  3207                           ;YellowFlash.C: 667: Read_YFlash_CFG();
  3208  0011F0  EC07  F00D         	call	_Read_YFlash_CFG	;wreg free
  3209                           
  3210                           ;YellowFlash.C: 669: INTCON |= 0xc0;
  3211  0011F4  0EC0               	movlw	192
  3212  0011F6  12F2               	iorwf	intcon,f,c	;volatile
  3213                           
  3214                           ;YellowFlash.C: 671: TMR0IE = 1;
  3215  0011F8  8AF2               	bsf	intcon,5,c	;volatile
  3216                           
  3217                           ;YellowFlash.C: 672: TMR0IF = 0;
  3218  0011FA  94F2               	bcf	intcon,2,c	;volatile
  3219                           
  3220                           ;YellowFlash.C: 673: T08BIT = 0;
  3221  0011FC  9CD5               	bcf	4053,6,c	;volatile
  3222                           
  3223                           ;YellowFlash.C: 674: T0CS = 0;
  3224  0011FE  9AD5               	bcf	4053,5,c	;volatile
  3225                           
  3226                           ;YellowFlash.C: 676: TMR0H = 0xd8;
  3227  001200  0ED8               	movlw	216
  3228  001202  6ED7               	movwf	4055,c	;volatile
  3229                           
  3230                           ;YellowFlash.C: 677: TMR0L = 0xef;
  3231  001204  0EEF               	movlw	239
  3232  001206  6ED6               	movwf	4054,c	;volatile
  3233                           
  3234                           ;YellowFlash.C: 679: TMR0ON = 1;
  3235  001208  8ED5               	bsf	4053,7,c	;volatile
  3236                           
  3237                           ;YellowFlash.C: 681: break;
  3238  00120A  0CEF               	retlw	239
  3239  00120C                     l580:
  3240                           
  3241                           ;YellowFlash.C: 684: yflash_status=CANRdata[1];
  3242  00120C  C0E1  F04C         	movff	_CANRdata+1,_yflash_status
  3243                           
  3244                           ;YellowFlash.C: 685: RD2=1;
  3245  001210  8483               	bsf	3971,2,c	;volatile
  3246                           
  3247                           ;YellowFlash.C: 686: Read_YFlash_CFG();
  3248  001212  EC07  F00D         	call	_Read_YFlash_CFG	;wreg free
  3249                           
  3250                           ;YellowFlash.C: 687: T1CON |= 0x01;
  3251  001216  80CD               	bsf	4045,0,c	;volatile
  3252                           
  3253                           ;YellowFlash.C: 688: turnoff=0x01;
  3254  001218  0E01               	movlw	1
  3255  00121A  6E5C               	movwf	_turnoff,c
  3256                           
  3257                           ;YellowFlash.C: 689: switchmode=1;
  3258  00121C  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  3259  00121E  805F               	bsf	_switchmode/(0+8),_switchmode& (0+7),c
  3260                           
  3261                           ;YellowFlash.C: 690: force_status=0x01;
  3262  001220  6E45               	movwf	_force_status,c
  3263  001222  D014               	goto	L6
  3264  001224                     L5:
  3265                           
  3266                           ;YellowFlash.C: 697: CANSdata[3]=yflash_status;
  3267  001224  C04C  F050         	movff	_yflash_status,_CANSdata+3
  3268                           
  3269                           ;YellowFlash.C: 698: CANSend(CANSid,CANSdata,CANSdlc);
  3270  001228  0E4D               	movlw	low _CANSdata
  3271  00122A  6E01               	movwf	?_CANSend,c
  3272  00122C  C05B  F002         	movff	_CANSdlc,?_CANSend+1
  3273  001230  0EEC               	movlw	_CANSid& (0+255)
  3274  001232  EFF7  F009         	goto	_CANSend
  3275  001236                     l582:
  3276                           
  3277                           ;YellowFlash.C: 703: yflash_status=0x00;
  3278  001236  6A4C               	clrf	_yflash_status,c
  3279                           
  3280                           ;YellowFlash.C: 704: force_status=0x00;
  3281  001238  6A45               	clrf	_force_status,c
  3282                           
  3283                           ;YellowFlash.C: 705: T1CON |= 0x00;
  3284  00123A  50CD               	movf	4045,w,c	;volatile
  3285                           
  3286                           ;YellowFlash.C: 706: TMR0ON = 1;
  3287  00123C  8ED5               	bsf	4053,7,c	;volatile
  3288                           
  3289                           ;YellowFlash.C: 707: turnoff=0x00;
  3290  00123E  6A5C               	clrf	_turnoff,c
  3291                           
  3292                           ;YellowFlash.C: 708: switchmode=0;
  3293  001240  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  3294  001242  905F               	bcf	_switchmode/(0+8),_switchmode& (0+7),c
  3295                           
  3296                           ;YellowFlash.C: 709: RC6=1;
  3297  001244  8C82               	bsf	3970,6,c	;volatile
  3298                           
  3299                           ;YellowFlash.C: 710: RC4=1;
  3300  001246  8882               	bsf	3970,4,c	;volatile
  3301                           
  3302                           ;YellowFlash.C: 711: RD3=1;
  3303  001248  8683               	bsf	3971,3,c	;volatile
  3304                           
  3305                           ;YellowFlash.C: 712: RD2=0;
  3306  00124A  9483               	bcf	3971,2,c	;volatile
  3307  00124C                     L6:
  3308                           
  3309                           ;YellowFlash.C: 713: if(f_r_mod==0x01)
  3310  00124C  0444               	decf	_f_r_mod,w,c
  3311  00124E  A4D8               	btfss	status,2,c
  3312  001250  0012               	return	
  3313                           
  3314                           ;YellowFlash.C: 714: {
  3315                           ;YellowFlash.C: 715: CANSdlc=4;
  3316  001252  0E04               	movlw	4
  3317  001254  6E5B               	movwf	_CANSdlc,c
  3318                           
  3319                           ;YellowFlash.C: 716: CANSdata[0]=0x02;
  3320  001256  0E02               	movlw	2
  3321  001258  6E4D               	movwf	_CANSdata,c
  3322                           
  3323                           ;YellowFlash.C: 717: CANSdata[1]=yflash_CFG[0];
  3324  00125A  C059  F04E         	movff	_yflash_CFG,_CANSdata+1
  3325                           
  3326                           ;YellowFlash.C: 718: CANSdata[2]=yflash_CFG[1];
  3327  00125E  C05A  F04F         	movff	_yflash_CFG+1,_CANSdata+2
  3328  001262  D7E0               	goto	L5
  3329  001264                     l3163:
  3330  001264  5035               	movf	CANDATAAnalyzing@dat,w,c
  3331  001266  6ED9               	movwf	fsr2l,c
  3332  001268  6ADA               	clrf	fsr2h,c
  3333  00126A  50DF               	movf	indf2,w,c
  3334  00126C  6E37               	movwf	??_CANDATAAnalyzing& (0+255),c
  3335  00126E  0E3F               	movlw	63
  3336  001270  1637               	andwf	??_CANDATAAnalyzing,f,c
  3337  001272  C037  F038         	movff	??_CANDATAAnalyzing,??_CANDATAAnalyzing+1
  3338  001276  6A39               	clrf	(??_CANDATAAnalyzing+2)& (0+255),c
  3339                           
  3340                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3341                           ; Switch size 1, requested type "space"
  3342                           ; Number of cases is 1, Range of values is 0 to 0
  3343                           ; switch strategies available:
  3344                           ; Name         Instructions Cycles
  3345                           ; simple_byte            4     3 (average)
  3346                           ;	Chosen strategy is simple_byte
  3347  001278  5039               	movf	??_CANDATAAnalyzing+2,w,c
  3348  00127A  A4D8               	btfss	status,2,c
  3349  00127C  0012               	return	
  3350                           
  3351                           ; Switch size 1, requested type "space"
  3352                           ; Number of cases is 7, Range of values is 0 to 255
  3353                           ; switch strategies available:
  3354                           ; Name         Instructions Cycles
  3355                           ; simple_byte           22    12 (average)
  3356                           ;	Chosen strategy is simple_byte
  3357  00127E  5038               	movf	??_CANDATAAnalyzing+1,w,c
  3358  001280  E08A               	bz	l3065
  3359  001282  0A01               	xorlw	1	; case 1
  3360  001284  E08E               	bz	l3069
  3361  001286  0A03               	xorlw	3	; case 2
  3362  001288  E08F               	bz	l3071
  3363  00128A  0A01               	xorlw	1	; case 3
  3364  00128C  E09E               	bz	l3079
  3365  00128E  0A07               	xorlw	7	; case 4
  3366  001290  E0BD               	bz	l580
  3367  001292  0A01               	xorlw	1	; case 5
  3368  001294  E0D0               	bz	l582
  3369  001296  0AFA               	xorlw	250	; case 255
  3370  001298  A4D8               	btfss	status,2,c
  3371  00129A  0012               	return	
  3372  00129C  EF8F  F00C         	goto	_CANReadVersion
  3373  0012A0                     __end_of_CANDATAAnalyzing:
  3374                           	opt stack 0
  3375                           tblptru	equ	0xFF8
  3376                           tblptrh	equ	0xFF7
  3377                           tblptrl	equ	0xFF6
  3378                           tablat	equ	0xFF5
  3379                           prodh	equ	0xFF4
  3380                           prodl	equ	0xFF3
  3381                           intcon	equ	0xFF2
  3382                           postinc0	equ	0xFEE
  3383                           wreg	equ	0xFE8
  3384                           indf1	equ	0xFE7
  3385                           postdec1	equ	0xFE5
  3386                           fsr1h	equ	0xFE2
  3387                           fsr1l	equ	0xFE1
  3388                           indf2	equ	0xFDF
  3389                           postinc2	equ	0xFDE
  3390                           postdec2	equ	0xFDD
  3391                           fsr2h	equ	0xFDA
  3392                           fsr2l	equ	0xFD9
  3393                           status	equ	0xFD8
  3394                           
  3395 ;; *************** function _CANSendConfirm *****************
  3396 ;; Defined at:
  3397 ;;		line 408 in file "G:\working\YellowFlashingController\YellowFlash.C"
  3398 ;; Parameters:    Size  Location     Type
  3399 ;;		None
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  i               1    2[COMRAM] unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;		None               void
  3404 ;; Registers used:
  3405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3406 ;; Tracked objects:
  3407 ;;		On entry : F/0
  3408 ;;		On exit  : F/F
  3409 ;;		Unchanged: FFFFFFF0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3414 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3415 ;;Total ram usage:        1 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; Hardware stack levels required when called:    5
  3418 ;; This function calls:
  3419 ;;		_CANSend
  3420 ;; This function is called by:
  3421 ;;		_CANDATAAnalyzing
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text13
  3426  001D58                     __ptext13:
  3427                           	opt stack 0
  3428  001D58                     _CANSendConfirm:
  3429                           	opt stack 24
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;YellowFlash.C: 409: unsigned char i;
  3433                           ;YellowFlash.C: 411: for(i=0;i<8;i++)
  3434  001D58  6A03               	clrf	CANSendConfirm@i,c
  3435  001D5A                     l2895:
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;YellowFlash.C: 412: {
  3439                           ;YellowFlash.C: 413: CANSdata[i] = CANRdata[i];
  3440  001D5A  5003               	movf	CANSendConfirm@i,w,c
  3441  001D5C  0FE0               	addlw	low _CANRdata
  3442  001D5E  6ED9               	movwf	fsr2l,c
  3443  001D60  6ADA               	clrf	fsr2h,c
  3444  001D62  5003               	movf	CANSendConfirm@i,w,c
  3445  001D64  0F4D               	addlw	low _CANSdata
  3446  001D66  6EE1               	movwf	fsr1l,c
  3447  001D68  6AE2               	clrf	fsr1h,c
  3448  001D6A  CFDF FFE7          	movff	indf2,indf1
  3449                           
  3450                           ; BSR set to: 0
  3451  001D6E  2A03               	incf	CANSendConfirm@i,f,c
  3452                           
  3453                           ; BSR set to: 0
  3454  001D70  0E07               	movlw	7
  3455  001D72  6403               	cpfsgt	CANSendConfirm@i,c
  3456  001D74  D7F2               	goto	l2895
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;YellowFlash.C: 414: }
  3460                           ;YellowFlash.C: 415: CANSdlc = CANRdlc;
  3461  001D76  C05D  F05B         	movff	_CANRdlc,_CANSdlc
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;YellowFlash.C: 416: CANSend(CANSid,CANSdata,CANSdlc);
  3465  001D7A  0E4D               	movlw	low _CANSdata
  3466  001D7C  6E01               	movwf	?_CANSend,c
  3467  001D7E  C05B  F002         	movff	_CANSdlc,?_CANSend+1
  3468  001D82  0EEC               	movlw	_CANSid& (0+255)
  3469  001D84  EFF7  F009         	goto	_CANSend
  3470  001D88                     __end_of_CANSendConfirm:
  3471                           	opt stack 0
  3472                           tblptru	equ	0xFF8
  3473                           tblptrh	equ	0xFF7
  3474                           tblptrl	equ	0xFF6
  3475                           tablat	equ	0xFF5
  3476                           prodh	equ	0xFF4
  3477                           prodl	equ	0xFF3
  3478                           intcon	equ	0xFF2
  3479                           postinc0	equ	0xFEE
  3480                           wreg	equ	0xFE8
  3481                           indf1	equ	0xFE7
  3482                           postdec1	equ	0xFE5
  3483                           fsr1h	equ	0xFE2
  3484                           fsr1l	equ	0xFE1
  3485                           indf2	equ	0xFDF
  3486                           postinc2	equ	0xFDE
  3487                           postdec2	equ	0xFDD
  3488                           fsr2h	equ	0xFDA
  3489                           fsr2l	equ	0xFD9
  3490                           status	equ	0xFD8
  3491                           
  3492 ;; *************** function _CANWriteID *****************
  3493 ;; Defined at:
  3494 ;;		line 439 in file "G:\working\YellowFlashingController\YellowFlash.C"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  fm              1    wreg     unsigned char 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  fm              1    4[COMRAM] unsigned char 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;		None               void
  3501 ;; Registers used:
  3502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3509 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3511 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3512 ;;Total ram usage:        1 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:    6
  3515 ;; This function calls:
  3516 ;;		_EEPROMWrite
  3517 ;;		_CANSendID
  3518 ;; This function is called by:
  3519 ;;		_CANDATAAnalyzing
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           	psect	text14
  3524  001D88                     __ptext14:
  3525                           	opt stack 0
  3526  001D88                     _CANWriteID:
  3527                           	opt stack 23
  3528                           
  3529                           ; BSR set to: 15
  3530                           ;CANWriteID@fm stored from wreg
  3531  001D88  CFE8 F005          	movff	wreg,CANWriteID@fm
  3532                           
  3533                           ;YellowFlash.C: 440: eeprom_addr = 0x0000;
  3534  001D8C  6A55               	clrf	_eeprom_addr,c
  3535  001D8E  6A56               	clrf	_eeprom_addr+1,c
  3536                           
  3537                           ;YellowFlash.C: 441: eeprom_num = 4;
  3538  001D90  0E04               	movlw	4
  3539  001D92  6E5E               	movwf	_eeprom_num,c
  3540                           
  3541                           ;YellowFlash.C: 442: EEPROMWrite(&eeprom_addr,&eeprom_num,(CANRdata+1));
  3542  001D94  0E5E               	movlw	low _eeprom_num
  3543  001D96  6E01               	movwf	?_EEPROMWrite,c
  3544  001D98  0100               	movlb	0	; () banked
  3545  001D9A  0E00               	movlw	high (_CANRdata+1)
  3546  001D9C  6E03               	movwf	?_EEPROMWrite+2,c
  3547  001D9E  0EE1               	movlw	low (_CANRdata+1)
  3548  001DA0  6E02               	movwf	?_EEPROMWrite+1,c
  3549  001DA2  0E55               	movlw	_eeprom_addr& (0+255)
  3550  001DA4  EC40  F00D         	call	_EEPROMWrite
  3551                           
  3552                           ;YellowFlash.C: 443: if(fm==0x01)
  3553  001DA8  0405               	decf	CANWriteID@fm,w,c
  3554  001DAA  A4D8               	btfss	status,2,c
  3555  001DAC  0012               	return	
  3556                           
  3557                           ;YellowFlash.C: 444: {
  3558                           ;YellowFlash.C: 445: CANSendID(0X01);
  3559  001DAE  0E01               	movlw	1
  3560  001DB0  EF75  F00E         	goto	_CANSendID
  3561  001DB4                     __end_of_CANWriteID:
  3562                           	opt stack 0
  3563                           tblptru	equ	0xFF8
  3564                           tblptrh	equ	0xFF7
  3565                           tblptrl	equ	0xFF6
  3566                           tablat	equ	0xFF5
  3567                           prodh	equ	0xFF4
  3568                           prodl	equ	0xFF3
  3569                           intcon	equ	0xFF2
  3570                           postinc0	equ	0xFEE
  3571                           wreg	equ	0xFE8
  3572                           indf1	equ	0xFE7
  3573                           postdec1	equ	0xFE5
  3574                           fsr1h	equ	0xFE2
  3575                           fsr1l	equ	0xFE1
  3576                           indf2	equ	0xFDF
  3577                           postinc2	equ	0xFDE
  3578                           postdec2	equ	0xFDD
  3579                           fsr2h	equ	0xFDA
  3580                           fsr2l	equ	0xFD9
  3581                           status	equ	0xFD8
  3582                           
  3583 ;; *************** function _CANSendID *****************
  3584 ;; Defined at:
  3585 ;;		line 421 in file "G:\working\YellowFlashingController\YellowFlash.C"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  sm              1    wreg     unsigned char 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;  sm              1    3[COMRAM] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;		None               void
  3592 ;; Registers used:
  3593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : F/F
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3602 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3603 ;;Total ram usage:        1 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    5
  3606 ;; This function calls:
  3607 ;;		_EEPROMRead
  3608 ;;		_CANSend
  3609 ;; This function is called by:
  3610 ;;		_CANWriteID
  3611 ;;		_CANDATAAnalyzing
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           	psect	text15
  3616  001CEA                     __ptext15:
  3617                           	opt stack 0
  3618  001CEA                     _CANSendID:
  3619                           	opt stack 23
  3620                           
  3621                           ;CANSendID@sm stored from wreg
  3622  001CEA  CFE8 F004          	movff	wreg,CANSendID@sm
  3623                           
  3624                           ;YellowFlash.C: 423: CANSdlc = 4 + 1;
  3625  001CEE  0E05               	movlw	5
  3626  001CF0  6E5B               	movwf	_CANSdlc,c
  3627                           
  3628                           ;YellowFlash.C: 425: if(sm == 0X00)
  3629  001CF2  6604               	tstfsz	CANSendID@sm,c
  3630  001CF4  D002               	goto	l2909
  3631                           
  3632                           ;YellowFlash.C: 426: CANSdata[0] = 0X00;
  3633  001CF6  6A4D               	clrf	_CANSdata,c
  3634  001CF8  D002               	goto	l2911
  3635  001CFA                     l2909:
  3636                           
  3637                           ;YellowFlash.C: 427: else
  3638                           ;YellowFlash.C: 428: CANSdata[0] = 0X01;
  3639  001CFA  0E01               	movlw	1
  3640  001CFC  6E4D               	movwf	_CANSdata,c
  3641  001CFE                     l2911:
  3642                           
  3643                           ;YellowFlash.C: 431: eeprom_addr = 0x0000;
  3644  001CFE  6A55               	clrf	_eeprom_addr,c
  3645  001D00  6A56               	clrf	_eeprom_addr+1,c
  3646                           
  3647                           ;YellowFlash.C: 432: eeprom_num = 4;
  3648  001D02  0E04               	movlw	4
  3649  001D04  6E5E               	movwf	_eeprom_num,c
  3650                           
  3651                           ;YellowFlash.C: 433: EEPROMRead(&eeprom_addr,&eeprom_num,(CANSdata+1));
  3652  001D06  0E5E               	movlw	low _eeprom_num
  3653  001D08  6E01               	movwf	?_EEPROMRead,c
  3654  001D0A  0E4E               	movlw	low (_CANSdata+1)
  3655  001D0C  6E02               	movwf	?_EEPROMRead+1,c
  3656  001D0E  0E55               	movlw	_eeprom_addr& (0+255)
  3657  001D10  EC39  F00E         	call	_EEPROMRead
  3658                           
  3659                           ;YellowFlash.C: 434: CANSend(CANSid,CANSdata,CANSdlc);
  3660  001D14  0E4D               	movlw	low _CANSdata
  3661  001D16  6E01               	movwf	?_CANSend,c
  3662  001D18  C05B  F002         	movff	_CANSdlc,?_CANSend+1
  3663  001D1C  0EEC               	movlw	_CANSid& (0+255)
  3664  001D1E  EFF7  F009         	goto	_CANSend
  3665  001D22                     __end_of_CANSendID:
  3666                           	opt stack 0
  3667                           tblptru	equ	0xFF8
  3668                           tblptrh	equ	0xFF7
  3669                           tblptrl	equ	0xFF6
  3670                           tablat	equ	0xFF5
  3671                           prodh	equ	0xFF4
  3672                           prodl	equ	0xFF3
  3673                           intcon	equ	0xFF2
  3674                           postinc0	equ	0xFEE
  3675                           wreg	equ	0xFE8
  3676                           indf1	equ	0xFE7
  3677                           postdec1	equ	0xFE5
  3678                           fsr1h	equ	0xFE2
  3679                           fsr1l	equ	0xFE1
  3680                           indf2	equ	0xFDF
  3681                           postinc2	equ	0xFDE
  3682                           postdec2	equ	0xFDD
  3683                           fsr2h	equ	0xFDA
  3684                           fsr2l	equ	0xFD9
  3685                           status	equ	0xFD8
  3686                           
  3687 ;; *************** function _YFlashNewConfigure *****************
  3688 ;; Defined at:
  3689 ;;		line 505 in file "G:\working\YellowFlashingController\YellowFlash.C"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;		None
  3694 ;; Return value:  Size  Location     Type
  3695 ;;		None               void
  3696 ;; Registers used:
  3697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3707 ;;Total ram usage:        0 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; Hardware stack levels required when called:    7
  3710 ;; This function calls:
  3711 ;;		_EEPROMRead
  3712 ;;		_EEPROMWrite
  3713 ;;		_CalculateTime25msCounter
  3714 ;; This function is called by:
  3715 ;;		_CANDATAAnalyzing
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	text16
  3720  0015F4                     __ptext16:
  3721                           	opt stack 0
  3722  0015F4                     _YFlashNewConfigure:
  3723                           	opt stack 0
  3724                           
  3725                           ;YellowFlash.C: 506: eeprom_addr = 0x0009;
  3726                           
  3727                           ; BSR set to: 15
  3728                           
  3729                           ;YellowFlash.C: 507: eeprom_num = 2;
  3730                           
  3731                           ;YellowFlash.C: 508: EEPROMRead(&eeprom_addr,&eeprom_num,&yflash_CFG);
  3732  0015F4  EC2C  F00D         	call	PL3	;call to abstracted procedure
  3733  0015F8  EC39  F00E         	call	_EEPROMRead
  3734                           
  3735                           ;YellowFlash.C: 511: if(((yflash_CFG[0]& 0xFF) != (CANRdata[1] & 0xFF)) || ((CANRdata[2]
      +                           & 0x03)!= 0x00))
  3736  0015FC  5059               	movf	_yflash_CFG,w,c
  3737  0015FE  0100               	movlb	0	; () banked
  3738  001600  EE20  F0E1         	lfsr	2,_CANRdata+1
  3739  001604  62DF               	cpfseq	indf2,c
  3740  001606  D004               	goto	l2961
  3741                           
  3742                           ; BSR set to: 0
  3743  001608  51E2               	movf	(_CANRdata+2)& (0+255),w,b
  3744  00160A  0B03               	andlw	3
  3745  00160C  B4D8               	btfsc	status,2,c
  3746  00160E  0012               	return	
  3747  001610                     l2961:
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;YellowFlash.C: 512: {
  3751                           ;YellowFlash.C: 513: if((yflash_CFG[0]& 0xFF) != (CANRdata[1] & 0xFF))
  3752  001610  51E1               	movf	(_CANRdata+1)& (0+255),w,b
  3753  001612  1859               	xorwf	_yflash_CFG,w,c
  3754  001614  E00E               	bz	l2967
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;YellowFlash.C: 514: {
  3758                           ;YellowFlash.C: 515: eeprom_addr = 0x0009;
  3759  001616  6A56               	clrf	_eeprom_addr+1,c
  3760  001618  0E09               	movlw	9
  3761  00161A  6E55               	movwf	_eeprom_addr,c
  3762                           
  3763                           ;YellowFlash.C: 516: eeprom_num = 1;
  3764  00161C  0E01               	movlw	1
  3765  00161E  6E5E               	movwf	_eeprom_num,c
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;YellowFlash.C: 517: EEPROMWrite(&eeprom_addr,&eeprom_num,(CANRdata+1));
  3769  001620  0E5E               	movlw	low _eeprom_num
  3770  001622  6E01               	movwf	?_EEPROMWrite,c
  3771  001624  0E00               	movlw	high (_CANRdata+1)
  3772  001626  6E03               	movwf	?_EEPROMWrite+2,c
  3773  001628  0EE1               	movlw	low (_CANRdata+1)
  3774  00162A  6E02               	movwf	?_EEPROMWrite+1,c
  3775  00162C  0E55               	movlw	_eeprom_addr& (0+255)
  3776  00162E  EC40  F00D         	call	_EEPROMWrite
  3777  001632                     l2967:
  3778                           
  3779                           ;YellowFlash.C: 518: }
  3780                           ;YellowFlash.C: 519: if((CANRdata[2] & 0x03)!= 0x00)
  3781  001632  0100               	movlb	0	; () banked
  3782  001634  51E2               	movf	(_CANRdata+2)& (0+255),w,b
  3783  001636  0B03               	andlw	3
  3784  001638  E00E               	bz	l2973
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;YellowFlash.C: 520: {
  3788                           ;YellowFlash.C: 521: eeprom_addr = 0x000a;
  3789  00163A  6A56               	clrf	_eeprom_addr+1,c
  3790  00163C  0E0A               	movlw	10
  3791  00163E  6E55               	movwf	_eeprom_addr,c
  3792                           
  3793                           ;YellowFlash.C: 522: eeprom_num = 1;
  3794  001640  0E01               	movlw	1
  3795  001642  6E5E               	movwf	_eeprom_num,c
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;YellowFlash.C: 523: EEPROMWrite(&eeprom_addr,&eeprom_num,(CANRdata+2));
  3799  001644  0E5E               	movlw	low _eeprom_num
  3800  001646  6E01               	movwf	?_EEPROMWrite,c
  3801  001648  0E00               	movlw	high (_CANRdata+2)
  3802  00164A  6E03               	movwf	?_EEPROMWrite+2,c
  3803  00164C  0EE2               	movlw	low (_CANRdata+2)
  3804  00164E  6E02               	movwf	?_EEPROMWrite+1,c
  3805  001650  0E55               	movlw	_eeprom_addr& (0+255)
  3806  001652  EC40  F00D         	call	_EEPROMWrite
  3807  001656                     l2973:
  3808                           
  3809                           ;YellowFlash.C: 524: }
  3810                           ;YellowFlash.C: 526: eeprom_addr = 0x0009;
  3811                           
  3812                           ;YellowFlash.C: 527: eeprom_num = 2;
  3813                           
  3814                           ;YellowFlash.C: 528: EEPROMRead(&eeprom_addr,&eeprom_num,&yflash_CFG);
  3815  001656  EC2C  F00D         	call	PL3	;call to abstracted procedure
  3816  00165A  EC39  F00E         	call	_EEPROMRead
  3817                           
  3818                           ;YellowFlash.C: 530: rows=((yflash_CFG[0]&0xF0)>>4);
  3819  00165E  3859               	swapf	_yflash_CFG,w,c
  3820  001660  0B0F               	andlw	15
  3821  001662  6E49               	movwf	_rows,c
  3822                           
  3823                           ;YellowFlash.C: 531: lines=(yflash_CFG[0]&0x0F);
  3824  001664  5059               	movf	_yflash_CFG,w,c
  3825  001666  0B0F               	andlw	15
  3826  001668  6E47               	movwf	_lines,c
  3827                           
  3828                           ;YellowFlash.C: 532: CalculateTime25msCounter(rows,lines);
  3829  00166A  C047  F029         	movff	_lines,?_CalculateTime25msCounter
  3830  00166E  5049               	movf	_rows,w,c
  3831  001670  EC50  F009         	call	_CalculateTime25msCounter
  3832                           
  3833                           ;YellowFlash.C: 534: time_counters=time_on_counter;
  3834  001674  C042  F03E         	movff	_time_on_counter,_time_counters
  3835  001678  C043  F03F         	movff	_time_on_counter+1,_time_counters+1
  3836                           
  3837                           ;YellowFlash.C: 535: readwrite[0]=time_counters;
  3838  00167C  C03E  F057         	movff	_time_counters,_readwrite
  3839                           
  3840                           ;YellowFlash.C: 536: readwrite[1]=(time_counters>>8);
  3841  001680  503F               	movf	_time_counters+1,w,c
  3842  001682  6E58               	movwf	_readwrite+1,c
  3843                           
  3844                           ;YellowFlash.C: 537: eeprom_addr = 0x0005;
  3845  001684  6A56               	clrf	_eeprom_addr+1,c
  3846  001686  0E05               	movlw	5
  3847  001688  6E55               	movwf	_eeprom_addr,c
  3848                           
  3849                           ;YellowFlash.C: 538: eeprom_num = 2;
  3850                           
  3851                           ;YellowFlash.C: 539: EEPROMWrite(&eeprom_addr,&eeprom_num,&readwrite);
  3852  00168A  D810               	call	PL7	;call to abstracted procedure
  3853  00168C  EC40  F00D         	call	_EEPROMWrite
  3854                           
  3855                           ;YellowFlash.C: 541: time_counters=time_off_counter;
  3856  001690  C040  F03E         	movff	_time_off_counter,_time_counters
  3857  001694  C041  F03F         	movff	_time_off_counter+1,_time_counters+1
  3858                           
  3859                           ;YellowFlash.C: 542: readwrite[0]=time_counters;
  3860  001698  C03E  F057         	movff	_time_counters,_readwrite
  3861                           
  3862                           ;YellowFlash.C: 543: readwrite[1]=(time_counters>>8);
  3863  00169C  503F               	movf	_time_counters+1,w,c
  3864  00169E  6E58               	movwf	_readwrite+1,c
  3865                           
  3866                           ;YellowFlash.C: 544: eeprom_addr = 0x0007;
  3867  0016A0  6A56               	clrf	_eeprom_addr+1,c
  3868  0016A2  0E07               	movlw	7
  3869  0016A4  6E55               	movwf	_eeprom_addr,c
  3870                           
  3871                           ;YellowFlash.C: 545: eeprom_num = 2;
  3872                           
  3873                           ;YellowFlash.C: 546: EEPROMWrite(&eeprom_addr,&eeprom_num,&readwrite);
  3874  0016A6  D802               	call	PL7	;call to abstracted procedure
  3875  0016A8  EF40  F00D         	goto	_EEPROMWrite
  3876  0016AC                     __end_of_YFlashNewConfigure:
  3877                           	opt stack 0
  3878  0016AC                     PL7:
  3879  0016AC  0E02               	movlw	2
  3880  0016AE  6E5E               	movwf	_eeprom_num,c
  3881  0016B0  0E5E               	movlw	low _eeprom_num
  3882  0016B2  6E01               	movwf	?_EEPROMWrite,c
  3883  0016B4  0E57               	movlw	low _readwrite
  3884  0016B6  6E02               	movwf	?_EEPROMWrite+1,c
  3885  0016B8  0E00               	movlw	high _readwrite
  3886  0016BA  6E03               	movwf	?_EEPROMWrite+2,c
  3887  0016BC  0E0F               	movlw	15
  3888  0016BE  6E03               	movwf	?_EEPROMWrite+2,c
  3889  0016C0  0E5F               	movlw	__accesstop+-1
  3890  0016C2  6402               	cpfsgt	?_EEPROMWrite+1,c
  3891  0016C4  6A03               	clrf	?_EEPROMWrite+2,c
  3892  0016C6  0E55               	movlw	_eeprom_addr& (0+255)
  3893  0016C8  0012               	return	
  3894                           tblptru	equ	0xFF8
  3895                           tblptrh	equ	0xFF7
  3896                           tblptrl	equ	0xFF6
  3897                           tablat	equ	0xFF5
  3898                           prodh	equ	0xFF4
  3899                           prodl	equ	0xFF3
  3900                           intcon	equ	0xFF2
  3901                           postinc0	equ	0xFEE
  3902                           wreg	equ	0xFE8
  3903                           indf1	equ	0xFE7
  3904                           postdec1	equ	0xFE5
  3905                           fsr1h	equ	0xFE2
  3906                           fsr1l	equ	0xFE1
  3907                           indf2	equ	0xFDF
  3908                           postinc2	equ	0xFDE
  3909                           postdec2	equ	0xFDD
  3910                           fsr2h	equ	0xFDA
  3911                           fsr2l	equ	0xFD9
  3912                           status	equ	0xFD8
  3913                           
  3914 ;; *************** function _EEPROMWrite *****************
  3915 ;; Defined at:
  3916 ;;		line 58 in file "G:\working\YellowFlashingController\mcu.h"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  addr            1    wreg     PTR unsigned char 
  3919 ;;		 -> eeprom_addr(2), 
  3920 ;;  num             1    0[COMRAM] PTR unsigned char 
  3921 ;;		 -> eeprom_num(1), 
  3922 ;;  dat             2    1[COMRAM] PTR unsigned char 
  3923 ;;		 -> readwrite(2), CANRdata(8), 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;  addr            1    3[COMRAM] PTR unsigned char 
  3926 ;;		 -> eeprom_addr(2), 
  3927 ;; Return value:  Size  Location     Type
  3928 ;;		None               void
  3929 ;; Registers used:
  3930 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3936 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3937 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3939 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3940 ;;Total ram usage:        4 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:    4
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		_CANWriteID
  3947 ;;		_YFlashNewConfigure
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           	psect	text17
  3952  001A80                     __ptext17:
  3953                           	opt stack 0
  3954  001A80                     _EEPROMWrite:
  3955                           	opt stack 24
  3956                           
  3957                           ;EEPROMWrite@addr stored from wreg
  3958  001A80  CFE8 F004          	movff	wreg,EEPROMWrite@addr
  3959                           
  3960                           ;mcu.h: 59: INTCON &= 0x3f;
  3961  001A84  0E3F               	movlw	63
  3962  001A86  16F2               	andwf	intcon,f,c	;volatile
  3963                           
  3964                           ;mcu.h: 60: while((*num)--)
  3965  001A88  D020               	goto	l2797
  3966  001A8A                     l377:
  3967                           
  3968                           ;mcu.h: 61: {
  3969                           ;mcu.h: 62: EEADRH = (*addr)>>8;
  3970  001A8A  6A75               	clrf	3957,c	;volatile
  3971                           
  3972                           ;mcu.h: 63: EEADR = (*addr);
  3973  001A8C  5004               	movf	EEPROMWrite@addr,w,c
  3974  001A8E  6ED9               	movwf	fsr2l,c
  3975  001A90  6ADA               	clrf	fsr2h,c
  3976  001A92  50DF               	movf	indf2,w,c
  3977  001A94  6E74               	movwf	3956,c	;volatile
  3978                           
  3979                           ;mcu.h: 64: (*addr)++;
  3980  001A96  5004               	movf	EEPROMWrite@addr,w,c
  3981  001A98  6ED9               	movwf	fsr2l,c
  3982  001A9A  6ADA               	clrf	fsr2h,c
  3983  001A9C  2ADF               	incf	indf2,f,c
  3984                           
  3985                           ;mcu.h: 65: EEDATA = (*dat);
  3986  001A9E  C002  FFD9         	movff	EEPROMWrite@dat,fsr2l
  3987  001AA2  C003  FFDA         	movff	EEPROMWrite@dat+1,fsr2h
  3988  001AA6  50DF               	movf	indf2,w,c
  3989  001AA8  6E73               	movwf	3955,c	;volatile
  3990                           
  3991                           ;mcu.h: 66: dat++;
  3992  001AAA  4A02               	infsnz	EEPROMWrite@dat,f,c
  3993  001AAC  2A03               	incf	EEPROMWrite@dat+1,f,c
  3994                           
  3995                           ;mcu.h: 68: EECON1 &= 0x3f;
  3996  001AAE  0E3F               	movlw	63
  3997  001AB0  167F               	andwf	3967,f,c	;volatile
  3998                           
  3999                           ;mcu.h: 70: EECON1 |= 0x04;
  4000  001AB2  847F               	bsf	3967,2,c	;volatile
  4001                           
  4002                           ;mcu.h: 75: EECON2 = 0x55;
  4003  001AB4  0E55               	movlw	85
  4004  001AB6  6E7E               	movwf	3966,c	;volatile
  4005                           
  4006                           ;mcu.h: 76: EECON2 = 0xaa;
  4007  001AB8  0EAA               	movlw	170
  4008  001ABA  6E7E               	movwf	3966,c	;volatile
  4009                           
  4010                           ;mcu.h: 78: EECON1 |= 0x02;
  4011  001ABC  827F               	bsf	3967,1,c	;volatile
  4012  001ABE  F000               	nop		;# 
  4013  001AC0                     l378:
  4014  001AC0  B27F               	btfsc	3967,1,c	;volatile
  4015  001AC2  D7FE               	goto	l378
  4016  001AC4  F000               	nop		;# 
  4017                           
  4018                           ;mcu.h: 83: EECON1 &= 0x04;
  4019  001AC6  0E04               	movlw	4
  4020  001AC8  167F               	andwf	3967,f,c	;volatile
  4021  001ACA                     l2797:
  4022  001ACA  5001               	movf	EEPROMWrite@num,w,c
  4023  001ACC  6ED9               	movwf	fsr2l,c
  4024  001ACE  6ADA               	clrf	fsr2h,c
  4025  001AD0  06DF               	decf	indf2,f,c
  4026  001AD2  0EFF               	movlw	255
  4027  001AD4  62DF               	cpfseq	indf2,c
  4028  001AD6  D7D9               	goto	l377
  4029                           
  4030                           ;mcu.h: 85: }
  4031                           ;mcu.h: 87: INTCON &= 0xc0;
  4032  001AD8  0EC0               	movlw	192
  4033  001ADA  16F2               	andwf	intcon,f,c	;volatile
  4034  001ADC  0CC0               	retlw	192
  4035  001ADE                     __end_of_EEPROMWrite:
  4036                           	opt stack 0
  4037                           tblptru	equ	0xFF8
  4038                           tblptrh	equ	0xFF7
  4039                           tblptrl	equ	0xFF6
  4040                           tablat	equ	0xFF5
  4041                           prodh	equ	0xFF4
  4042                           prodl	equ	0xFF3
  4043                           intcon	equ	0xFF2
  4044                           postinc0	equ	0xFEE
  4045                           wreg	equ	0xFE8
  4046                           indf1	equ	0xFE7
  4047                           postdec1	equ	0xFE5
  4048                           fsr1h	equ	0xFE2
  4049                           fsr1l	equ	0xFE1
  4050                           indf2	equ	0xFDF
  4051                           postinc2	equ	0xFDE
  4052                           postdec2	equ	0xFDD
  4053                           fsr2h	equ	0xFDA
  4054                           fsr2l	equ	0xFD9
  4055                           status	equ	0xFD8
  4056                           
  4057 ;; *************** function _CalculateTime25msCounter *****************
  4058 ;; Defined at:
  4059 ;;		line 163 in file "G:\working\YellowFlashingController\YellowFlash.C"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  row             1    wreg     unsigned char 
  4062 ;;  line            1   40[COMRAM] unsigned char 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  row             1   47[COMRAM] unsigned char 
  4065 ;;  j               2   50[COMRAM] int 
  4066 ;;  i               2   48[COMRAM] int 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;		None               void
  4069 ;; Registers used:
  4070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: FFFFFFF0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4076 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4077 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4078 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4079 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4080 ;;Total ram usage:       12 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; Hardware stack levels required when called:    6
  4083 ;; This function calls:
  4084 ;;		___ftmul
  4085 ;;		___fttol
  4086 ;;		___lwdiv
  4087 ;; This function is called by:
  4088 ;;		_YFlashNewConfigure
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text18
  4093  0012A0                     __ptext18:
  4094                           	opt stack 0
  4095  0012A0                     _CalculateTime25msCounter:
  4096                           	opt stack 22
  4097                           
  4098                           ;CalculateTime25msCounter@row stored from wreg
  4099  0012A0  CFE8 F030          	movff	wreg,CalculateTime25msCounter@row
  4100                           
  4101                           ;YellowFlash.C: 164: int i,j;
  4102                           ;YellowFlash.C: 165: for(i=0;i<10;i++)
  4103  0012A4  6A31               	clrf	CalculateTime25msCounter@i,c
  4104  0012A6  6A32               	clrf	CalculateTime25msCounter@i+1,c
  4105  0012A8                     l477:
  4106                           
  4107                           ;YellowFlash.C: 166: {
  4108                           ;YellowFlash.C: 167: for(j=0;j<16;j++)
  4109  0012A8  6A33               	clrf	CalculateTime25msCounter@j,c
  4110  0012AA  6A34               	clrf	CalculateTime25msCounter@j+1,c
  4111  0012AC                     l2827:
  4112                           
  4113                           ;YellowFlash.C: 168: {
  4114                           ;YellowFlash.C: 169: time_on[i][j]=period[i]*cycledutyon[j];
  4115  0012AC  5033               	movf	CalculateTime25msCounter@j,w,c
  4116  0012AE  0D03               	mullw	3
  4117  0012B0  50F3               	movf	prodl,w,c
  4118  0012B2  0100               	movlb	0	; () banked
  4119  0012B4  0F90               	addlw	low _cycledutyon
  4120  0012B6  D85D               	call	PL2	;call to abstracted procedure
  4121  0012B8  EC80  F00A         	call	___ftmul	;wreg free
  4122  0012BC  C009  F01A         	movff	?___ftmul,?___fttol
  4123  0012C0  C00A  F01B         	movff	?___ftmul+1,?___fttol+1
  4124  0012C4  C00B  F01C         	movff	?___ftmul+2,?___fttol+2
  4125  0012C8  EC65  F00B         	call	___fttol	;wreg free
  4126  0012CC  D886               	call	PL15	;call to abstracted procedure
  4127  0012CE                     u1025:
  4128  0012CE  90D8               	bcf	status,0,c
  4129  0012D0  362C               	rlcf	??_CalculateTime25msCounter+2,f,c
  4130  0012D2  362D               	rlcf	??_CalculateTime25msCounter+3,f,c
  4131  0012D4  2EE8               	decfsz	wreg,f,c
  4132  0012D6  D7FB               	goto	u1025
  4133  0012D8  0E01               	movlw	low _time_on
  4134  0012DA  242C               	addwf	??_CalculateTime25msCounter+2,w,c
  4135  0012DC  6E2E               	movwf	(??_CalculateTime25msCounter+4)& (0+255),c
  4136  0012DE  0E0D               	movlw	high _time_on
  4137  0012E0  D86F               	call	PL8	;call to abstracted procedure
  4138                           
  4139                           ;YellowFlash.C: 170: time_off[i][j]=period[i]*cycledutyoff[j];
  4140  0012E2  5033               	movf	CalculateTime25msCounter@j,w,c
  4141  0012E4  0D03               	mullw	3
  4142  0012E6  50F3               	movf	prodl,w,c
  4143  0012E8  0100               	movlb	0	; () banked
  4144  0012EA  0F60               	addlw	low _cycledutyoff
  4145  0012EC  D842               	call	PL2	;call to abstracted procedure
  4146  0012EE  EC80  F00A         	call	___ftmul	;wreg free
  4147  0012F2  C009  F01A         	movff	?___ftmul,?___fttol
  4148  0012F6  C00A  F01B         	movff	?___ftmul+1,?___fttol+1
  4149  0012FA  C00B  F01C         	movff	?___ftmul+2,?___fttol+2
  4150  0012FE  EC65  F00B         	call	___fttol	;wreg free
  4151  001302  D86B               	call	PL15	;call to abstracted procedure
  4152  001304                     u1035:
  4153  001304  90D8               	bcf	status,0,c
  4154  001306  362C               	rlcf	??_CalculateTime25msCounter+2,f,c
  4155  001308  362D               	rlcf	??_CalculateTime25msCounter+3,f,c
  4156  00130A  2EE8               	decfsz	wreg,f,c
  4157  00130C  D7FB               	goto	u1035
  4158  00130E  0EC1               	movlw	low _time_off
  4159  001310  242C               	addwf	??_CalculateTime25msCounter+2,w,c
  4160  001312  6E2E               	movwf	(??_CalculateTime25msCounter+4)& (0+255),c
  4161  001314  0E0B               	movlw	high _time_off
  4162  001316  D854               	call	PL8	;call to abstracted procedure
  4163  001318  4A33               	infsnz	CalculateTime25msCounter@j,f,c
  4164  00131A  2A34               	incf	CalculateTime25msCounter@j+1,f,c
  4165  00131C  5034               	movf	CalculateTime25msCounter@j+1,w,c
  4166  00131E  0A80               	xorlw	128
  4167  001320  0F80               	addlw	-128
  4168  001322  0E10               	movlw	16
  4169  001324  B4D8               	btfsc	status,2,c
  4170  001326  5C33               	subwf	CalculateTime25msCounter@j,w,c
  4171  001328  E3C1               	bnc	l2827
  4172  00132A  4A31               	infsnz	CalculateTime25msCounter@i,f,c
  4173  00132C  2A32               	incf	CalculateTime25msCounter@i+1,f,c
  4174  00132E  5032               	movf	CalculateTime25msCounter@i+1,w,c
  4175  001330  0A80               	xorlw	128
  4176  001332  0F80               	addlw	-128
  4177  001334  0E0A               	movlw	10
  4178  001336  B4D8               	btfsc	status,2,c
  4179  001338  5C31               	subwf	CalculateTime25msCounter@i,w,c
  4180  00133A  E3B6               	bnc	l477
  4181                           
  4182                           ;YellowFlash.C: 171: }
  4183                           ;YellowFlash.C: 172: }
  4184                           ;YellowFlash.C: 173: time_on_counter=time_on[line][row]/25;
  4185  00133C  5029               	movf	CalculateTime25msCounter@line,w,c
  4186  00133E  0D20               	mullw	32
  4187  001340  0E01               	movlw	low _time_on
  4188  001342  24F3               	addwf	prodl,w,c
  4189  001344  6E2A               	movwf	??_CalculateTime25msCounter& (0+255),c
  4190  001346  0E0D               	movlw	high _time_on
  4191  001348  D829               	call	PL5	;call to abstracted procedure
  4192  00134A  EC14  F00E         	call	___lwdiv	;wreg free
  4193  00134E  C001  F042         	movff	?___lwdiv,_time_on_counter
  4194  001352  C002  F043         	movff	?___lwdiv+1,_time_on_counter+1
  4195                           
  4196                           ;YellowFlash.C: 174: time_off_counter=time_off[line][row]/25;
  4197  001356  5029               	movf	CalculateTime25msCounter@line,w,c
  4198  001358  0D20               	mullw	32
  4199  00135A  0EC1               	movlw	low _time_off
  4200  00135C  24F3               	addwf	prodl,w,c
  4201  00135E  6E2A               	movwf	??_CalculateTime25msCounter& (0+255),c
  4202  001360  0E0B               	movlw	high _time_off
  4203  001362  D81C               	call	PL5	;call to abstracted procedure
  4204  001364  EC14  F00E         	call	___lwdiv	;wreg free
  4205  001368  C001  F040         	movff	?___lwdiv,_time_off_counter
  4206  00136C  C002  F041         	movff	?___lwdiv+1,_time_off_counter+1
  4207  001370  0012               	return	
  4208  001372                     __end_of_CalculateTime25msCounter:
  4209                           	opt stack 0
  4210  001372                     PL2:
  4211  001372  6ED9               	movwf	fsr2l,c
  4212  001374  6ADA               	clrf	fsr2h,c
  4213  001376  CFDE F00C          	movff	postinc2,?___ftmul+3
  4214  00137A  CFDE F00D          	movff	postinc2,?___ftmul+4
  4215  00137E  CFDD F00E          	movff	postdec2,?___ftmul+5
  4216  001382  5031               	movf	CalculateTime25msCounter@i,w,c
  4217  001384  0D03               	mullw	3
  4218  001386  50F3               	movf	prodl,w,c
  4219  001388  0FC0               	addlw	low _period
  4220  00138A  6ED9               	movwf	fsr2l,c
  4221  00138C  6ADA               	clrf	fsr2h,c
  4222  00138E  CFDE F009          	movff	postinc2,?___ftmul
  4223  001392  CFDE F00A          	movff	postinc2,?___ftmul+1
  4224  001396  CFDD F00B          	movff	postdec2,?___ftmul+2
  4225  00139A  0012               	return	
  4226  00139C                     PL5:
  4227  00139C  20F4               	addwfc	prodh,w,c
  4228  00139E  6E2B               	movwf	(??_CalculateTime25msCounter+1)& (0+255),c
  4229  0013A0  5030               	movf	CalculateTime25msCounter@row,w,c
  4230  0013A2  0D02               	mullw	2
  4231  0013A4  50F3               	movf	prodl,w,c
  4232  0013A6  242A               	addwf	??_CalculateTime25msCounter,w,c
  4233  0013A8  6ED9               	movwf	fsr2l,c
  4234  0013AA  50F4               	movf	prodh,w,c
  4235  0013AC  202B               	addwfc	??_CalculateTime25msCounter+1,w,c
  4236  0013AE  6EDA               	movwf	fsr2h,c
  4237  0013B0  CFDE F001          	movff	postinc2,?___lwdiv
  4238  0013B4  CFDD F002          	movff	postdec2,?___lwdiv+1
  4239  0013B8  6A04               	clrf	?___lwdiv+3,c
  4240  0013BA  0E19               	movlw	25
  4241  0013BC  6E03               	movwf	?___lwdiv+2,c
  4242  0013BE  0C19               	retlw	25
  4243  0013C0                     PL8:
  4244  0013C0  202D               	addwfc	??_CalculateTime25msCounter+3,w,c
  4245  0013C2  6E2F               	movwf	(??_CalculateTime25msCounter+5)& (0+255),c
  4246  0013C4  502A               	movf	??_CalculateTime25msCounter,w,c
  4247  0013C6  242E               	addwf	??_CalculateTime25msCounter+4,w,c
  4248  0013C8  6ED9               	movwf	fsr2l,c
  4249  0013CA  502B               	movf	??_CalculateTime25msCounter+1,w,c
  4250  0013CC  202F               	addwfc	??_CalculateTime25msCounter+5,w,c
  4251  0013CE  6EDA               	movwf	fsr2h,c
  4252  0013D0  C01A  FFDE         	movff	?___fttol,postinc2
  4253  0013D4  C01B  FFDD         	movff	?___fttol+1,postdec2
  4254  0013D8  0012               	return	
  4255  0013DA                     PL15:
  4256  0013DA  90D8               	bcf	status,0,c
  4257  0013DC  3433               	rlcf	CalculateTime25msCounter@j,w,c
  4258  0013DE  6E2A               	movwf	??_CalculateTime25msCounter& (0+255),c
  4259  0013E0  3434               	rlcf	CalculateTime25msCounter@j+1,w,c
  4260  0013E2  6E2B               	movwf	(??_CalculateTime25msCounter+1)& (0+255),c
  4261  0013E4  C031  F02C         	movff	CalculateTime25msCounter@i,??_CalculateTime25msCounter+2
  4262  0013E8  C032  F02D         	movff	CalculateTime25msCounter@i+1,??_CalculateTime25msCounter+3
  4263  0013EC  0C05               	retlw	5
  4264                           tblptru	equ	0xFF8
  4265                           tblptrh	equ	0xFF7
  4266                           tblptrl	equ	0xFF6
  4267                           tablat	equ	0xFF5
  4268                           prodh	equ	0xFF4
  4269                           prodl	equ	0xFF3
  4270                           intcon	equ	0xFF2
  4271                           postinc0	equ	0xFEE
  4272                           wreg	equ	0xFE8
  4273                           indf1	equ	0xFE7
  4274                           postdec1	equ	0xFE5
  4275                           fsr1h	equ	0xFE2
  4276                           fsr1l	equ	0xFE1
  4277                           indf2	equ	0xFDF
  4278                           postinc2	equ	0xFDE
  4279                           postdec2	equ	0xFDD
  4280                           fsr2h	equ	0xFDA
  4281                           fsr2l	equ	0xFD9
  4282                           status	equ	0xFD8
  4283                           
  4284 ;; *************** function _CANReadVersion *****************
  4285 ;; Defined at:
  4286 ;;		line 556 in file "G:\working\YellowFlashingController\YellowFlash.C"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;		None
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;		None
  4291 ;; Return value:  Size  Location     Type
  4292 ;;		None               void
  4293 ;; Registers used:
  4294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : F/F
  4298 ;;		Unchanged: FFFFFFF0/0
  4299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4302 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4303 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4304 ;;Total ram usage:        1 bytes
  4305 ;; Hardware stack levels used:    1
  4306 ;; Hardware stack levels required when called:    5
  4307 ;; This function calls:
  4308 ;;		_CANSend
  4309 ;; This function is called by:
  4310 ;;		_CANDATAAnalyzing
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           	psect	text19
  4315  00191E                     __ptext19:
  4316                           	opt stack 0
  4317  00191E                     _CANReadVersion:
  4318                           	opt stack 24
  4319                           
  4320                           ;YellowFlash.C: 558: CANSdlc = 6;
  4321  00191E  0E06               	movlw	6
  4322  001920  6E5B               	movwf	_CANSdlc,c
  4323                           
  4324                           ;YellowFlash.C: 559: CANSdata[0] =0xff;
  4325  001922  684D               	setf	_CANSdata,c
  4326                           
  4327                           ;YellowFlash.C: 560: CANSdata[1]=board_version[0];
  4328  001924  0E00               	movlw	low _board_version
  4329  001926  6EF6               	movwf	tblptrl,c
  4330  001928  0E0F               	movlw	high _board_version
  4331  00192A  6EF7               	movwf	tblptrh,c
  4332  00192C  0008               	tblrd		*
  4333  00192E  CFF5 F04E          	movff	tablat,_CANSdata+1
  4334                           
  4335                           ;YellowFlash.C: 561: CANSdata[2]=board_version[1];
  4336  001932  0E00               	movlw	_board_version& (0+255)
  4337  001934  6E03               	movwf	??_CANReadVersion& (0+255),c
  4338  001936  2A03               	incf	??_CANReadVersion,f,c
  4339  001938  C003  FFF6         	movff	??_CANReadVersion,tblptrl
  4340  00193C  0E0F               	movlw	high __smallconst
  4341  00193E  6EF7               	movwf	tblptrh,c
  4342  001940  0008               	tblrd		*
  4343  001942  CFF5 F04F          	movff	tablat,_CANSdata+2
  4344                           
  4345                           ;YellowFlash.C: 562: CANSdata[3]=board_version[2];
  4346  001946  0E00               	movlw	_board_version& (0+255)
  4347  001948  6E03               	movwf	??_CANReadVersion& (0+255),c
  4348  00194A  0E02               	movlw	2
  4349  00194C  2603               	addwf	??_CANReadVersion,f,c
  4350  00194E  C003  FFF6         	movff	??_CANReadVersion,tblptrl
  4351  001952  0E0F               	movlw	high __smallconst
  4352  001954  6EF7               	movwf	tblptrh,c
  4353  001956  0008               	tblrd		*
  4354  001958  CFF5 F050          	movff	tablat,_CANSdata+3
  4355                           
  4356                           ;YellowFlash.C: 563: CANSdata[4]=board_version[3];
  4357  00195C  0E00               	movlw	_board_version& (0+255)
  4358  00195E  6E03               	movwf	??_CANReadVersion& (0+255),c
  4359  001960  0E03               	movlw	3
  4360  001962  2603               	addwf	??_CANReadVersion,f,c
  4361  001964  C003  FFF6         	movff	??_CANReadVersion,tblptrl
  4362  001968  0E0F               	movlw	high __smallconst
  4363  00196A  6EF7               	movwf	tblptrh,c
  4364  00196C  0008               	tblrd		*
  4365  00196E  CFF5 F051          	movff	tablat,_CANSdata+4
  4366                           
  4367                           ;YellowFlash.C: 564: CANSdata[5]=board_version[4];
  4368  001972  0E00               	movlw	_board_version& (0+255)
  4369  001974  6E03               	movwf	??_CANReadVersion& (0+255),c
  4370  001976  0E04               	movlw	4
  4371  001978  2603               	addwf	??_CANReadVersion,f,c
  4372  00197A  C003  FFF6         	movff	??_CANReadVersion,tblptrl
  4373  00197E  0E0F               	movlw	high __smallconst
  4374  001980  6EF7               	movwf	tblptrh,c
  4375  001982  0008               	tblrd		*
  4376  001984  CFF5 F052          	movff	tablat,_CANSdata+5
  4377                           
  4378                           ;YellowFlash.C: 566: CANSend(CANSid,CANSdata,CANSdlc);
  4379  001988  0E4D               	movlw	low _CANSdata
  4380  00198A  6E01               	movwf	?_CANSend,c
  4381  00198C  C05B  F002         	movff	_CANSdlc,?_CANSend+1
  4382  001990  0EEC               	movlw	_CANSid& (0+255)
  4383  001992  EFF7  F009         	goto	_CANSend
  4384  001996                     __end_of_CANReadVersion:
  4385                           	opt stack 0
  4386                           tblptru	equ	0xFF8
  4387                           tblptrh	equ	0xFF7
  4388                           tblptrl	equ	0xFF6
  4389                           tablat	equ	0xFF5
  4390                           prodh	equ	0xFF4
  4391                           prodl	equ	0xFF3
  4392                           intcon	equ	0xFF2
  4393                           postinc0	equ	0xFEE
  4394                           wreg	equ	0xFE8
  4395                           indf1	equ	0xFE7
  4396                           postdec1	equ	0xFE5
  4397                           fsr1h	equ	0xFE2
  4398                           fsr1l	equ	0xFE1
  4399                           indf2	equ	0xFDF
  4400                           postinc2	equ	0xFDE
  4401                           postdec2	equ	0xFDD
  4402                           fsr2h	equ	0xFDA
  4403                           fsr2l	equ	0xFD9
  4404                           status	equ	0xFD8
  4405                           
  4406 ;; *************** function _CANSend *****************
  4407 ;; Defined at:
  4408 ;;		line 163 in file "G:\working\YellowFlashingController\CAN.H"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  id              1    wreg     PTR unsigned char 
  4411 ;;		 -> CANSid(4), 
  4412 ;;  dat             1    0[COMRAM] PTR unsigned char 
  4413 ;;		 -> CANSdata(8), 
  4414 ;;  dlc             1    1[COMRAM] unsigned char 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  id              1    0[COMRAM] PTR unsigned char 
  4417 ;;		 -> CANSid(4), 
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  1    wreg      unsigned char 
  4420 ;; Registers used:
  4421 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4422 ;; Tracked objects:
  4423 ;;		On entry : F/0
  4424 ;;		On exit  : F/F
  4425 ;;		Unchanged: FFFFFFF0/0
  4426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4427 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4430 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4431 ;;Total ram usage:        2 bytes
  4432 ;; Hardware stack levels used:    1
  4433 ;; Hardware stack levels required when called:    4
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_CANSendConfirm
  4438 ;;		_CANSendID
  4439 ;;		_CANReadVersion
  4440 ;;		_CANDATAAnalyzing
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text20
  4445  0013EE                     __ptext20:
  4446                           	opt stack 0
  4447  0013EE                     _CANSend:
  4448                           	opt stack 24
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;CAN.H: 165: if(!(TXB0CON & 0x80))
  4452                           
  4453                           ; BSR set to: 15
  4454  0013EE  010F               	movlb	15	; () banked
  4455  0013F0  BF20               	btfsc	32,7,b	;volatile
  4456  0013F2  D019               	goto	l347
  4457                           
  4458                           ; BSR set to: 15
  4459                           ;CAN.H: 166: {
  4460                           ;CAN.H: 176: TXB0DLC = dlc;
  4461  0013F4  C002  FF25         	movff	CANSend@dlc,3877	;volatile
  4462                           
  4463                           ; BSR set to: 15
  4464                           ;CAN.H: 179: TXB0D0 = dat[0];
  4465  0013F8  5001               	movf	CANSend@dat,w,c
  4466  0013FA  6ED9               	movwf	fsr2l,c
  4467  0013FC  6ADA               	clrf	fsr2h,c
  4468  0013FE  50DF               	movf	indf2,w,c
  4469  001400  6F26               	movwf	38,b	;volatile
  4470                           
  4471                           ; BSR set to: 15
  4472                           ;CAN.H: 180: TXB0D1 = dat[1];
  4473  001402  D877               	call	PL18	;call to abstracted procedure
  4474  001404  6F27               	movwf	39,b	;volatile
  4475                           
  4476                           ; BSR set to: 15
  4477                           ;CAN.H: 181: TXB0D2 = dat[2];
  4478  001406  D845               	call	PL9	;call to abstracted procedure
  4479  001408  6F28               	movwf	40,b	;volatile
  4480                           
  4481                           ; BSR set to: 15
  4482                           ;CAN.H: 182: TXB0D3 = dat[3];
  4483  00140A  D84B               	call	PL10	;call to abstracted procedure
  4484  00140C  6F29               	movwf	41,b	;volatile
  4485                           
  4486                           ; BSR set to: 15
  4487                           ;CAN.H: 183: TXB0D4 = dat[4];
  4488  00140E  D859               	call	PL12	;call to abstracted procedure
  4489  001410  6F2A               	movwf	42,b	;volatile
  4490                           
  4491                           ; BSR set to: 15
  4492                           ;CAN.H: 184: TXB0D5 = dat[5];
  4493  001412  D84F               	call	PL11	;call to abstracted procedure
  4494  001414  6F2B               	movwf	43,b	;volatile
  4495                           
  4496                           ; BSR set to: 15
  4497                           ;CAN.H: 185: TXB0D6 = dat[6];
  4498  001416  D85D               	call	PL13	;call to abstracted procedure
  4499  001418  6F2C               	movwf	44,b	;volatile
  4500                           
  4501                           ; BSR set to: 15
  4502                           ;CAN.H: 186: TXB0D7 = dat[7];
  4503  00141A  D863               	call	PL14	;call to abstracted procedure
  4504  00141C  6F2D               	movwf	45,b	;volatile
  4505                           
  4506                           ; BSR set to: 15
  4507                           ;CAN.H: 189: TXB0CON |= 0x08;
  4508  00141E  8720               	bsf	32,3,b	;volatile
  4509  001420                     l348:
  4510                           
  4511                           ; BSR set to: 15
  4512  001420  A720               	btfss	32,3,b	;volatile
  4513  001422  0012               	return	
  4514  001424  D7FD               	goto	l348
  4515  001426                     l347:
  4516                           
  4517                           ; BSR set to: 15
  4518                           ;CAN.H: 192: }
  4519                           ;CAN.H: 194: if(!(TXB1CON & 0x80))
  4520  001426  BF10               	btfsc	16,7,b	;volatile
  4521  001428  D019               	goto	l352
  4522                           
  4523                           ; BSR set to: 15
  4524                           ;CAN.H: 195: {
  4525                           ;CAN.H: 205: TXB1DLC = dlc;
  4526  00142A  C002  FF15         	movff	CANSend@dlc,3861	;volatile
  4527                           
  4528                           ; BSR set to: 15
  4529                           ;CAN.H: 208: TXB1D0 = dat[0];
  4530  00142E  5001               	movf	CANSend@dat,w,c
  4531  001430  6ED9               	movwf	fsr2l,c
  4532  001432  6ADA               	clrf	fsr2h,c
  4533  001434  50DF               	movf	indf2,w,c
  4534  001436  6F16               	movwf	22,b	;volatile
  4535                           
  4536                           ; BSR set to: 15
  4537                           ;CAN.H: 209: TXB1D1 = dat[1];
  4538  001438  D85C               	call	PL18	;call to abstracted procedure
  4539  00143A  6F17               	movwf	23,b	;volatile
  4540                           
  4541                           ; BSR set to: 15
  4542                           ;CAN.H: 210: TXB1D2 = dat[2];
  4543  00143C  D82A               	call	PL9	;call to abstracted procedure
  4544  00143E  6F18               	movwf	24,b	;volatile
  4545                           
  4546                           ; BSR set to: 15
  4547                           ;CAN.H: 211: TXB1D3 = dat[3];
  4548  001440  D830               	call	PL10	;call to abstracted procedure
  4549  001442  6F19               	movwf	25,b	;volatile
  4550                           
  4551                           ; BSR set to: 15
  4552                           ;CAN.H: 212: TXB1D4 = dat[4];
  4553  001444  D83E               	call	PL12	;call to abstracted procedure
  4554  001446  6F1A               	movwf	26,b	;volatile
  4555                           
  4556                           ; BSR set to: 15
  4557                           ;CAN.H: 213: TXB1D5 = dat[5];
  4558  001448  D834               	call	PL11	;call to abstracted procedure
  4559  00144A  6F1B               	movwf	27,b	;volatile
  4560                           
  4561                           ; BSR set to: 15
  4562                           ;CAN.H: 214: TXB1D6 = dat[6];
  4563  00144C  D842               	call	PL13	;call to abstracted procedure
  4564  00144E  6F1C               	movwf	28,b	;volatile
  4565                           
  4566                           ; BSR set to: 15
  4567                           ;CAN.H: 215: TXB1D7 = dat[7];
  4568  001450  D848               	call	PL14	;call to abstracted procedure
  4569  001452  6F1D               	movwf	29,b	;volatile
  4570                           
  4571                           ; BSR set to: 15
  4572                           ;CAN.H: 218: TXB0CON |= 0x08;
  4573  001454  8720               	bsf	32,3,b	;volatile
  4574  001456                     l353:
  4575                           
  4576                           ; BSR set to: 15
  4577  001456  A720               	btfss	32,3,b	;volatile
  4578  001458  0012               	return	
  4579  00145A  D7FD               	goto	l353
  4580  00145C                     l352:
  4581                           
  4582                           ; BSR set to: 15
  4583                           ;CAN.H: 221: }
  4584                           ;CAN.H: 223: if(!(TXB2CON & 0x80))
  4585  00145C  BF00               	btfsc	0,7,b	;volatile
  4586  00145E  0012               	return	
  4587                           
  4588                           ; BSR set to: 15
  4589                           ;CAN.H: 224: {
  4590                           ;CAN.H: 234: TXB2DLC = dlc;
  4591  001460  C002  FF05         	movff	CANSend@dlc,3845	;volatile
  4592                           
  4593                           ; BSR set to: 15
  4594                           ;CAN.H: 237: TXB2D0 = dat[0];
  4595  001464  5001               	movf	CANSend@dat,w,c
  4596  001466  6ED9               	movwf	fsr2l,c
  4597  001468  6ADA               	clrf	fsr2h,c
  4598  00146A  50DF               	movf	indf2,w,c
  4599  00146C  6F06               	movwf	6,b	;volatile
  4600                           
  4601                           ; BSR set to: 15
  4602                           ;CAN.H: 238: TXB2D1 = dat[1];
  4603  00146E  D841               	call	PL18	;call to abstracted procedure
  4604  001470  6F07               	movwf	7,b	;volatile
  4605                           
  4606                           ; BSR set to: 15
  4607                           ;CAN.H: 239: TXB2D2 = dat[2];
  4608  001472  D80F               	call	PL9	;call to abstracted procedure
  4609  001474  6F08               	movwf	8,b	;volatile
  4610                           
  4611                           ; BSR set to: 15
  4612                           ;CAN.H: 240: TXB2D3 = dat[3];
  4613  001476  D815               	call	PL10	;call to abstracted procedure
  4614  001478  6F09               	movwf	9,b	;volatile
  4615                           
  4616                           ; BSR set to: 15
  4617                           ;CAN.H: 241: TXB2D4 = dat[4];
  4618  00147A  D823               	call	PL12	;call to abstracted procedure
  4619  00147C  6F0A               	movwf	10,b	;volatile
  4620                           
  4621                           ; BSR set to: 15
  4622                           ;CAN.H: 242: TXB2D5 = dat[5];
  4623  00147E  D819               	call	PL11	;call to abstracted procedure
  4624  001480  6F0B               	movwf	11,b	;volatile
  4625                           
  4626                           ; BSR set to: 15
  4627                           ;CAN.H: 243: TXB2D6 = dat[6];
  4628  001482  D827               	call	PL13	;call to abstracted procedure
  4629  001484  6F0C               	movwf	12,b	;volatile
  4630                           
  4631                           ; BSR set to: 15
  4632                           ;CAN.H: 244: TXB2D7 = dat[7];
  4633  001486  D82D               	call	PL14	;call to abstracted procedure
  4634  001488  6F0D               	movwf	13,b	;volatile
  4635                           
  4636                           ; BSR set to: 15
  4637                           ;CAN.H: 247: TXB2CON |= 0x08;
  4638  00148A  8700               	bsf	0,3,b	;volatile
  4639  00148C                     l357:
  4640                           
  4641                           ; BSR set to: 15
  4642  00148C  A700               	btfss	0,3,b	;volatile
  4643                           
  4644                           ; BSR set to: 15
  4645  00148E  0012               	return	
  4646  001490  D7FD               	goto	l357
  4647  001492                     __end_of_CANSend:
  4648                           	opt stack 0
  4649  001492                     PL9:
  4650  001492  5001               	movf	CANSend@dat,w,c
  4651  001494  6ED9               	movwf	fsr2l,c
  4652  001496  6ADA               	clrf	fsr2h,c
  4653  001498  0E02               	movlw	2
  4654  00149A  26D9               	addwf	fsr2l,f,c
  4655  00149C  6ADA               	clrf	fsr2h,c
  4656  00149E  50DF               	movf	indf2,w,c
  4657  0014A0  0012               	return	
  4658  0014A2                     PL10:
  4659  0014A2  5001               	movf	CANSend@dat,w,c
  4660  0014A4  6ED9               	movwf	fsr2l,c
  4661  0014A6  6ADA               	clrf	fsr2h,c
  4662  0014A8  0E03               	movlw	3
  4663  0014AA  26D9               	addwf	fsr2l,f,c
  4664  0014AC  6ADA               	clrf	fsr2h,c
  4665  0014AE  50DF               	movf	indf2,w,c
  4666  0014B0  0012               	return	
  4667  0014B2                     PL11:
  4668  0014B2  5001               	movf	CANSend@dat,w,c
  4669  0014B4  6ED9               	movwf	fsr2l,c
  4670  0014B6  6ADA               	clrf	fsr2h,c
  4671  0014B8  0E05               	movlw	5
  4672  0014BA  26D9               	addwf	fsr2l,f,c
  4673  0014BC  6ADA               	clrf	fsr2h,c
  4674  0014BE  50DF               	movf	indf2,w,c
  4675  0014C0  0012               	return	
  4676  0014C2                     PL12:
  4677  0014C2  5001               	movf	CANSend@dat,w,c
  4678  0014C4  6ED9               	movwf	fsr2l,c
  4679  0014C6  6ADA               	clrf	fsr2h,c
  4680  0014C8  0E04               	movlw	4
  4681  0014CA  26D9               	addwf	fsr2l,f,c
  4682  0014CC  6ADA               	clrf	fsr2h,c
  4683  0014CE  50DF               	movf	indf2,w,c
  4684  0014D0  0012               	return	
  4685  0014D2                     PL13:
  4686  0014D2  5001               	movf	CANSend@dat,w,c
  4687  0014D4  6ED9               	movwf	fsr2l,c
  4688  0014D6  6ADA               	clrf	fsr2h,c
  4689  0014D8  0E06               	movlw	6
  4690  0014DA  26D9               	addwf	fsr2l,f,c
  4691  0014DC  6ADA               	clrf	fsr2h,c
  4692  0014DE  50DF               	movf	indf2,w,c
  4693  0014E0  0012               	return	
  4694  0014E2                     PL14:
  4695  0014E2  5001               	movf	CANSend@dat,w,c
  4696  0014E4  6ED9               	movwf	fsr2l,c
  4697  0014E6  6ADA               	clrf	fsr2h,c
  4698  0014E8  0E07               	movlw	7
  4699  0014EA  26D9               	addwf	fsr2l,f,c
  4700  0014EC  6ADA               	clrf	fsr2h,c
  4701  0014EE  50DF               	movf	indf2,w,c
  4702  0014F0  0012               	return	
  4703  0014F2                     PL18:
  4704  0014F2  5001               	movf	CANSend@dat,w,c
  4705  0014F4  6ED9               	movwf	fsr2l,c
  4706  0014F6  6ADA               	clrf	fsr2h,c
  4707  0014F8  2AD9               	incf	fsr2l,f,c
  4708  0014FA  6ADA               	clrf	fsr2h,c
  4709  0014FC  50DF               	movf	indf2,w,c
  4710  0014FE  0012               	return	
  4711                           tblptru	equ	0xFF8
  4712                           tblptrh	equ	0xFF7
  4713                           tblptrl	equ	0xFF6
  4714                           tablat	equ	0xFF5
  4715                           prodh	equ	0xFF4
  4716                           prodl	equ	0xFF3
  4717                           intcon	equ	0xFF2
  4718                           postinc0	equ	0xFEE
  4719                           wreg	equ	0xFE8
  4720                           indf1	equ	0xFE7
  4721                           postdec1	equ	0xFE5
  4722                           fsr1h	equ	0xFE2
  4723                           fsr1l	equ	0xFE1
  4724                           indf2	equ	0xFDF
  4725                           postinc2	equ	0xFDE
  4726                           postdec2	equ	0xFDD
  4727                           fsr2h	equ	0xFDA
  4728                           fsr2l	equ	0xFD9
  4729                           status	equ	0xFD8
  4730                           
  4731 ;; *************** function _HeartbeatTest *****************
  4732 ;; Defined at:
  4733 ;;		line 777 in file "G:\working\YellowFlashingController\YellowFlash.C"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;		None
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;		None
  4738 ;; Return value:  Size  Location     Type
  4739 ;;		None               void
  4740 ;; Registers used:
  4741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/F
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4751 ;;Total ram usage:        0 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    6
  4754 ;; This function calls:
  4755 ;;		_Read_YFlash_CFG
  4756 ;; This function is called by:
  4757 ;;		_main
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text21
  4762  001D22                     __ptext21:
  4763                           	opt stack 0
  4764  001D22                     _HeartbeatTest:
  4765                           	opt stack 24
  4766                           
  4767                           ;YellowFlash.C: 779: if(time5ms == 1)
  4768                           
  4769                           ; BSR set to: 15
  4770  001D22  0100               	movlb	(_time5ms/(0+8)) shr (0+8)
  4771  001D24  A25F               	btfss	_time5ms/(0+8),_time5ms& (0+7),c
  4772  001D26  0012               	return	
  4773                           
  4774                           ;YellowFlash.C: 780: {
  4775                           ;YellowFlash.C: 781: time5ms = 0;
  4776  001D28  925F               	bcf	_time5ms/(0+8),_time5ms& (0+7),c
  4777                           
  4778                           ;YellowFlash.C: 782: t500ms_count++;
  4779  001D2A  2A4B               	incf	_t500ms_count,f,c
  4780                           
  4781                           ;YellowFlash.C: 783: if(t500ms_count>=100)
  4782  001D2C  0E63               	movlw	99
  4783  001D2E  644B               	cpfsgt	_t500ms_count,c
  4784  001D30  0C63               	retlw	99
  4785                           
  4786                           ;YellowFlash.C: 784: {
  4787                           ;YellowFlash.C: 785: t500ms_count=0;
  4788  001D32  6A4B               	clrf	_t500ms_count,c
  4789                           
  4790                           ;YellowFlash.C: 786: heartbeat++;
  4791  001D34  2A46               	incf	_heartbeat,f,c
  4792                           
  4793                           ;YellowFlash.C: 788: if(heartbeat>=4)
  4794  001D36  0E03               	movlw	3
  4795  001D38  6446               	cpfsgt	_heartbeat,c
  4796  001D3A  0C03               	retlw	3
  4797                           
  4798                           ;YellowFlash.C: 789: {
  4799                           ;YellowFlash.C: 790: heartbeat=0;
  4800  001D3C  6A46               	clrf	_heartbeat,c
  4801                           
  4802                           ;YellowFlash.C: 791: RD2=1;
  4803  001D3E  8483               	bsf	3971,2,c	;volatile
  4804                           
  4805                           ;YellowFlash.C: 792: TMR0ON = 0;
  4806  001D40  9ED5               	bcf	4053,7,c	;volatile
  4807                           
  4808                           ;YellowFlash.C: 793: TMR0IF = 0;
  4809  001D42  94F2               	bcf	intcon,2,c	;volatile
  4810                           
  4811                           ;YellowFlash.C: 794: yflash_status=0x06;
  4812  001D44  0E06               	movlw	6
  4813  001D46  6E4C               	movwf	_yflash_status,c
  4814                           
  4815                           ;YellowFlash.C: 795: Read_YFlash_CFG();
  4816  001D48  EC07  F00D         	call	_Read_YFlash_CFG	;wreg free
  4817                           
  4818                           ;YellowFlash.C: 796: T1CON |= 0x01;
  4819  001D4C  80CD               	bsf	4045,0,c	;volatile
  4820                           
  4821                           ;YellowFlash.C: 797: turnoff=0x01;
  4822  001D4E  0E01               	movlw	1
  4823  001D50  6E5C               	movwf	_turnoff,c
  4824                           
  4825                           ;YellowFlash.C: 798: switchmode=1;
  4826  001D52  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  4827  001D54  805F               	bsf	_switchmode/(0+8),_switchmode& (0+7),c
  4828  001D56  0C01               	retlw	1
  4829  001D58                     __end_of_HeartbeatTest:
  4830                           	opt stack 0
  4831                           tblptru	equ	0xFF8
  4832                           tblptrh	equ	0xFF7
  4833                           tblptrl	equ	0xFF6
  4834                           tablat	equ	0xFF5
  4835                           prodh	equ	0xFF4
  4836                           prodl	equ	0xFF3
  4837                           intcon	equ	0xFF2
  4838                           postinc0	equ	0xFEE
  4839                           wreg	equ	0xFE8
  4840                           indf1	equ	0xFE7
  4841                           postdec1	equ	0xFE5
  4842                           fsr1h	equ	0xFE2
  4843                           fsr1l	equ	0xFE1
  4844                           indf2	equ	0xFDF
  4845                           postinc2	equ	0xFDE
  4846                           postdec2	equ	0xFDD
  4847                           fsr2h	equ	0xFDA
  4848                           fsr2l	equ	0xFD9
  4849                           status	equ	0xFD8
  4850                           
  4851 ;; *************** function _Read_YFlash_CFG *****************
  4852 ;; Defined at:
  4853 ;;		line 453 in file "G:\working\YellowFlashingController\YellowFlash.C"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;		None
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;		None
  4858 ;; Return value:  Size  Location     Type
  4859 ;;		None               void
  4860 ;; Registers used:
  4861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4871 ;;Total ram usage:        0 bytes
  4872 ;; Hardware stack levels used:    1
  4873 ;; Hardware stack levels required when called:    5
  4874 ;; This function calls:
  4875 ;;		_EEPROMRead
  4876 ;; This function is called by:
  4877 ;;		_CANDATAAnalyzing
  4878 ;;		_HeartbeatTest
  4879 ;; This function uses a non-reentrant model
  4880 ;;
  4881                           
  4882                           	psect	text22
  4883  001A0E                     __ptext22:
  4884                           	opt stack 0
  4885  001A0E                     _Read_YFlash_CFG:
  4886                           	opt stack 24
  4887                           
  4888                           ;YellowFlash.C: 454: eeprom_addr = 0x0005;
  4889  001A0E  6A56               	clrf	_eeprom_addr+1,c
  4890  001A10  0E05               	movlw	5
  4891                           
  4892                           ;YellowFlash.C: 455: eeprom_num = 2;
  4893                           
  4894                           ;YellowFlash.C: 456: EEPROMRead(&eeprom_addr,&eeprom_num,&readwrite);
  4895  001A12  D82D               	call	PL25	;call to abstracted procedure
  4896  001A14  EC39  F00E         	call	_EEPROMRead
  4897                           
  4898                           ;YellowFlash.C: 457: time_on_counter=readwrite[0];
  4899  001A18  C057  F042         	movff	_readwrite,_time_on_counter
  4900  001A1C  6A43               	clrf	_time_on_counter+1,c
  4901                           
  4902                           ;YellowFlash.C: 458: time_counters=readwrite[1];
  4903  001A1E  C058  F03E         	movff	_readwrite+1,_time_counters
  4904  001A22  6A3F               	clrf	_time_counters+1,c
  4905                           
  4906                           ;YellowFlash.C: 460: time_on_counter|=time_counters;
  4907  001A24  503E               	movf	_time_counters,w,c
  4908  001A26  1242               	iorwf	_time_on_counter,f,c
  4909  001A28  503F               	movf	_time_counters+1,w,c
  4910  001A2A  1243               	iorwf	_time_on_counter+1,f,c
  4911                           
  4912                           ;YellowFlash.C: 463: eeprom_addr = 0x0007;
  4913  001A2C  6A56               	clrf	_eeprom_addr+1,c
  4914  001A2E  0E07               	movlw	7
  4915                           
  4916                           ;YellowFlash.C: 464: eeprom_num = 2;
  4917                           
  4918                           ;YellowFlash.C: 465: EEPROMRead(&eeprom_addr,&eeprom_num,&readwrite);
  4919  001A30  D81E               	call	PL25	;call to abstracted procedure
  4920  001A32  EC39  F00E         	call	_EEPROMRead
  4921                           
  4922                           ;YellowFlash.C: 466: time_off_counter=readwrite[0];
  4923  001A36  C057  F040         	movff	_readwrite,_time_off_counter
  4924  001A3A  6A41               	clrf	_time_off_counter+1,c
  4925                           
  4926                           ;YellowFlash.C: 467: time_counters=readwrite[1];
  4927  001A3C  C058  F03E         	movff	_readwrite+1,_time_counters
  4928  001A40  6A3F               	clrf	_time_counters+1,c
  4929                           
  4930                           ;YellowFlash.C: 469: time_off_counter|=time_counters;
  4931  001A42  503E               	movf	_time_counters,w,c
  4932  001A44  1240               	iorwf	_time_off_counter,f,c
  4933  001A46  503F               	movf	_time_counters+1,w,c
  4934  001A48  1241               	iorwf	_time_off_counter+1,f,c
  4935                           
  4936                           ;YellowFlash.C: 472: eeprom_addr = 0x0009;
  4937                           
  4938                           ;YellowFlash.C: 473: eeprom_num = 2;
  4939                           
  4940                           ;YellowFlash.C: 474: EEPROMRead(&eeprom_addr,&eeprom_num,&yflash_CFG);
  4941  001A4A  D806               	call	PL3	;call to abstracted procedure
  4942  001A4C  EC39  F00E         	call	_EEPROMRead
  4943                           
  4944                           ;YellowFlash.C: 475: run_mode=(yflash_CFG[1]&0x03);
  4945  001A50  505A               	movf	_yflash_CFG+1,w,c
  4946  001A52  0B03               	andlw	3
  4947  001A54  6E4A               	movwf	_run_mode,c
  4948  001A56  0012               	return	
  4949  001A58                     __end_of_Read_YFlash_CFG:
  4950                           	opt stack 0
  4951  001A58                     PL3:
  4952  001A58  6A56               	clrf	_eeprom_addr+1,c
  4953  001A5A  0E09               	movlw	9
  4954  001A5C  6E55               	movwf	_eeprom_addr,c
  4955  001A5E  0E02               	movlw	2
  4956  001A60  6E5E               	movwf	_eeprom_num,c
  4957  001A62  0E5E               	movlw	low _eeprom_num
  4958  001A64  6E01               	movwf	?_EEPROMRead,c
  4959  001A66  0E59               	movlw	low _yflash_CFG
  4960  001A68  6E02               	movwf	?_EEPROMRead+1,c
  4961  001A6A  0E55               	movlw	_eeprom_addr& (0+255)
  4962  001A6C  0012               	return	
  4963  001A6E                     PL25:
  4964  001A6E  6E55               	movwf	_eeprom_addr,c
  4965  001A70  0E02               	movlw	2
  4966  001A72  6E5E               	movwf	_eeprom_num,c
  4967  001A74  0E5E               	movlw	low _eeprom_num
  4968  001A76  6E01               	movwf	?_EEPROMRead,c
  4969  001A78  0E57               	movlw	low _readwrite
  4970  001A7A  6E02               	movwf	?_EEPROMRead+1,c
  4971  001A7C  0E55               	movlw	_eeprom_addr& (0+255)
  4972  001A7E  0012               	return	
  4973                           tblptru	equ	0xFF8
  4974                           tblptrh	equ	0xFF7
  4975                           tblptrl	equ	0xFF6
  4976                           tablat	equ	0xFF5
  4977                           prodh	equ	0xFF4
  4978                           prodl	equ	0xFF3
  4979                           intcon	equ	0xFF2
  4980                           postinc0	equ	0xFEE
  4981                           wreg	equ	0xFE8
  4982                           indf1	equ	0xFE7
  4983                           postdec1	equ	0xFE5
  4984                           fsr1h	equ	0xFE2
  4985                           fsr1l	equ	0xFE1
  4986                           indf2	equ	0xFDF
  4987                           postinc2	equ	0xFDE
  4988                           postdec2	equ	0xFDD
  4989                           fsr2h	equ	0xFDA
  4990                           fsr2l	equ	0xFD9
  4991                           status	equ	0xFD8
  4992                           
  4993 ;; *************** function _EEPROMRead *****************
  4994 ;; Defined at:
  4995 ;;		line 33 in file "G:\working\YellowFlashingController\mcu.h"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  addr            1    wreg     PTR unsigned char 
  4998 ;;		 -> eeprom_addr(2), 
  4999 ;;  num             1    0[COMRAM] PTR unsigned char 
  5000 ;;		 -> eeprom_num(1), 
  5001 ;;  dat             1    1[COMRAM] PTR unsigned char 
  5002 ;;		 -> yflash_CFG(2), readwrite(2), CANSdata(8), 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  addr            1    2[COMRAM] PTR unsigned char 
  5005 ;;		 -> eeprom_addr(2), 
  5006 ;; Return value:  Size  Location     Type
  5007 ;;		None               void
  5008 ;; Registers used:
  5009 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5015 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5016 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5018 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5019 ;;Total ram usage:        3 bytes
  5020 ;; Hardware stack levels used:    1
  5021 ;; Hardware stack levels required when called:    4
  5022 ;; This function calls:
  5023 ;;		Nothing
  5024 ;; This function is called by:
  5025 ;;		_CANSendID
  5026 ;;		_Read_YFlash_CFG
  5027 ;;		_YFlashNewConfigure
  5028 ;;		_CANDATAAnalyzing
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text23
  5033  001C72                     __ptext23:
  5034                           	opt stack 0
  5035  001C72                     _EEPROMRead:
  5036                           	opt stack 24
  5037                           
  5038                           ;EEPROMRead@addr stored from wreg
  5039  001C72  CFE8 F003          	movff	wreg,EEPROMRead@addr
  5040  001C76                     l371:
  5041                           
  5042                           ;mcu.h: 35: {
  5043                           ;mcu.h: 36: EEADRH = (*addr)>>8;
  5044  001C76  6A75               	clrf	3957,c	;volatile
  5045                           
  5046                           ;mcu.h: 37: EEADR = (*addr);
  5047  001C78  5003               	movf	EEPROMRead@addr,w,c
  5048  001C7A  6ED9               	movwf	fsr2l,c
  5049  001C7C  6ADA               	clrf	fsr2h,c
  5050  001C7E  50DF               	movf	indf2,w,c
  5051  001C80  6E74               	movwf	3956,c	;volatile
  5052                           
  5053                           ;mcu.h: 38: (*addr)++;
  5054  001C82  5003               	movf	EEPROMRead@addr,w,c
  5055  001C84  6ED9               	movwf	fsr2l,c
  5056  001C86  6ADA               	clrf	fsr2h,c
  5057  001C88  2ADF               	incf	indf2,f,c
  5058                           
  5059                           ;mcu.h: 40: EEDATA = 0;
  5060  001C8A  6A73               	clrf	3955,c	;volatile
  5061                           
  5062                           ;mcu.h: 42: EECON1 &= 0x3f;
  5063  001C8C  0E3F               	movlw	63
  5064  001C8E  167F               	andwf	3967,f,c	;volatile
  5065                           
  5066                           ;mcu.h: 45: EECON1 |= 0x01;
  5067  001C90  807F               	bsf	3967,0,c	;volatile
  5068  001C92  F000               	nop		;# 
  5069                           
  5070                           ;mcu.h: 48: (*dat) = EEDATA;
  5071  001C94  5002               	movf	EEPROMRead@dat,w,c
  5072  001C96  6ED9               	movwf	fsr2l,c
  5073  001C98  6ADA               	clrf	fsr2h,c
  5074  001C9A  CF73 FFDF          	movff	3955,indf2	;volatile
  5075                           
  5076                           ;mcu.h: 49: dat++;
  5077  001C9E  2A02               	incf	EEPROMRead@dat,f,c
  5078                           
  5079                           ;mcu.h: 50: }
  5080                           ;mcu.h: 51: while((*num)--);
  5081  001CA0  5001               	movf	EEPROMRead@num,w,c
  5082  001CA2  6ED9               	movwf	fsr2l,c
  5083  001CA4  6ADA               	clrf	fsr2h,c
  5084  001CA6  06DF               	decf	indf2,f,c
  5085  001CA8  0EFF               	movlw	255
  5086  001CAA  62DF               	cpfseq	indf2,c
  5087  001CAC  D7E4               	goto	l371
  5088  001CAE  0CFF               	retlw	255
  5089  001CB0                     __end_of_EEPROMRead:
  5090                           	opt stack 0
  5091                           tblptru	equ	0xFF8
  5092                           tblptrh	equ	0xFF7
  5093                           tblptrl	equ	0xFF6
  5094                           tablat	equ	0xFF5
  5095                           prodh	equ	0xFF4
  5096                           prodl	equ	0xFF3
  5097                           intcon	equ	0xFF2
  5098                           postinc0	equ	0xFEE
  5099                           wreg	equ	0xFE8
  5100                           indf1	equ	0xFE7
  5101                           postdec1	equ	0xFE5
  5102                           fsr1h	equ	0xFE2
  5103                           fsr1l	equ	0xFE1
  5104                           indf2	equ	0xFDF
  5105                           postinc2	equ	0xFDE
  5106                           postdec2	equ	0xFDD
  5107                           fsr2h	equ	0xFDA
  5108                           fsr2l	equ	0xFD9
  5109                           status	equ	0xFD8
  5110                           
  5111 ;; *************** function ___ftmul *****************
  5112 ;; Defined at:
  5113 ;;		line 52 in file "D:\HI-TECH Software\PICC-18\9.80\sources\ftmul.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;  f1              3    8[COMRAM] float 
  5116 ;;  f2              3   11[COMRAM] float 
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  f3_as_produc    3   20[COMRAM] unsigned um
  5119 ;;  sign            1   24[COMRAM] unsigned char 
  5120 ;;  cntr            1   23[COMRAM] unsigned char 
  5121 ;;  exp             1   19[COMRAM] unsigned char 
  5122 ;; Return value:  Size  Location     Type
  5123 ;;                  3    8[COMRAM] float 
  5124 ;; Registers used:
  5125 ;;		wreg, status,2, status,0, cstack
  5126 ;; Tracked objects:
  5127 ;;		On entry : F/0
  5128 ;;		On exit  : 0/0
  5129 ;;		Unchanged: FFFFFFF0/0
  5130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5131 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5132 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5133 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5134 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5135 ;;Total ram usage:       17 bytes
  5136 ;; Hardware stack levels used:    1
  5137 ;; Hardware stack levels required when called:    5
  5138 ;; This function calls:
  5139 ;;		___ftpack
  5140 ;; This function is called by:
  5141 ;;		_CalculateTime25msCounter
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           	psect	text24
  5146  001500                     __ptext24:
  5147                           	opt stack 0
  5148  001500                     ___ftmul:
  5149                           	opt stack 22
  5150                           
  5151                           ; BSR set to: 0
  5152  001500  0E0F               	movlw	15
  5153  001502  6E0F               	movwf	??___ftmul& (0+255),c
  5154  001504  C009  F010         	movff	___ftmul@f1,??___ftmul+1
  5155  001508  C00A  F011         	movff	___ftmul@f1+1,??___ftmul+2
  5156  00150C  C00B  F012         	movff	___ftmul@f1+2,??___ftmul+3
  5157  001510  280F               	incf	??___ftmul,w,c
  5158  001512  6E13               	movwf	(??___ftmul+4)& (0+255),c
  5159  001514  D001               	goto	u1350
  5160  001516                     u1355:
  5161  001516  D869               	call	PL28	;call to abstracted procedure
  5162  001518                     u1350:
  5163  001518  2E13               	decfsz	(??___ftmul+4)& (0+255),f,c
  5164  00151A  D7FD               	goto	u1355
  5165  00151C  5010               	movf	??___ftmul+1,w,c
  5166  00151E  6E14               	movwf	___ftmul@exp,c
  5167  001520  6614               	tstfsz	___ftmul@exp& (0+255),c
  5168  001522  D004               	goto	l3259
  5169  001524  6A09               	clrf	?___ftmul,c
  5170  001526  6A0A               	clrf	?___ftmul+1,c
  5171  001528  6A0B               	clrf	?___ftmul+2,c
  5172  00152A  0012               	return	
  5173  00152C                     l3259:
  5174  00152C  0E0F               	movlw	15
  5175  00152E  6E0F               	movwf	??___ftmul& (0+255),c
  5176  001530  C00C  F010         	movff	___ftmul@f2,??___ftmul+1
  5177  001534  C00D  F011         	movff	___ftmul@f2+1,??___ftmul+2
  5178  001538  C00E  F012         	movff	___ftmul@f2+2,??___ftmul+3
  5179  00153C  280F               	incf	??___ftmul,w,c
  5180  00153E  6E13               	movwf	(??___ftmul+4)& (0+255),c
  5181  001540  D001               	goto	u1370
  5182  001542                     u1375:
  5183  001542  D853               	call	PL28	;call to abstracted procedure
  5184  001544                     u1370:
  5185  001544  2E13               	decfsz	(??___ftmul+4)& (0+255),f,c
  5186  001546  D7FD               	goto	u1375
  5187  001548  5010               	movf	??___ftmul+1,w,c
  5188  00154A  6E19               	movwf	___ftmul@sign,c
  5189  00154C  6619               	tstfsz	___ftmul@sign& (0+255),c
  5190  00154E  D004               	goto	l3263
  5191  001550  6A09               	clrf	?___ftmul,c
  5192  001552  6A0A               	clrf	?___ftmul+1,c
  5193  001554  6A0B               	clrf	?___ftmul+2,c
  5194  001556  0012               	return	
  5195  001558                     l3263:
  5196  001558  5019               	movf	___ftmul@sign,w,c
  5197  00155A  0F7B               	addlw	123
  5198  00155C  2614               	addwf	___ftmul@exp,f,c
  5199  00155E  C00B  F019         	movff	___ftmul@f1+2,___ftmul@sign
  5200  001562  500E               	movf	(___ftmul@f2+2)& (0+255),w,c
  5201  001564  1A19               	xorwf	___ftmul@sign,f,c
  5202  001566  0E80               	movlw	128
  5203  001568  1619               	andwf	___ftmul@sign,f,c
  5204  00156A  8E0A               	bsf	___ftmul@f1+1,7,c
  5205  00156C  8E0D               	bsf	___ftmul@f2+1,7,c
  5206  00156E  0E00               	movlw	0
  5207  001570  160E               	andwf	___ftmul@f2+2,f,c
  5208  001572  6A15               	clrf	___ftmul@f3_as_product,c
  5209  001574  6A16               	clrf	___ftmul@f3_as_product+1,c
  5210  001576  6A17               	clrf	___ftmul@f3_as_product+2,c
  5211  001578  0E07               	movlw	7
  5212  00157A  6E18               	movwf	___ftmul@cntr,c
  5213  00157C                     l3277:
  5214  00157C  A009               	btfss	___ftmul@f1,0,c
  5215  00157E  D002               	goto	l3281
  5216  001580  500C               	movf	___ftmul@f2,w,c
  5217  001582  D82D               	call	PL26	;call to abstracted procedure
  5218  001584                     l3281:
  5219  001584  90D8               	bcf	status,0,c
  5220  001586  320B               	rrcf	___ftmul@f1+2,f,c
  5221  001588  320A               	rrcf	___ftmul@f1+1,f,c
  5222  00158A  3209               	rrcf	___ftmul@f1,f,c
  5223  00158C  90D8               	bcf	status,0,c
  5224  00158E  360C               	rlcf	___ftmul@f2,f,c
  5225  001590  360D               	rlcf	___ftmul@f2+1,f,c
  5226  001592  360E               	rlcf	___ftmul@f2+2,f,c
  5227  001594  2E18               	decfsz	___ftmul@cntr,f,c
  5228  001596  D7F2               	goto	l3277
  5229  001598  0E09               	movlw	9
  5230  00159A  6E18               	movwf	___ftmul@cntr,c
  5231  00159C                     l3287:
  5232  00159C  A009               	btfss	___ftmul@f1,0,c
  5233  00159E  D002               	goto	l3291
  5234  0015A0  500C               	movf	___ftmul@f2,w,c
  5235  0015A2  D81D               	call	PL26	;call to abstracted procedure
  5236  0015A4                     l3291:
  5237  0015A4  90D8               	bcf	status,0,c
  5238  0015A6  320B               	rrcf	___ftmul@f1+2,f,c
  5239  0015A8  320A               	rrcf	___ftmul@f1+1,f,c
  5240  0015AA  3209               	rrcf	___ftmul@f1,f,c
  5241  0015AC  90D8               	bcf	status,0,c
  5242  0015AE  3217               	rrcf	___ftmul@f3_as_product+2,f,c
  5243  0015B0  3216               	rrcf	___ftmul@f3_as_product+1,f,c
  5244  0015B2  3215               	rrcf	___ftmul@f3_as_product,f,c
  5245  0015B4  2E18               	decfsz	___ftmul@cntr,f,c
  5246  0015B6  D7F2               	goto	l3287
  5247  0015B8  C015  F001         	movff	___ftmul@f3_as_product,?___ftpack
  5248  0015BC  C016  F002         	movff	___ftmul@f3_as_product+1,?___ftpack+1
  5249  0015C0  C017  F003         	movff	___ftmul@f3_as_product+2,?___ftpack+2
  5250  0015C4  C014  F004         	movff	___ftmul@exp,?___ftpack+3
  5251  0015C8  C019  F005         	movff	___ftmul@sign,?___ftpack+4
  5252  0015CC  EC07  F00C         	call	___ftpack	;wreg free
  5253  0015D0  C001  F009         	movff	?___ftpack,?___ftmul
  5254  0015D4  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  5255  0015D8  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  5256  0015DC  0012               	return	
  5257  0015DE                     __end_of___ftmul:
  5258                           	opt stack 0
  5259  0015DE                     PL26:
  5260  0015DE  2615               	addwf	___ftmul@f3_as_product,f,c
  5261  0015E0  500D               	movf	___ftmul@f2+1,w,c
  5262  0015E2  2216               	addwfc	___ftmul@f3_as_product+1,f,c
  5263  0015E4  500E               	movf	___ftmul@f2+2,w,c
  5264  0015E6  2217               	addwfc	___ftmul@f3_as_product+2,f,c
  5265  0015E8  0012               	return	
  5266  0015EA                     PL28:
  5267  0015EA  90D8               	bcf	status,0,c
  5268  0015EC  3212               	rrcf	??___ftmul+3,f,c
  5269  0015EE  3211               	rrcf	??___ftmul+2,f,c
  5270  0015F0  3210               	rrcf	??___ftmul+1,f,c
  5271  0015F2  0012               	return	
  5272                           tblptru	equ	0xFF8
  5273                           tblptrh	equ	0xFF7
  5274                           tblptrl	equ	0xFF6
  5275                           tablat	equ	0xFF5
  5276                           prodh	equ	0xFF4
  5277                           prodl	equ	0xFF3
  5278                           intcon	equ	0xFF2
  5279                           postinc0	equ	0xFEE
  5280                           wreg	equ	0xFE8
  5281                           indf1	equ	0xFE7
  5282                           postdec1	equ	0xFE5
  5283                           fsr1h	equ	0xFE2
  5284                           fsr1l	equ	0xFE1
  5285                           indf2	equ	0xFDF
  5286                           postinc2	equ	0xFDE
  5287                           postdec2	equ	0xFDD
  5288                           fsr2h	equ	0xFDA
  5289                           fsr2l	equ	0xFD9
  5290                           status	equ	0xFD8
  5291                           
  5292 ;; *************** function ___ftpack *****************
  5293 ;; Defined at:
  5294 ;;		line 63 in file "D:\HI-TECH Software\PICC-18\9.80\sources\float.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  arg             3    0[COMRAM] unsigned um
  5297 ;;  exp             1    3[COMRAM] unsigned char 
  5298 ;;  sign            1    4[COMRAM] unsigned char 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;		None
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  3    0[COMRAM] float 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2, status,0
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: FFFFFFFF/0
  5309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5310 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5312 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5313 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5314 ;;Total ram usage:        8 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:    4
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		___ftmul
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           	psect	text25
  5325  00180E                     __ptext25:
  5326                           	opt stack 0
  5327  00180E                     ___ftpack:
  5328                           	opt stack 22
  5329  00180E  5004               	movf	___ftpack@exp,w,c
  5330  001810  E004               	bz	l854
  5331  001812  5001               	movf	___ftpack@arg,w,c
  5332  001814  1002               	iorwf	___ftpack@arg+1,w,c
  5333  001816  1003               	iorwf	___ftpack@arg+2,w,c
  5334  001818  E106               	bnz	l3229
  5335  00181A                     l854:
  5336  00181A  6A01               	clrf	?___ftpack,c
  5337  00181C  6A02               	clrf	?___ftpack+1,c
  5338  00181E  6A03               	clrf	?___ftpack+2,c
  5339  001820  0012               	return	
  5340  001822                     l3227:
  5341  001822  2A04               	incf	___ftpack@exp,f,c
  5342  001824  D838               	call	PL27	;call to abstracted procedure
  5343  001826                     l3229:
  5344  001826  6A06               	clrf	??___ftpack& (0+255),c
  5345  001828  6A07               	clrf	(??___ftpack+1)& (0+255),c
  5346  00182A  0EFE               	movlw	254
  5347  00182C  1403               	andwf	___ftpack@arg+2,w,c
  5348  00182E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5349  001830  5006               	movf	??___ftpack,w,c
  5350  001832  1007               	iorwf	??___ftpack+1,w,c
  5351  001834  1008               	iorwf	??___ftpack+2,w,c
  5352  001836  E007               	bz	l3235
  5353  001838  D7F4               	goto	l3227
  5354  00183A                     l3231:
  5355  00183A  2A04               	incf	___ftpack@exp,f,c
  5356  00183C  2A01               	incf	___ftpack@arg,f,c
  5357  00183E  0E00               	movlw	0
  5358  001840  2202               	addwfc	___ftpack@arg+1,f,c
  5359  001842  2203               	addwfc	___ftpack@arg+2,f,c
  5360  001844  D828               	call	PL27	;call to abstracted procedure
  5361  001846                     l3235:
  5362  001846  6A06               	clrf	??___ftpack& (0+255),c
  5363  001848  6A07               	clrf	(??___ftpack+1)& (0+255),c
  5364  00184A  5003               	movf	___ftpack@arg+2,w,c
  5365  00184C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5366  00184E  5006               	movf	??___ftpack,w,c
  5367  001850  1007               	iorwf	??___ftpack+1,w,c
  5368  001852  1008               	iorwf	??___ftpack+2,w,c
  5369  001854  E006               	bz	l3239
  5370  001856  D7F1               	goto	l3231
  5371  001858                     l3237:
  5372  001858  0604               	decf	___ftpack@exp,f,c
  5373  00185A  90D8               	bcf	status,0,c
  5374  00185C  3601               	rlcf	___ftpack@arg,f,c
  5375  00185E  3602               	rlcf	___ftpack@arg+1,f,c
  5376  001860  3603               	rlcf	___ftpack@arg+2,f,c
  5377  001862                     l3239:
  5378  001862  AE02               	btfss	___ftpack@arg+1,7,c
  5379  001864  D7F9               	goto	l3237
  5380  001866  A004               	btfss	___ftpack@exp,0,c
  5381  001868  9E02               	bcf	___ftpack@arg+1,7,c
  5382  00186A  90D8               	bcf	status,0,c
  5383  00186C  3204               	rrcf	___ftpack@exp,f,c
  5384  00186E  5004               	movf	___ftpack@exp,w,c
  5385  001870  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5386  001872  6A07               	clrf	(??___ftpack+1)& (0+255),c
  5387  001874  6A06               	clrf	??___ftpack& (0+255),c
  5388  001876  5006               	movf	??___ftpack,w,c
  5389  001878  1201               	iorwf	___ftpack@arg,f,c
  5390  00187A  5007               	movf	??___ftpack+1,w,c
  5391  00187C  1202               	iorwf	___ftpack@arg+1,f,c
  5392  00187E  5008               	movf	??___ftpack+2,w,c
  5393  001880  1203               	iorwf	___ftpack@arg+2,f,c
  5394  001882  5005               	movf	___ftpack@sign,w,c
  5395  001884  A4D8               	btfss	status,2,c
  5396  001886  8E03               	bsf	___ftpack@arg+2,7,c
  5397  001888  C001  F001         	movff	___ftpack@arg,?___ftpack
  5398  00188C  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5399  001890  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5400  001894  0012               	return	
  5401  001896                     __end_of___ftpack:
  5402                           	opt stack 0
  5403  001896                     PL27:
  5404  001896  90D8               	bcf	status,0,c
  5405  001898  3203               	rrcf	___ftpack@arg+2,f,c
  5406  00189A  3202               	rrcf	___ftpack@arg+1,f,c
  5407  00189C  3201               	rrcf	___ftpack@arg,f,c
  5408  00189E  0012               	return	
  5409                           tblptru	equ	0xFF8
  5410                           tblptrh	equ	0xFF7
  5411                           tblptrl	equ	0xFF6
  5412                           tablat	equ	0xFF5
  5413                           prodh	equ	0xFF4
  5414                           prodl	equ	0xFF3
  5415                           intcon	equ	0xFF2
  5416                           postinc0	equ	0xFEE
  5417                           wreg	equ	0xFE8
  5418                           indf1	equ	0xFE7
  5419                           postdec1	equ	0xFE5
  5420                           fsr1h	equ	0xFE2
  5421                           fsr1l	equ	0xFE1
  5422                           indf2	equ	0xFDF
  5423                           postinc2	equ	0xFDE
  5424                           postdec2	equ	0xFDD
  5425                           fsr2h	equ	0xFDA
  5426                           fsr2l	equ	0xFD9
  5427                           status	equ	0xFD8
  5428                           
  5429 ;; *************** function ___fttol *****************
  5430 ;; Defined at:
  5431 ;;		line 45 in file "D:\HI-TECH Software\PICC-18\9.80\sources\fttol.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;  f1              3   25[COMRAM] float 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;  lval            4   35[COMRAM] unsigned long 
  5436 ;;  exp1            1   39[COMRAM] unsigned char 
  5437 ;;  sign1           1   34[COMRAM] unsigned char 
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  4   25[COMRAM] long 
  5440 ;; Registers used:
  5441 ;;		wreg, status,2, status,0
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: FFFFFFF0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5447 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5448 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5449 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5450 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5451 ;;Total ram usage:       15 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:    4
  5454 ;; This function calls:
  5455 ;;		Nothing
  5456 ;; This function is called by:
  5457 ;;		_CalculateTime25msCounter
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text26
  5462  0016CA                     __ptext26:
  5463                           	opt stack 0
  5464  0016CA                     ___fttol:
  5465                           	opt stack 23
  5466  0016CA  0E0F               	movlw	15
  5467  0016CC  D843               	call	PL4	;call to abstracted procedure
  5468  0016CE  6E28               	movwf	___fttol@exp1,c
  5469  0016D0  6628               	tstfsz	___fttol@exp1& (0+255),c
  5470  0016D2  D005               	goto	l3303
  5471  0016D4                     l3301:
  5472  0016D4  6A1A               	clrf	?___fttol,c
  5473  0016D6  6A1B               	clrf	?___fttol+1,c
  5474  0016D8  6A1C               	clrf	?___fttol+2,c
  5475  0016DA  6A1D               	clrf	?___fttol+3,c
  5476  0016DC  0012               	return	
  5477  0016DE                     l3303:
  5478  0016DE  0E17               	movlw	23
  5479  0016E0  D839               	call	PL4	;call to abstracted procedure
  5480  0016E2  6E23               	movwf	___fttol@sign1,c
  5481  0016E4  8E1B               	bsf	___fttol@f1+1,7,c
  5482  0016E6  6A1C               	clrf	___fttol@f1+2,c
  5483  0016E8  501A               	movf	___fttol@f1,w,c
  5484  0016EA  6E24               	movwf	___fttol@lval,c
  5485  0016EC  501B               	movf	___fttol@f1+1,w,c
  5486  0016EE  6E25               	movwf	___fttol@lval+1,c
  5487  0016F0  501C               	movf	___fttol@f1+2,w,c
  5488  0016F2  6E26               	movwf	___fttol@lval+2,c
  5489  0016F4  6A27               	clrf	___fttol@lval+3,c
  5490  0016F6  0E8E               	movlw	142
  5491  0016F8  5E28               	subwf	___fttol@exp1,f,c
  5492  0016FA  AE28               	btfss	___fttol@exp1,7,c
  5493  0016FC  D00C               	goto	l3323
  5494  0016FE  5028               	movf	___fttol@exp1,w,c
  5495  001700  0A80               	xorlw	128
  5496  001702  0F8F               	addlw	143
  5497  001704  E3E7               	bnc	l3301
  5498  001706                     l3319:
  5499  001706  90D8               	bcf	status,0,c
  5500  001708  3227               	rrcf	___fttol@lval+3,f,c
  5501  00170A  3226               	rrcf	___fttol@lval+2,f,c
  5502  00170C  3225               	rrcf	___fttol@lval+1,f,c
  5503  00170E  3224               	rrcf	___fttol@lval,f,c
  5504  001710  3E28               	incfsz	___fttol@exp1,f,c
  5505  001712  D7F9               	goto	l3319
  5506  001714  D00C               	goto	l3331
  5507  001716                     l3323:
  5508  001716  0E17               	movlw	23
  5509  001718  6428               	cpfsgt	___fttol@exp1,c
  5510  00171A  D007               	goto	l3329
  5511  00171C  D7DB               	goto	l3301
  5512  00171E                     l3327:
  5513  00171E  90D8               	bcf	status,0,c
  5514  001720  3624               	rlcf	___fttol@lval,f,c
  5515  001722  3625               	rlcf	___fttol@lval+1,f,c
  5516  001724  3626               	rlcf	___fttol@lval+2,f,c
  5517  001726  3627               	rlcf	___fttol@lval+3,f,c
  5518  001728  0628               	decf	___fttol@exp1,f,c
  5519  00172A                     l3329:
  5520  00172A  6628               	tstfsz	___fttol@exp1,c
  5521  00172C  D7F8               	goto	l3327
  5522  00172E                     l3331:
  5523  00172E  5023               	movf	___fttol@sign1,w,c
  5524  001730  E008               	bz	l3335
  5525  001732  1E27               	comf	___fttol@lval+3,f,c
  5526  001734  1E26               	comf	___fttol@lval+2,f,c
  5527  001736  1E25               	comf	___fttol@lval+1,f,c
  5528  001738  6C24               	negf	___fttol@lval,c
  5529  00173A  0E00               	movlw	0
  5530  00173C  2225               	addwfc	___fttol@lval+1,f,c
  5531  00173E  2226               	addwfc	___fttol@lval+2,f,c
  5532  001740  2227               	addwfc	___fttol@lval+3,f,c
  5533  001742                     l3335:
  5534  001742  C024  F01A         	movff	___fttol@lval,?___fttol
  5535  001746  C025  F01B         	movff	___fttol@lval+1,?___fttol+1
  5536  00174A  C026  F01C         	movff	___fttol@lval+2,?___fttol+2
  5537  00174E  C027  F01D         	movff	___fttol@lval+3,?___fttol+3
  5538  001752  0012               	return	
  5539  001754                     __end_of___fttol:
  5540                           	opt stack 0
  5541  001754                     PL4:
  5542  001754  6E1E               	movwf	??___fttol& (0+255),c
  5543  001756  C01A  F01F         	movff	___fttol@f1,??___fttol+1
  5544  00175A  C01B  F020         	movff	___fttol@f1+1,??___fttol+2
  5545  00175E  C01C  F021         	movff	___fttol@f1+2,??___fttol+3
  5546  001762  281E               	incf	??___fttol,w,c
  5547  001764  6E22               	movwf	(??___fttol+4)& (0+255),c
  5548  001766  D004               	goto	u1410
  5549  001768                     u1415:
  5550  001768  90D8               	bcf	status,0,c
  5551  00176A  3221               	rrcf	??___fttol+3,f,c
  5552  00176C  3220               	rrcf	??___fttol+2,f,c
  5553  00176E  321F               	rrcf	??___fttol+1,f,c
  5554  001770                     u1410:
  5555  001770  2E22               	decfsz	(??___fttol+4)& (0+255),f,c
  5556  001772  D7FA               	goto	u1415
  5557  001774  501F               	movf	??___fttol+1,w,c
  5558  001776  0012               	return	
  5559                           tblptru	equ	0xFF8
  5560                           tblptrh	equ	0xFF7
  5561                           tblptrl	equ	0xFF6
  5562                           tablat	equ	0xFF5
  5563                           prodh	equ	0xFF4
  5564                           prodl	equ	0xFF3
  5565                           intcon	equ	0xFF2
  5566                           postinc0	equ	0xFEE
  5567                           wreg	equ	0xFE8
  5568                           indf1	equ	0xFE7
  5569                           postdec1	equ	0xFE5
  5570                           fsr1h	equ	0xFE2
  5571                           fsr1l	equ	0xFE1
  5572                           indf2	equ	0xFDF
  5573                           postinc2	equ	0xFDE
  5574                           postdec2	equ	0xFDD
  5575                           fsr2h	equ	0xFDA
  5576                           fsr2l	equ	0xFD9
  5577                           status	equ	0xFD8
  5578                           
  5579 ;; *************** function ___lwdiv *****************
  5580 ;; Defined at:
  5581 ;;		line 10 in file "D:\HI-TECH Software\PICC-18\9.80\sources\lwdiv.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;  dividend        2    0[COMRAM] unsigned int 
  5584 ;;  divisor         2    2[COMRAM] unsigned int 
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;  quotient        2    4[COMRAM] unsigned int 
  5587 ;;  counter         1    6[COMRAM] unsigned char 
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  2    0[COMRAM] unsigned int 
  5590 ;; Registers used:
  5591 ;;		wreg, status,2, status,0
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: FFFFFFFF/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5597 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5598 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5600 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5601 ;;Total ram usage:        7 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    4
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_CalculateTime25msCounter
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text27
  5612  001C28                     __ptext27:
  5613                           	opt stack 0
  5614  001C28                     ___lwdiv:
  5615                           	opt stack 23
  5616  001C28  6A05               	clrf	___lwdiv@quotient,c
  5617  001C2A  6A06               	clrf	___lwdiv@quotient+1,c
  5618  001C2C  5004               	movf	___lwdiv@divisor+1,w,c
  5619  001C2E  1003               	iorwf	___lwdiv@divisor,w,c
  5620  001C30  E01B               	bz	l1067
  5621  001C32  0E01               	movlw	1
  5622  001C34  6E07               	movwf	___lwdiv@counter,c
  5623  001C36  D004               	goto	l3347
  5624  001C38                     l3345:
  5625  001C38  90D8               	bcf	status,0,c
  5626  001C3A  3603               	rlcf	___lwdiv@divisor,f,c
  5627  001C3C  3604               	rlcf	___lwdiv@divisor+1,f,c
  5628  001C3E  2A07               	incf	___lwdiv@counter,f,c
  5629  001C40                     l3347:
  5630  001C40  AE04               	btfss	___lwdiv@divisor+1,7,c
  5631  001C42  D7FA               	goto	l3345
  5632  001C44                     l3349:
  5633  001C44  90D8               	bcf	status,0,c
  5634  001C46  3605               	rlcf	___lwdiv@quotient,f,c
  5635  001C48  3606               	rlcf	___lwdiv@quotient+1,f,c
  5636  001C4A  5003               	movf	___lwdiv@divisor,w,c
  5637  001C4C  5C01               	subwf	___lwdiv@dividend,w,c
  5638  001C4E  5004               	movf	___lwdiv@divisor+1,w,c
  5639  001C50  5802               	subwfb	___lwdiv@dividend+1,w,c
  5640  001C52  E305               	bnc	l3357
  5641  001C54  5003               	movf	___lwdiv@divisor,w,c
  5642  001C56  5E01               	subwf	___lwdiv@dividend,f,c
  5643  001C58  5004               	movf	___lwdiv@divisor+1,w,c
  5644  001C5A  5A02               	subwfb	___lwdiv@dividend+1,f,c
  5645  001C5C  8005               	bsf	___lwdiv@quotient,0,c
  5646  001C5E                     l3357:
  5647  001C5E  90D8               	bcf	status,0,c
  5648  001C60  3204               	rrcf	___lwdiv@divisor+1,f,c
  5649  001C62  3203               	rrcf	___lwdiv@divisor,f,c
  5650  001C64  2E07               	decfsz	___lwdiv@counter,f,c
  5651  001C66  D7EE               	goto	l3349
  5652  001C68                     l1067:
  5653  001C68  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  5654  001C6C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5655  001C70  0012               	return	
  5656  001C72                     __end_of___lwdiv:
  5657                           	opt stack 0
  5658                           tblptru	equ	0xFF8
  5659                           tblptrh	equ	0xFF7
  5660                           tblptrl	equ	0xFF6
  5661                           tablat	equ	0xFF5
  5662                           prodh	equ	0xFF4
  5663                           prodl	equ	0xFF3
  5664                           intcon	equ	0xFF2
  5665                           postinc0	equ	0xFEE
  5666                           wreg	equ	0xFE8
  5667                           indf1	equ	0xFE7
  5668                           postdec1	equ	0xFE5
  5669                           fsr1h	equ	0xFE2
  5670                           fsr1l	equ	0xFE1
  5671                           indf2	equ	0xFDF
  5672                           postinc2	equ	0xFDE
  5673                           postdec2	equ	0xFDD
  5674                           fsr2h	equ	0xFDA
  5675                           fsr2l	equ	0xFD9
  5676                           status	equ	0xFD8
  5677                           
  5678 ;; *************** function _IntServer *****************
  5679 ;; Defined at:
  5680 ;;		line 292 in file "G:\working\YellowFlashingController\YellowFlash.C"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;		None
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;		None
  5685 ;; Return value:  Size  Location     Type
  5686 ;;		None               void
  5687 ;; Registers used:
  5688 ;;		wreg, status,2, status,0, cstack
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: FFFFFFF0/0
  5693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5698 ;;Total ram usage:        0 bytes
  5699 ;; Hardware stack levels used:    1
  5700 ;; Hardware stack levels required when called:    3
  5701 ;; This function calls:
  5702 ;;		_TMR0IntServer
  5703 ;;		_TMR1IntServer
  5704 ;;		_ADIntServer
  5705 ;; This function is called by:
  5706 ;;		Interrupt level 2
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	intcode
  5711  000008                     __pintcode:
  5712                           	opt stack 0
  5713  000008                     _IntServer:
  5714                           	opt stack 22
  5715  000008                     
  5716                           ;YellowFlash.C: 295: if(TMR0IE && TMR0IF)
  5717  000008  AAF2               	btfss	intcon,5,c	;volatile
  5718  00000A  D001               	goto	i2u155_41
  5719  00000C  D001               	goto	i2u155_40
  5720  00000E                     i2u155_41:
  5721  00000E  D007               	goto	i2l3387
  5722  000010                     i2u155_40:
  5723  000010  A4F2               	btfss	intcon,2,c	;volatile
  5724  000012  D001               	goto	i2u156_41
  5725  000014  D001               	goto	i2u156_40
  5726  000016                     i2u156_41:
  5727  000016  D003               	goto	i2l3387
  5728  000018                     i2u156_40:
  5729  000018                     
  5730                           ;YellowFlash.C: 296: {
  5731                           ;YellowFlash.C: 298: TMR0IF = 0;
  5732  000018  94F2               	bcf	intcon,2,c	;volatile
  5733  00001A                     
  5734                           ;YellowFlash.C: 299: TMR0IntServer();
  5735  00001A  EC5D  F00F         	call	_TMR0IntServer	;wreg free
  5736  00001E                     i2l3387:
  5737                           
  5738                           ;YellowFlash.C: 300: }
  5739                           ;YellowFlash.C: 302: if(TMR1IE && TMR1IF)
  5740  00001E  A09D               	btfss	3997,0,c	;volatile
  5741  000020  D001               	goto	i2u157_41
  5742  000022  D001               	goto	i2u157_40
  5743  000024                     i2u157_41:
  5744  000024  D007               	goto	i2l3395
  5745  000026                     i2u157_40:
  5746  000026  A09E               	btfss	3998,0,c	;volatile
  5747  000028  D001               	goto	i2u158_41
  5748  00002A  D001               	goto	i2u158_40
  5749  00002C                     i2u158_41:
  5750  00002C  D003               	goto	i2l3395
  5751  00002E                     i2u158_40:
  5752  00002E                     
  5753                           ;YellowFlash.C: 303: {
  5754                           ;YellowFlash.C: 305: TMR1IF = 0;
  5755  00002E  909E               	bcf	3998,0,c	;volatile
  5756  000030                     
  5757                           ;YellowFlash.C: 306: TMR1IntServer();
  5758  000030  EC27  F00F         	call	_TMR1IntServer	;wreg free
  5759  000034                     i2l3395:
  5760                           
  5761                           ;YellowFlash.C: 311: {
  5762                           ;YellowFlash.C: 312: CANInt=1;
  5763  000034  506E               	movf	3950,w,c	;volatile
  5764  000036                     
  5765                           ;YellowFlash.C: 313: }
  5766                           ;YellowFlash.C: 314: if(ADIE && ADIF)
  5767  000036  AC9D               	btfss	3997,6,c	;volatile
  5768  000038  D001               	goto	i2u159_41
  5769  00003A  D001               	goto	i2u159_40
  5770  00003C                     i2u159_41:
  5771  00003C  D007               	goto	i2l520
  5772  00003E                     i2u159_40:
  5773  00003E  AC9E               	btfss	3998,6,c	;volatile
  5774  000040  D001               	goto	i2u160_41
  5775  000042  D001               	goto	i2u160_40
  5776  000044                     i2u160_41:
  5777  000044  D003               	goto	i2l520
  5778  000046                     i2u160_40:
  5779  000046                     
  5780                           ;YellowFlash.C: 315: {
  5781                           ;YellowFlash.C: 316: ADIF = 0;
  5782  000046  9C9E               	bcf	3998,6,c	;volatile
  5783  000048                     
  5784                           ;YellowFlash.C: 317: ADIntServer();
  5785  000048  EC64  F00F         	call	_ADIntServer	;wreg free
  5786  00004C                     i2l520:
  5787  00004C  0011               	retfie		f
  5788  00004E                     __end_of_IntServer:
  5789                           	opt stack 0
  5790                           tblptru	equ	0xFF8
  5791                           tblptrh	equ	0xFF7
  5792                           tblptrl	equ	0xFF6
  5793                           tablat	equ	0xFF5
  5794                           prodh	equ	0xFF4
  5795                           prodl	equ	0xFF3
  5796                           intcon	equ	0xFF2
  5797                           postinc0	equ	0xFEE
  5798                           wreg	equ	0xFE8
  5799                           indf1	equ	0xFE7
  5800                           postdec1	equ	0xFE5
  5801                           fsr1h	equ	0xFE2
  5802                           fsr1l	equ	0xFE1
  5803                           indf2	equ	0xFDF
  5804                           postinc2	equ	0xFDE
  5805                           postdec2	equ	0xFDD
  5806                           fsr2h	equ	0xFDA
  5807                           fsr2l	equ	0xFD9
  5808                           status	equ	0xFD8
  5809                           
  5810 ;; *************** function _TMR0IntServer *****************
  5811 ;; Defined at:
  5812 ;;		line 246 in file "G:\working\YellowFlashingController\YellowFlash.C"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;		None
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;		None
  5817 ;; Return value:  Size  Location     Type
  5818 ;;		None               void
  5819 ;; Registers used:
  5820 ;;		wreg, status,2
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: FFFFFFF0/0
  5825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5830 ;;Total ram usage:        0 bytes
  5831 ;; Hardware stack levels used:    1
  5832 ;; This function calls:
  5833 ;;		Nothing
  5834 ;; This function is called by:
  5835 ;;		_IntServer
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839                           	psect	text29
  5840  001EBA                     __ptext29:
  5841                           	opt stack 0
  5842  001EBA                     _TMR0IntServer:
  5843                           	opt stack 24
  5844                           
  5845                           ;YellowFlash.C: 248: TMR0H = 0xd8;
  5846  001EBA  0ED8               	movlw	216
  5847  001EBC  6ED7               	movwf	4055,c	;volatile
  5848                           
  5849                           ;YellowFlash.C: 249: TMR0L = 0xef;
  5850  001EBE  0EEF               	movlw	239
  5851  001EC0  6ED6               	movwf	4054,c	;volatile
  5852                           
  5853                           ;YellowFlash.C: 253: time5ms = 1;
  5854  001EC2  0100               	movlb	(_time5ms/(0+8)) shr (0+8)
  5855  001EC4  825F               	bsf	_time5ms/(0+8),_time5ms& (0+7),c
  5856  001EC6  0CEF               	retlw	239
  5857  001EC8                     __end_of_TMR0IntServer:
  5858                           	opt stack 0
  5859                           tblptru	equ	0xFF8
  5860                           tblptrh	equ	0xFF7
  5861                           tblptrl	equ	0xFF6
  5862                           tablat	equ	0xFF5
  5863                           prodh	equ	0xFF4
  5864                           prodl	equ	0xFF3
  5865                           intcon	equ	0xFF2
  5866                           postinc0	equ	0xFEE
  5867                           wreg	equ	0xFE8
  5868                           indf1	equ	0xFE7
  5869                           postdec1	equ	0xFE5
  5870                           fsr1h	equ	0xFE2
  5871                           fsr1l	equ	0xFE1
  5872                           indf2	equ	0xFDF
  5873                           postinc2	equ	0xFDE
  5874                           postdec2	equ	0xFDD
  5875                           fsr2h	equ	0xFDA
  5876                           fsr2l	equ	0xFD9
  5877                           status	equ	0xFD8
  5878                           
  5879 ;; *************** function _TMR1IntServer *****************
  5880 ;; Defined at:
  5881 ;;		line 258 in file "G:\working\YellowFlashingController\YellowFlash.C"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;		None
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;		None
  5886 ;; Return value:  Size  Location     Type
  5887 ;;		None               void
  5888 ;; Registers used:
  5889 ;;		wreg, status,2, status,0, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: FFFFFFF0/0
  5894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5899 ;;Total ram usage:        0 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:    2
  5902 ;; This function calls:
  5903 ;;		_YellowFlash
  5904 ;; This function is called by:
  5905 ;;		_IntServer
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909                           	psect	text30
  5910  001E4E                     __ptext30:
  5911                           	opt stack 0
  5912  001E4E                     _TMR1IntServer:
  5913                           	opt stack 22
  5914                           
  5915                           ;YellowFlash.C: 260: TMR1H = 0x3c;
  5916  001E4E  0E3C               	movlw	60
  5917  001E50  6ECF               	movwf	4047,c	;volatile
  5918                           
  5919                           ;YellowFlash.C: 261: TMR1L = 0xaf;
  5920  001E52  0EAF               	movlw	175
  5921  001E54  6ECE               	movwf	4046,c	;volatile
  5922                           
  5923                           ;YellowFlash.C: 264: t1_cont++;
  5924  001E56  0100               	movlb	0	; () banked
  5925  001E58  4BDE               	infsnz	_t1_cont& (0+255),f,b
  5926  001E5A  2BDF               	incf	(_t1_cont+1)& (0+255),f,b
  5927                           
  5928                           ; BSR set to: 0
  5929                           ;YellowFlash.C: 273: if(t1_cont>=time_counter)
  5930  001E5C  503C               	movf	_time_counter,w,c
  5931  001E5E  5DDE               	subwf	_t1_cont& (0+255),w,b
  5932  001E60  503D               	movf	_time_counter+1,w,c
  5933  001E62  59DF               	subwfb	(_t1_cont+1)& (0+255),w,b
  5934  001E64  A0D8               	btfss	status,0,c
  5935  001E66  0012               	return	
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;YellowFlash.C: 274: {
  5939                           ;YellowFlash.C: 275: t1_cont=0;
  5940  001E68  6BDE               	clrf	_t1_cont& (0+255),b
  5941  001E6A  6BDF               	clrf	(_t1_cont+1)& (0+255),b
  5942                           
  5943                           ; BSR set to: 0
  5944                           ;YellowFlash.C: 276: YellowFlash();
  5945  001E6C  EF55  F00F         	goto	_YellowFlash	;wreg free
  5946  001E70                     __end_of_TMR1IntServer:
  5947                           	opt stack 0
  5948                           tblptru	equ	0xFF8
  5949                           tblptrh	equ	0xFF7
  5950                           tblptrl	equ	0xFF6
  5951                           tablat	equ	0xFF5
  5952                           prodh	equ	0xFF4
  5953                           prodl	equ	0xFF3
  5954                           intcon	equ	0xFF2
  5955                           postinc0	equ	0xFEE
  5956                           wreg	equ	0xFE8
  5957                           indf1	equ	0xFE7
  5958                           postdec1	equ	0xFE5
  5959                           fsr1h	equ	0xFE2
  5960                           fsr1l	equ	0xFE1
  5961                           indf2	equ	0xFDF
  5962                           postinc2	equ	0xFDE
  5963                           postdec2	equ	0xFDD
  5964                           fsr2h	equ	0xFDA
  5965                           fsr2l	equ	0xFD9
  5966                           status	equ	0xFD8
  5967                           
  5968 ;; *************** function _YellowFlash *****************
  5969 ;; Defined at:
  5970 ;;		line 229 in file "G:\working\YellowFlashingController\YellowFlash.C"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;		None
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;		None
  5975 ;; Return value:  Size  Location     Type
  5976 ;;		None               void
  5977 ;; Registers used:
  5978 ;;		wreg, status,2, status,0, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : F/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: FFFFFFF0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5988 ;;Total ram usage:        0 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    1
  5991 ;; This function calls:
  5992 ;;		_LED_On_Disp
  5993 ;;		_LED_Off_Disp
  5994 ;; This function is called by:
  5995 ;;		_TMR1IntServer
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text31
  6000  001EAA                     __ptext31:
  6001                           	opt stack 0
  6002  001EAA                     _YellowFlash:
  6003                           	opt stack 22
  6004                           
  6005                           ; BSR set to: 0
  6006                           ;YellowFlash.C: 230: if(turnoff)
  6007  001EAA  505C               	movf	_turnoff,w,c
  6008  001EAC  B4D8               	btfsc	status,2,c
  6009  001EAE  0012               	return	
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;YellowFlash.C: 231: {
  6013                           ;YellowFlash.C: 232: if(switchmode)
  6014  001EB0  B05F               	btfsc	_switchmode/(0+8),_switchmode& (0+7),c
  6015                           
  6016                           ;YellowFlash.C: 233: {
  6017                           ;YellowFlash.C: 234: LED_On_Disp();
  6018  001EB2  EFF6  F00E         	goto	i2l2843	;wreg free
  6019                           
  6020                           ;YellowFlash.C: 236: else
  6021                           ;YellowFlash.C: 237: {
  6022                           ;YellowFlash.C: 238: LED_Off_Disp();
  6023                           
  6024                           ;YellowFlash.C: 235: }
  6025  001EB6  EFE2  F00E         	goto	i2l2849	;wreg free
  6026  001EBA                     __end_of_YellowFlash:
  6027                           	opt stack 0
  6028                           tblptru	equ	0xFF8
  6029                           tblptrh	equ	0xFF7
  6030                           tblptrl	equ	0xFF6
  6031                           tablat	equ	0xFF5
  6032                           prodh	equ	0xFF4
  6033                           prodl	equ	0xFF3
  6034                           intcon	equ	0xFF2
  6035                           postinc0	equ	0xFEE
  6036                           wreg	equ	0xFE8
  6037                           indf1	equ	0xFE7
  6038                           postdec1	equ	0xFE5
  6039                           fsr1h	equ	0xFE2
  6040                           fsr1l	equ	0xFE1
  6041                           indf2	equ	0xFDF
  6042                           postinc2	equ	0xFDE
  6043                           postdec2	equ	0xFDD
  6044                           fsr2h	equ	0xFDA
  6045                           fsr2l	equ	0xFD9
  6046                           status	equ	0xFD8
  6047                           
  6048 ;; *************** function _LED_On_Disp *****************
  6049 ;; Defined at:
  6050 ;;		line 179 in file "G:\working\YellowFlashingController\YellowFlash.C"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;		None
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;		None
  6055 ;; Return value:  Size  Location     Type
  6056 ;;		None               void
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, status,0
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: FFFFFFF0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6068 ;;Total ram usage:        0 bytes
  6069 ;; Hardware stack levels used:    1
  6070 ;; This function calls:
  6071 ;;		Nothing
  6072 ;; This function is called by:
  6073 ;;		_YellowFlash
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           
  6077                           	psect	text32
  6078  001DDC                     __ptext32:
  6079                           	opt stack 0
  6080  001DDC                     _LED_On_Disp:
  6081                           	opt stack 22
  6082                           
  6083                           ;YellowFlash.C: 180: switch(run_mode)
  6084  001DDC  D007               	goto	i2l2843
  6085  001DDE                     i2l485:
  6086                           
  6087                           ;YellowFlash.C: 186: RC6=0;
  6088  001DDE  9C82               	bcf	3970,6,c	;volatile
  6089                           
  6090                           ;YellowFlash.C: 187: RC4=0;
  6091  001DE0  9882               	bcf	3970,4,c	;volatile
  6092  001DE2  D002               	goto	L7
  6093  001DE4                     i2l487:
  6094                           
  6095                           ;YellowFlash.C: 192: RC6=1;
  6096  001DE4  8C82               	bsf	3970,6,c	;volatile
  6097                           
  6098                           ;YellowFlash.C: 193: RC4=1;
  6099  001DE6  8882               	bsf	3970,4,c	;volatile
  6100  001DE8                     L7:
  6101                           
  6102                           ;YellowFlash.C: 194: RD3=0;
  6103  001DE8  9683               	bcf	3971,3,c	;volatile
  6104                           
  6105                           ;YellowFlash.C: 195: break;
  6106  001DEA  D005               	goto	i2l486
  6107  001DEC                     i2l2843:
  6108  001DEC  504A               	movf	_run_mode,w,c
  6109                           
  6110                           ; Switch size 1, requested type "space"
  6111                           ; Number of cases is 2, Range of values is 1 to 2
  6112                           ; switch strategies available:
  6113                           ; Name         Instructions Cycles
  6114                           ; simple_byte            7     4 (average)
  6115                           ;	Chosen strategy is simple_byte
  6116  001DEE  0A01               	xorlw	1	; case 1
  6117  001DF0  E0F6               	bz	i2l485
  6118  001DF2  0A03               	xorlw	3	; case 2
  6119  001DF4  E0F7               	bz	i2l487
  6120  001DF6                     i2l486:
  6121                           
  6122                           ;YellowFlash.C: 200: time_counter=time_on_counter;
  6123  001DF6  C042  F03C         	movff	_time_on_counter,_time_counter
  6124  001DFA  C043  F03D         	movff	_time_on_counter+1,_time_counter+1
  6125                           
  6126                           ;YellowFlash.C: 201: switchmode=0;
  6127  001DFE  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  6128  001E00  905F               	bcf	_switchmode/(0+8),_switchmode& (0+7),c
  6129  001E02  0012               	return	
  6130  001E04                     __end_of_LED_On_Disp:
  6131                           	opt stack 0
  6132                           tblptru	equ	0xFF8
  6133                           tblptrh	equ	0xFF7
  6134                           tblptrl	equ	0xFF6
  6135                           tablat	equ	0xFF5
  6136                           prodh	equ	0xFF4
  6137                           prodl	equ	0xFF3
  6138                           intcon	equ	0xFF2
  6139                           postinc0	equ	0xFEE
  6140                           wreg	equ	0xFE8
  6141                           indf1	equ	0xFE7
  6142                           postdec1	equ	0xFE5
  6143                           fsr1h	equ	0xFE2
  6144                           fsr1l	equ	0xFE1
  6145                           indf2	equ	0xFDF
  6146                           postinc2	equ	0xFDE
  6147                           postdec2	equ	0xFDD
  6148                           fsr2h	equ	0xFDA
  6149                           fsr2l	equ	0xFD9
  6150                           status	equ	0xFD8
  6151                           
  6152 ;; *************** function _LED_Off_Disp *****************
  6153 ;; Defined at:
  6154 ;;		line 204 in file "G:\working\YellowFlashingController\YellowFlash.C"
  6155 ;; Parameters:    Size  Location     Type
  6156 ;;		None
  6157 ;; Auto vars:     Size  Location     Type
  6158 ;;		None
  6159 ;; Return value:  Size  Location     Type
  6160 ;;		None               void
  6161 ;; Registers used:
  6162 ;;		wreg, status,2, status,0
  6163 ;; Tracked objects:
  6164 ;;		On entry : 0/0
  6165 ;;		On exit  : 0/0
  6166 ;;		Unchanged: FFFFFFF0/0
  6167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6172 ;;Total ram usage:        0 bytes
  6173 ;; Hardware stack levels used:    1
  6174 ;; This function calls:
  6175 ;;		Nothing
  6176 ;; This function is called by:
  6177 ;;		_YellowFlash
  6178 ;; This function uses a non-reentrant model
  6179 ;;
  6180                           
  6181                           	psect	text33
  6182  001DB4                     __ptext33:
  6183                           	opt stack 0
  6184  001DB4                     _LED_Off_Disp:
  6185                           	opt stack 22
  6186                           
  6187                           ;YellowFlash.C: 205: switch(run_mode)
  6188  001DB4  D007               	goto	i2l2849
  6189  001DB6                     i2l493:
  6190                           
  6191                           ;YellowFlash.C: 210: RC6=1;
  6192  001DB6  8C82               	bsf	3970,6,c	;volatile
  6193                           
  6194                           ;YellowFlash.C: 211: RC4=1;
  6195  001DB8  8882               	bsf	3970,4,c	;volatile
  6196  001DBA  D002               	goto	L8
  6197  001DBC                     i2l495:
  6198                           
  6199                           ;YellowFlash.C: 215: RC6=0;
  6200  001DBC  9C82               	bcf	3970,6,c	;volatile
  6201                           
  6202                           ;YellowFlash.C: 216: RC4=0;
  6203  001DBE  9882               	bcf	3970,4,c	;volatile
  6204  001DC0                     L8:
  6205                           
  6206                           ;YellowFlash.C: 217: RD3=1;
  6207  001DC0  8683               	bsf	3971,3,c	;volatile
  6208                           
  6209                           ;YellowFlash.C: 218: break;
  6210  001DC2  D005               	goto	i2l494
  6211  001DC4                     i2l2849:
  6212  001DC4  504A               	movf	_run_mode,w,c
  6213                           
  6214                           ; Switch size 1, requested type "space"
  6215                           ; Number of cases is 2, Range of values is 1 to 2
  6216                           ; switch strategies available:
  6217                           ; Name         Instructions Cycles
  6218                           ; simple_byte            7     4 (average)
  6219                           ;	Chosen strategy is simple_byte
  6220  001DC6  0A01               	xorlw	1	; case 1
  6221  001DC8  E0F6               	bz	i2l493
  6222  001DCA  0A03               	xorlw	3	; case 2
  6223  001DCC  E0F7               	bz	i2l495
  6224  001DCE                     i2l494:
  6225                           
  6226                           ;YellowFlash.C: 222: time_counter=time_off_counter;
  6227  001DCE  C040  F03C         	movff	_time_off_counter,_time_counter
  6228  001DD2  C041  F03D         	movff	_time_off_counter+1,_time_counter+1
  6229                           
  6230                           ;YellowFlash.C: 223: switchmode=1;
  6231  001DD6  0100               	movlb	(_switchmode/(0+8)) shr (0+8)
  6232  001DD8  805F               	bsf	_switchmode/(0+8),_switchmode& (0+7),c
  6233  001DDA  0012               	return	
  6234  001DDC                     __end_of_LED_Off_Disp:
  6235                           	opt stack 0
  6236                           tblptru	equ	0xFF8
  6237                           tblptrh	equ	0xFF7
  6238                           tblptrl	equ	0xFF6
  6239                           tablat	equ	0xFF5
  6240                           prodh	equ	0xFF4
  6241                           prodl	equ	0xFF3
  6242                           intcon	equ	0xFF2
  6243                           postinc0	equ	0xFEE
  6244                           wreg	equ	0xFE8
  6245                           indf1	equ	0xFE7
  6246                           postdec1	equ	0xFE5
  6247                           fsr1h	equ	0xFE2
  6248                           fsr1l	equ	0xFE1
  6249                           indf2	equ	0xFDF
  6250                           postinc2	equ	0xFDE
  6251                           postdec2	equ	0xFDD
  6252                           fsr2h	equ	0xFDA
  6253                           fsr2l	equ	0xFD9
  6254                           status	equ	0xFD8
  6255                           
  6256 ;; *************** function _ADIntServer *****************
  6257 ;; Defined at:
  6258 ;;		line 283 in file "G:\working\YellowFlashingController\YellowFlash.C"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;		None
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  adrel           2    0        unsigned int 
  6263 ;; Return value:  Size  Location     Type
  6264 ;;		None               void
  6265 ;; Registers used:
  6266 ;;		wreg
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: FFFFFFFF/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6276 ;;Total ram usage:        0 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; This function calls:
  6279 ;;		Nothing
  6280 ;; This function is called by:
  6281 ;;		_IntServer
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           	psect	text34
  6286  001EC8                     __ptext34:
  6287                           	opt stack 0
  6288  001EC8                     _ADIntServer:
  6289                           	opt stack 24
  6290                           
  6291                           ;YellowFlash.C: 286: adrel = (ADRESH<<8)|ADRESL;
  6292  001EC8  50C4               	movf	4036,w,c	;volatile
  6293  001ECA  50C3               	movf	4035,w,c	;volatile
  6294  001ECC  0012               	return	
  6295  001ECE                     __end_of_ADIntServer:
  6296                           	opt stack 0
  6297                           tblptru	equ	0xFF8
  6298                           tblptrh	equ	0xFF7
  6299                           tblptrl	equ	0xFF6
  6300                           tablat	equ	0xFF5
  6301                           prodh	equ	0xFF4
  6302                           prodl	equ	0xFF3
  6303                           intcon	equ	0xFF2
  6304                           postinc0	equ	0xFEE
  6305                           wreg	equ	0xFE8
  6306                           indf1	equ	0xFE7
  6307                           postdec1	equ	0xFE5
  6308                           fsr1h	equ	0xFE2
  6309                           fsr1l	equ	0xFE1
  6310                           indf2	equ	0xFDF
  6311                           postinc2	equ	0xFDE
  6312                           postdec2	equ	0xFDD
  6313                           fsr2h	equ	0xFDA
  6314                           fsr2l	equ	0xFD9
  6315                           status	equ	0xFD8
  6316                           tblptru	equ	0xFF8
  6317                           tblptrh	equ	0xFF7
  6318                           tblptrl	equ	0xFF6
  6319                           tablat	equ	0xFF5
  6320                           prodh	equ	0xFF4
  6321                           prodl	equ	0xFF3
  6322                           intcon	equ	0xFF2
  6323                           postinc0	equ	0xFEE
  6324                           wreg	equ	0xFE8
  6325                           indf1	equ	0xFE7
  6326                           postdec1	equ	0xFE5
  6327                           fsr1h	equ	0xFE2
  6328                           fsr1l	equ	0xFE1
  6329                           indf2	equ	0xFDF
  6330                           postinc2	equ	0xFDE
  6331                           postdec2	equ	0xFDD
  6332                           fsr2h	equ	0xFDA
  6333                           fsr2l	equ	0xFD9
  6334                           status	equ	0xFD8
  6335                           
  6336                           	psect	rparam
  6337  0000                     tblptru	equ	0xFF8
  6338                           tblptrh	equ	0xFF7
  6339                           tblptrl	equ	0xFF6
  6340                           tablat	equ	0xFF5
  6341                           prodh	equ	0xFF4
  6342                           prodl	equ	0xFF3
  6343                           intcon	equ	0xFF2
  6344                           postinc0	equ	0xFEE
  6345                           wreg	equ	0xFE8
  6346                           indf1	equ	0xFE7
  6347                           postdec1	equ	0xFE5
  6348                           fsr1h	equ	0xFE2
  6349                           fsr1l	equ	0xFE1
  6350                           indf2	equ	0xFDF
  6351                           postinc2	equ	0xFDE
  6352                           postdec2	equ	0xFDD
  6353                           fsr2h	equ	0xFDA
  6354                           fsr2l	equ	0xFD9
  6355                           status	equ	0xFD8
  6356                           tblptru	equ	0xFF8
  6357                           tblptrh	equ	0xFF7
  6358                           tblptrl	equ	0xFF6
  6359                           tablat	equ	0xFF5
  6360                           prodh	equ	0xFF4
  6361                           prodl	equ	0xFF3
  6362                           intcon	equ	0xFF2
  6363                           postinc0	equ	0xFEE
  6364                           wreg	equ	0xFE8
  6365                           indf1	equ	0xFE7
  6366                           postdec1	equ	0xFE5
  6367                           fsr1h	equ	0xFE2
  6368                           fsr1l	equ	0xFE1
  6369                           indf2	equ	0xFDF
  6370                           postinc2	equ	0xFDE
  6371                           postdec2	equ	0xFDD
  6372                           fsr2h	equ	0xFDA
  6373                           fsr2l	equ	0xFD9
  6374                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    5
    Data        130
    BSS         689
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     59      95
    BANK0           160      0     144
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ?___ftpack	float  size(1) Largest target is 0

    CANSend@id	PTR unsigned char  size(1) Largest target is 4
		 -> CANSid(BANK0[4]), 

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 0

    ?___ftmul	float  size(1) Largest target is 0

    CANDATAAnalyzing@id	PTR unsigned char  size(1) Largest target is 4
		 -> CANRid(BANK0[4]), 

    CANDATAAnalyzing@dat	PTR unsigned char  size(1) Largest target is 8
		 -> CANRdata(BANK0[8]), 

    EEPROMWrite@num	PTR unsigned char  size(1) Largest target is 1
		 -> eeprom_num(COMRAM[1]), 

    EEPROMWrite@dat	PTR unsigned char  size(2) Largest target is 8
		 -> readwrite(COMRAM[2]), CANRdata(BANK0[8]), 

    EEPROMWrite@addr	PTR unsigned char  size(1) Largest target is 2
		 -> eeprom_addr(COMRAM[2]), 

    EEPROMRead@num	PTR unsigned char  size(1) Largest target is 1
		 -> eeprom_num(COMRAM[1]), 

    EEPROMRead@dat	PTR unsigned char  size(1) Largest target is 8
		 -> yflash_CFG(COMRAM[2]), readwrite(COMRAM[2]), CANSdata(COMRAM[8]), 

    EEPROMRead@addr	PTR unsigned char  size(1) Largest target is 2
		 -> eeprom_addr(COMRAM[2]), 

    CANRecv@dat	PTR unsigned char  size(1) Largest target is 8
		 -> CANRdata(BANK0[8]), 

    CANRecv@dlc	PTR unsigned char  size(1) Largest target is 1
		 -> CANRdlc(COMRAM[1]), 

    CANRecv@id	PTR unsigned char  size(1) Largest target is 4
		 -> CANRid(BANK0[4]), 

    CANSend@dat	PTR unsigned char  size(1) Largest target is 8
		 -> CANSdata(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_CANDATAAnalyzing
    _CANRecv->_GetAddr
    _GetAddr->_GetLampBoardAddr
    _CANInit->_CANSetID
    _delayms->_delayus
    _CANSendConfirm->_CANSend
    _CANWriteID->_EEPROMWrite
    _CANWriteID->_CANSendID
    _CANSendID->_EEPROMRead
    _YFlashNewConfigure->_CalculateTime25msCounter
    _CalculateTime25msCounter->___fttol
    _CANReadVersion->_CANSend
    _Read_YFlash_CFG->_EEPROMRead
    ___ftmul->___ftpack
    ___fttol->___ftmul

Critical Paths under _IntServer in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _IntServer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _IntServer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _IntServer in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IntServer in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _IntServer in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _IntServer in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _IntServer in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _IntServer in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _IntServer in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _IntServer in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _IntServer in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _IntServer in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _IntServer in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _IntServer in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _IntServer in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6816
                            _delayms
                           _PORTInit
                         _IntManager
                            _GetAddr
                            _CANInit
                            _CANRecv
                   _CANDATAAnalyzing
                      _HeartbeatTest
 ---------------------------------------------------------------------------------
 (1) _CANRecv                                              3     1      2    1175
                                              5 COMRAM     3     1      2
                            _GetAddr
                            _CANInit
 ---------------------------------------------------------------------------------
 (2) _GetAddr                                              2     2      0     141
                                              3 COMRAM     2     2      0
                   _GetLampBoardAddr
 ---------------------------------------------------------------------------------
 (3) _GetLampBoardAddr                                     3     3      0      93
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _CANInit                                              1     1      0     176
                                              3 COMRAM     1     1      0
                           _CANSetID
                       _CANFilterSet
                          _CANErrClr
 ---------------------------------------------------------------------------------
 (3) _CANFilterSet                                         2     1      1      66
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _CANErrClr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CANSetID                                             3     2      1      66
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _delayms                                              4     2      2      93
                                              4 COMRAM     4     2      2
                            _delayus
 ---------------------------------------------------------------------------------
 (2) _delayus                                              4     2      2      47
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PORTInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IntManager                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CANDATAAnalyzing                                     7     5      2    5142
                                             52 COMRAM     7     5      2
                     _CANSendConfirm
                          _CANSendID
                         _CANWriteID
                         _EEPROMRead
                            _CANSend
                 _YFlashNewConfigure
                    _Read_YFlash_CFG
                     _CANReadVersion
 ---------------------------------------------------------------------------------
 (2) _CANSendConfirm                                       1     1      0     684
                                              2 COMRAM     1     1      0
                            _CANSend
 ---------------------------------------------------------------------------------
 (2) _CANWriteID                                           1     1      0     816
                                              4 COMRAM     1     1      0
                        _EEPROMWrite
                          _CANSendID
 ---------------------------------------------------------------------------------
 (3) _CANSendID                                            1     1      0     705
                                              3 COMRAM     1     1      0
                         _EEPROMRead
                            _CANSend
 ---------------------------------------------------------------------------------
 (2) _YFlashNewConfigure                                   0     0      0    1483
                         _EEPROMRead
                        _EEPROMWrite
           _CalculateTime25msCounter
 ---------------------------------------------------------------------------------
 (3) _EEPROMWrite                                          4     1      3      89
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _CalculateTime25msCounter                            12    11      1    1305
                                             40 COMRAM    12    11      1
                            ___ftmul
                            ___fttol
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) _CANReadVersion                                       1     1      0     594
                                              2 COMRAM     1     1      0
                            _CANSend
 ---------------------------------------------------------------------------------
 (3) _CANSend                                              3     1      2     594
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _HeartbeatTest                                        0     0      0      89
                    _Read_YFlash_CFG
 ---------------------------------------------------------------------------------
 (2) _Read_YFlash_CFG                                      0     0      0      89
                         _EEPROMRead
 ---------------------------------------------------------------------------------
 (3) _EEPROMRead                                           3     1      2      89
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             17    11      6     535
                                              8 COMRAM    17    11      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5     209
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     252
                                             25 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     162
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _IntServer                                            0     0      0       0
                      _TMR0IntServer
                      _TMR1IntServer
                        _ADIntServer
 ---------------------------------------------------------------------------------
 (7) _TMR0IntServer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1IntServer                                        0     0      0       0
                        _YellowFlash
 ---------------------------------------------------------------------------------
 (8) _YellowFlash                                          0     0      0       0
                        _LED_On_Disp
                       _LED_Off_Disp
 ---------------------------------------------------------------------------------
 (9) _LED_On_Disp                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _LED_Off_Disp                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADIntServer                                          2     2      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delayms
     _delayus
   _PORTInit
   _IntManager
   _GetAddr
     _GetLampBoardAddr
   _CANInit
     _CANSetID
     _CANFilterSet
     _CANErrClr
   _CANRecv
     _GetAddr
       _GetLampBoardAddr
     _CANInit
       _CANSetID
       _CANFilterSet
       _CANErrClr
   _CANDATAAnalyzing
     _CANSendConfirm
       _CANSend
     _CANSendID
       _EEPROMRead
       _CANSend
     _CANWriteID
       _EEPROMWrite
       _CANSendID
         _EEPROMRead
         _CANSend
     _EEPROMRead
     _CANSend
     _YFlashNewConfigure
       _EEPROMRead
       _EEPROMWrite
       _CalculateTime25msCounter
         ___ftmul
           ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
         ___lwdiv
     _Read_YFlash_CFG
       _EEPROMRead
     _CANReadVersion
       _CANSend
   _HeartbeatTest
     _Read_YFlash_CFG
       _EEPROMRead

 _IntServer (ROOT)
   _TMR0IntServer
   _TMR1IntServer
     _YellowFlash
       _LED_On_Disp
       _LED_Off_Disp
   _ADIntServer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     280      35       17.5%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      90       5       90.0%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F     3B      5F       1      100.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       D       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EF       6        0.0%
DATA                 0      0     37C       3        0.0%
CODE                 0      0       0       0        0.0%


HI-TECH Software PICC-18 Macro Assembler V9.80 build 11162 
Symbol Table                                                                                   Wed Jul 02 17:11:08 2014

         __size_of_Read_YFlash_CFG 004A                 __size_of_CANErrClr 0002  
                              l341 1BD4                                l325 1CC6  
                              l352 145C                                l353 1456  
                              l338 1B96                                l362 0F80  
                              l371 1C76                                l347 1426  
                              l348 1420                                l364 0FF6  
                              l357 148C                                l377 1A8A  
                              l561 10F4                                l378 1AC0  
                              l580 120C                                l477 12A8  
                              l582 1236                                l854 181A  
                              _RD2 007C1A                                _RC4 007C14  
                              _RD3 007C1B                                _RC5 007C15  
                              _RC6 007C16                 __size_of_CANSendID 0038  
           __end_of_CANSendConfirm 1D88                                prod 000FF3  
                              wreg 000FE8                    __end_of_CANInit 1BDA  
                     ?_LED_On_Disp 0001                    __end_of_CANRecv 1070  
                  __end_of_CANSend 1492                    ?_CANReadVersion 0001  
                             l1067 1C68                               l3031 1100  
                             l3027 10F8                               l3035 1106  
                             l2403 1B08                               l3211 1B5E  
                             l3301 16D4                               l3029 10FC  
                             l3037 113C                               l2421 1B0E  
                             l3303 16DE                               l3231 183A  
                             l3071 11A8                               l2415 1B0C  
                             l3215 1B80                               l3065 1196  
                             l2433 1B12                               l2409 1B0A  
                             l3331 172E                               l3323 1716  
                             l3235 1846                               l3227 1822  
                             l3091 11F0                               l3163 1264  
                             l3059 117C                               l2427 1B10  
                             l3237 1858                               l3229 1826  
                             l3069 11A2                               l2453 1B16  
                             l2461 1CB6                               l3335 1742  
                             l3327 171E                               l3319 1706  
                             l3239 1862                               l3263 1558  
                             l3079 11CA                               l2439 1B14  
                             l2463 1CBA                               l2471 1CE6  
                             l3345 1C38                               l3329 172A  
                             l3281 1584                               l2465 1CC0  
                             l3347 1C40                               l3291 15A4  
                             l3259 152C                               l2811 1E30  
                             l2395 1AEE                               l3357 1C5E  
                             l3349 1C44                               l3277 157C  
                             l2805 1E7E                               l2469 1CCA  
                             l3287 159C                               l2911 1CFE  
                             l2807 1E82                               l2815 1E40  
                             l2673 0F7C                               l2827 12AC  
                             l2747 106C                               l2909 1CFA  
                             l2961 1610                               l2797 1ACA  
                             l2973 1656                               l2967 1632  
                             l2895 1D5A                               _ADIE 007CEE  
                             _ADIF 007CF6                     EEPROMWrite@dat 0002  
                             _T0CS 007EAD                               u1025 12CE  
                             u1035 1304                               u1135 1114  
                             u1145 114E                               u1410 1770  
                             u1350 1518                               u1415 1768  
                             u1370 1544                               u1355 1516  
                             u1375 1542                     EEPROMWrite@num 0001  
                             _main 1B3A                       ___ftpack@arg 0001  
                     ___ftpack@exp 0004                               fsr1h 000FE2  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               _rows 0049  
                             prodh 000FF4                               prodl 000FF3  
                             start 004E                      ?_LED_Off_Disp 0001  
              __size_of_CANWriteID 002C                      __CFG_FOSC$HS1 000000  
                 __end_of_CANSetID 1C28                    __end_of_GetAddr 1CEA  
              __size_of_EEPROMRead 003E                       ___ftmul@cntr 0018  
                     ___ftmul@sign 0019                       ___fttol@exp1 0028  
                     ___fttol@lval 0024                              ?_main 0001  
                    _yflash_status 004C                              _EEADR 000F74  
             GetLampBoardAddr@addr 0003                    EEPROMWrite@addr 0004  
                  __end_of___ftmul 15DE                              _T1CON 000FCD  
                  __end_of___fttol 1754                    __end_of___lwdiv 1C72  
                            _ERRIF 007BBD                      __CFG_WDTEN$ON 000000  
                            i2l520 004C                              i2l518 0036  
                            i2l493 1DB6                              i2l485 1DDE  
                            i2l494 1DCE                              i2l486 1DF6  
                            i2l495 1DBC                              i2l487 1DE4  
                            _TMR0H 000FD7                              _TMR1H 000FCF  
                            _TMR0L 000FD6                              _TMR1L 000FCE  
                            _PORTB 000F81                              _TRISB 000F93  
                            _TRISC 000F94                              _TRISD 000F95  
                  ?_CANSendConfirm 0001                    __end_of_delayms 1E4E  
                  __end_of_delayus 1E90                      __CFG_WRTD$OFF 000000  
                 __end_of_PORTInit 1EAA                              _lines 0047  
                    ___ftpack@sign 0005                     __pbitbssCOMRAM 02F8  
                            tablat 000FF5                              status 000FD8  
         __end_of_CANDATAAnalyzing 12A0                  __end_of_CANErrClr 1ED4  
                   ??_LED_Off_Disp 0001                  __end_of_CANSendID 1D22  
                       _IntManager 1E04               __size_of_EEPROMWrite 005E  
             __size_of_ADIntServer 0006                       __end_of_main 0F06  
                    CANInit@b_addr 0004                          ??_CANInit 0004  
                        ??_CANRecv 0008                          ??_CANSend 0003  
                           ??_main 003C                      ___fttol@sign1 0023  
                ??_Read_YFlash_CFG 0004                      __activetblptr 000002  
            __size_of_CANFilterSet 0096                             _CANCON 000F6F  
                           _ADRESH 000FC4                             _EEADRH 000F75  
                           _ADRESL 000FC3                             _EEDATA 000F73  
                           _EECON1 000F7F                             _EECON2 000F7E  
                           _ANCON1 000F5C                             _T08BIT 007EAE  
                           _CANRid 00E8                             _CIOCON 000F70  
                           _CANSid 00EC                   __end_of___ftpack 1896  
                           i2l3401 0048                             i2l3381 0010  
                           i2l3391 002E                             i2l3383 0018  
                           i2l3393 0030                             i2l3385 001A  
                           i2l2843 1DEC                             i2l3395 0034  
                           i2l3387 001E                             i2l3379 0008  
                           i2l3397 003E                             i2l3389 0026  
                           i2l3399 0046                             i2l2849 1DC4  
                           _INTCON 000FF2                          ??_GetAddr 0004  
                           _RXB0D0 000F66                             _RXB0D1 000F67  
                           _RXB0D2 000F68                             _RXB0D3 000F69  
                           _RXB1D0 000F36                             _RXB0D4 000F6A  
                           _RXB1D1 000F37                             _RXB0D5 000F6B  
                           _RXB1D2 000F38                             _RXB0D6 000F6C  
                           _RXB1D3 000F39                             _RXB0D7 000F6D  
                           _RXB1D4 000F3A                             _RXB1D5 000F3B  
                           _RXB1D6 000F3C                             _RXB1D7 000F3D  
                           _RXB0IF 007BB8                             _RXB1IF 007BB9  
                           _TMR0IE 007F95                             _TMR0IF 007F92  
                           _TMR1IE 007CE8                             _TMR1IF 007CF0  
                   __CFG_WDTPS$256 000000                             _TXB0D0 000F26  
                           _TXB0D1 000F27                             _TXB0D2 000F28  
                           _TXB0D3 000F29                             _TMR0ON 007EAF  
                           _TXB1D0 000F16                             _TXB0D4 000F2A  
                           _TXB1D1 000F17                             _TXB0D5 000F2B  
                           _TXB1D2 000F18                             _TXB0D6 000F2C  
                           _TXB1D3 000F19                             _TXB0D7 000F2D  
                           _TXB2D0 000F06                             _TXB1D4 000F1A  
                           _TXB2D1 000F07                             _TXB1D5 000F1B  
                           _TXB2D2 000F08                             _TXB1D6 000F1C  
                           _TXB2D3 000F09                             _TXB1D7 000F1D  
                           _TXB2D4 000F0A                             _TXB2D5 000F0B  
                           _TXB2D6 000F0C                             _TXB2D7 000F0D  
                           _TXB0IF 007BBA                             _TXB1IF 007BBB  
                           _TXB2IF 007BBC                             _SWDTEN 007E88  
               __size_of_IntServer 0046          __size_of_GetLampBoardAddr 005C  
                   __CFG_XINST$OFF 000000                          CANRecv@id 0008  
                        CANSend@id 0001              __end_of_HeartbeatTest 1D58  
                        ??___ftmul 000F                          ??___fttol 001E  
                     _CANFilterSet 1778                          ??___lwdiv 0005  
                           clear_0 199E                             clear_1 19B0  
                           clear_2 19BE                             _period 00C0  
                        ??_delayms 0007                          ??_delayus 0003  
                     ??_CANWriteID 0005              ___ftmul@f3_as_product 0015  
                     ??_EEPROMRead 0003                       __pdataCOMRAM 005B  
      __size_of_YFlashNewConfigure 00B8                       __mediumconst 0000  
__size_of_CalculateTime25msCounter 00D2                             tblptrh 000FF7  
        ?_CalculateTime25msCounter 0029                             tblptrl 000FF6  
                           tblptru 000FF8                          ?_CANSetID 0001  
             __size_of_LED_On_Disp 0028              __end_of_TMR0IntServer 1EC8  
                       __accesstop 0060              __end_of_TMR1IntServer 1E70  
                      ?_IntManager 0001                 __end_of_CANWriteID 1DB4  
                       ___ftmul@f1 0009                         ___ftmul@f2 000C  
               __end_of_EEPROMRead 1CB0                         ___fttol@f1 001A  
                   __pcstackCOMRAM 0001                       __pidataBANK0 18A0  
                        ?_PORTInit 0001                      ??_YellowFlash 0001  
                __end_of_IntServer 004E                   ??_CANReadVersion 0003  
             __end_of_LED_Off_Disp 1DDC                         ??_CANSetID 0002  
                       __pbssBANK0 00DE                    __CFG_PLLCFG$OFF 000000  
        CalculateTime25msCounter@i 0031          CalculateTime25msCounter@j 0033  
                     _t500ms_count 004B                    _time_on_counter 0042  
                       ??_PORTInit 0001                   ??_CANSendConfirm 0003  
                          _ECANCON 000F72                            _CANSTAT 000F6E  
                        ?___ftpack 0001                            _CANInit 1B8C  
                          _CANRdlc 005D                            _CANRecv 0F06  
                          _CANSdlc 005B                            _CANSend 13EE  
                          _BRGCON1 000E43                            _BRGCON2 000E44  
                          _BRGCON3 000E45                     CANSetID@f_type 0001  
                       _eeprom_num 005E                __size_of_IntManager 0026  
                          _RXB0DLC 000F65                            _RXB1DLC 000F35  
                          _RXB0CON 000F60                            _RXB1CON 000F30  
                          _TXB0DLC 000F25                            _TXB1DLC 000F15  
                          _TXB0CON 000F20                            _TXB2DLC 000F05  
                          _TXB1CON 000F10                            _TXB2CON 000F00  
              __end_of_YellowFlash 1EBA                            _GetAddr 1CB0  
                ?_CANDATAAnalyzing 0035                   _GetLampBoardAddr 1ADE  
                          __Hparam 0000                            __Lparam 0000  
               ??_CANDATAAnalyzing 0037                    _Read_YFlash_CFG 1A0E  
                       CANRecv@dat 0006                         CANRecv@dlc 0007  
                        _CANErrClr 1ED2                            _t1_cont 00DE  
                       CANSend@dat 0001                         CANSend@dlc 0002  
                        _CANSendID 1CEA                            ___ftmul 1500  
                          ___fttol 16CA                            ___lwdiv 1C28  
                     __psmallconst 0F00                            __pcinit 1996  
                       ??___ftpack 0006                            _f_r_mod 0044  
                          __ramtop 0F00                            _delayms 1E2A  
                          _delayus 1E70                            __ptext0 1B3A  
                          __ptext1 0F06                            __ptext2 1CB0  
                          __ptext3 1ADE                            __ptext4 1B8C  
                          __ptext5 1778                            __ptext6 1ED2  
                          __ptext7 1BDA                            __ptext8 1E2A  
                          __ptext9 1E70                 CANFilterSet@f_type 0001  
                          _my_addr 0048                            _time5ms 02F9  
                          _time_on 0D01               end_of_initialization 1A04  
                          _turnoff 005C                      __Lmediumconst 0000  
                    ??_EEPROMWrite 0004                      ??_ADIntServer 0001  
              CANDATAAnalyzing@dat 0035                CANDATAAnalyzing@dlc 0036  
                       ?_CANErrClr 0001                         ?_CANSendID 0001  
                          postdec1 000FE5                            postdec2 000FDD  
                          postinc0 000FEE                            postinc2 000FDE  
 __end_of_CalculateTime25msCounter 1372              __size_of_LED_Off_Disp 0028  
                    EEPROMRead@dat 0002                      EEPROMRead@num 0001  
                      _YellowFlash 1EAA                         _yflash_CFG 0059  
                __size_of_CANSetID 004E            __end_of_Read_YFlash_CFG 1A58  
                     ??_IntManager 0001                       _LED_Off_Disp 1DB4  
                      ___ftmul@exp 0014                         _switchmode 02F8  
              __end_of_EEPROMWrite 1ADE                __end_of_ADIntServer 1ECE  
                    __pidataCOMRAM 1ECE         __end_of_YFlashNewConfigure 16AC  
                __size_of_PORTInit 001A                start_initialization 1996  
                    ??_LED_On_Disp 0001                 __end_of_IntManager 1E2A  
                        _IntServer 0008                       _cycledutyoff 0060  
           __size_of_HeartbeatTest 0036                       _force_status 0045  
                      ??_CANErrClr 0001                        ??_CANSendID 0004  
                 _time_off_counter 0040                        __pdataBANK0 0060  
                         ?_CANInit 0001                           ?_CANRecv 0006  
                         ?_CANSend 0001             __size_of_TMR0IntServer 000E  
         _CalculateTime25msCounter 12A0                  __size_of___ftpack 0088  
         __end_of_GetLampBoardAddr 1B3A                        __pbssBIGRAM 0BC1  
           __size_of_TMR1IntServer 0022                        __pbssCOMRAM 003C  
                       ?_IntServer 0001                __end_of_LED_On_Disp 1E04  
                         ?_GetAddr 0001                   ?_Read_YFlash_CFG 0001  
                      _EEPROMWrite 1A80                        _ADIntServer 1EC8  
                 ___lwdiv@dividend 0001                          __pintcode 0008  
                         ?___ftmul 0009                           ?___fttol 001A  
                         ?___lwdiv 0001                          _heartbeat 0046  
                    _HeartbeatTest 1D22                           ?_delayms 0005  
                         ?_delayus 0001                  GetAddr@board_type 0004  
        __size_of_CANDATAAnalyzing 01B2             CANFilterSet@board_addr 0002  
                      __smallconst 0F00                           _CANSetID 1BDA  
                         _CANRdata 00E0                           _CANSdata 004D  
                 ___lwdiv@quotient 0005                       CANWriteID@fm 0005  
                        _readwrite 0057            __size_of_CANReadVersion 0078  
                    _TMR0IntServer 1EBA                        _eeprom_addr 0055  
                        delayms@ms 0005                          delayus@us 0001  
                    _TMR1IntServer 1E4E                      _board_version 0F00  
                         i2u160_40 0046                           i2u160_41 0044  
                         i2u155_40 0010                           i2u155_41 000E  
                         i2u156_40 0018                           i2u156_41 0016  
                         i2u157_40 0026                           i2u157_41 0024  
                         i2u158_40 002E                           i2u158_41 002C  
                         i2u159_40 003E                           i2u159_41 003C  
               CANDATAAnalyzing@id 003B                           _RXB0EIDH 000F63  
                         _RXB0EIDL 000F64                           _RXB1EIDH 000F33  
                         _RXB1EIDL 000F34                           _RXB0SIDH 000F61  
                         _RXB0SIDL 000F62                           _RXF0EIDH 000EE2  
                         _RXB1SIDH 000F31                           _RXF0EIDL 000EE3  
                         _RXB1SIDL 000F32                           _RXF1EIDH 000EE6  
                         _RXF1EIDL 000EE7                           _RXF2EIDH 000EEA  
                         _RXF2EIDL 000EEB                           _RXF3EIDH 000EEE  
                         _RXF3EIDL 000EEF                           _RXF4EIDH 000EF2  
                         _RXF4EIDL 000EF3                           _RXF5EIDH 000EF6  
                         _RXF5EIDL 000EF7                           _RXF0SIDH 000EE0  
                         _RXF0SIDL 000EE1                           _TXB0EIDH 000F23  
                         _RXF1SIDH 000EE4                           _TXB0EIDL 000F24  
                         _RXF1SIDL 000EE5                           _TXB1EIDH 000F13  
                         _RXF2SIDH 000EE8                           _TXB1EIDL 000F14  
                         _RXF2SIDL 000EE9                           _TXB2EIDH 000F03  
                         _RXF3SIDH 000EEC                           _TXB2EIDL 000F04  
                         _RXF3SIDL 000EED                           _RXF4SIDH 000EF0  
                         _RXF4SIDL 000EF1                           _RXF5SIDH 000EF4  
                         _RXF5SIDL 000EF5                      ?_CANFilterSet 0001  
                         _RXM0EIDH 000EFA                           _RXM0EIDL 000EFB  
                         _TXB0SIDH 000F21                           _RXM1EIDH 000EFE  
                         _TXB0SIDL 000F22                           _RXM1EIDL 000EFF  
                   ?_HeartbeatTest 0001                           _TXB1SIDH 000F11  
                         _TXB1SIDL 000F12                           _TXB2SIDH 000F01  
                         _TXB2SIDL 000F02                           _RXM0SIDH 000EF8  
                         _RXM0SIDL 000EF9                           _RXM1SIDH 000EFC  
                         _RXM1SIDL 000EFD                           _PORTInit 1E90  
                 __CFG_SOSCSEL$DIG 000000                   __size_of_CANInit 004E  
                     ?_YellowFlash 0001                   __size_of_CANRecv 016A  
                 __size_of_CANSend 00A4       CalculateTime25msCounter@line 0029  
               CANSetID@board_addr 0003                        _LED_On_Disp 1DDC  
                      ??_IntServer 0001            __size_of_CANSendConfirm 0030  
                        copy_data0 19D8                          copy_data1 19F8  
                   ?_TMR0IntServer 0001                        _cycledutyon 0090  
                 __size_of_GetAddr 003A                     ?_TMR1IntServer 0001  
                         __Hrparam 0000                           __Lrparam 0000  
                      CANSendID@sm 0004                     ??_CANFilterSet 0002  
                 __size_of___ftmul 00DE                   __size_of___fttol 008A  
                 __size_of___lwdiv 004A                           ___ftpack 180E  
                 __size_of_delayms 0024                   __size_of_delayus 0020  
                       _CANWriteID 1D88                      _time_counters 003E  
                       _EEPROMRead 1C72                    ___lwdiv@divisor 0003  
                  ___lwdiv@counter 0007                           __ptext10 1E90  
                         __ptext11 1E04                           __ptext20 13EE  
                         __ptext12 10EE                           __ptext21 1D22  
                         __ptext13 1D58                           __ptext30 1E4E  
                         __ptext22 1A0E                           __ptext14 1D88  
                         __ptext31 1EAA                           __ptext23 1C72  
                         __ptext15 1CEA                           __ptext32 1DDC  
                         __ptext24 1500                           __ptext16 15F4  
                         __ptext33 1DB4                           __ptext25 180E  
                         __ptext17 1A80                           __ptext34 1EC8  
                         __ptext26 16CA                           __ptext18 12A0  
                         __ptext27 1C28                           __ptext19 191E  
                         __ptext29 1EBA                 _YFlashNewConfigure 15F4  
                    __size_of_main F3CC                ?_YFlashNewConfigure 0001  
                         delayms@i 0007                           delayus@i 0003  
       ??_CalculateTime25msCounter 002A                    ??_HeartbeatTest 0004  
                         _time_off 0BC1                           _run_mode 004A  
      CalculateTime25msCounter@row 0030                  GetLampBoardAddr@i 0001  
                 _CANDATAAnalyzing 10EE               ??_YFlashNewConfigure 0035  
                ?_GetLampBoardAddr 0001                         GetAddr@rel 0005  
               ??_GetLampBoardAddr 0001                    ??_TMR0IntServer 0001  
                     _time_counter 003C                           intlevel2 0000  
                   _CANReadVersion 191E                    ??_TMR1IntServer 0001  
                     ?_EEPROMWrite 0001                       ?_ADIntServer 0001  
                  CANSendConfirm@i 0003                        ?_CANWriteID 0001  
                      ?_EEPROMRead 0001               __size_of_YellowFlash 0010  
                   _CANSendConfirm 1D58             __end_of_CANReadVersion 1996  
                   EEPROMRead@addr 0003               __end_of_CANFilterSet 180E  
